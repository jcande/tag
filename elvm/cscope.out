cscope 15 $HOME/src/tag/others/elvm -q 0000002871 0000563271
	@8cc/8cc.h

3 #i‚de‡
EIGHTCC_H


4 
	#EIGHTCC_H


	)

6 
	~<as£π.h
>

7 
	~<öây≥s.h
>

8 
	~<°d¨g.h
>

9 
	~<°dboﬁ.h
>

10 
	~<°dio.h
>

11 
	~<°dn‹ëu∫.h
>

12 
	~<time.h
>

15 
	mTIDENT
,

16 
	mTKEYWORD
,

17 
	mTNUMBER
,

18 
	mTCHAR
,

19 
	mTSTRING
,

20 
	mTEOF
,

21 
	mTINVALID
,

23 
	mMIN_CPP_TOKEN
,

24 
	mTNEWLINE
,

25 
	mTSPACE
,

26 
	mTMACRO_PARAM
,

30 
	mENC_NONE
,

31 
	mENC_CHAR16
,

32 
	mENC_CHAR32
,

33 
	mENC_UTF8
,

34 
	mENC_WCHAR
,

38 **
	mbody
;

39 
	mÀn
;

40 
	m«Œoc
;

41 } 
	tVe˘‹
;

43 
	sM≠
 {

44 #ifde‡
__eú__


45 
M≠
 *
	m∑ª¡
;

46 
Ve˘‹
* 
	mv
;

48 
M≠
 *
	m∑ª¡
;

49 **
	mkey
;

50 **
	mvÆ
;

51 
	msize
;

52 
	m√Àm
;

53 
	mnu£d
;

55 } 
	tM≠
;

58 
M≠
 *
	mm≠
;

59 
Ve˘‹
 *
	mkey
;

60 } 
	tDi˘
;

62 
	sSë
 {

63 *
	mv
;

64 
Së
 *
	m√xt
;

65 } 
	tSë
;

68 *
	mbody
;

69 
	m«Œoc
;

70 
	mÀn
;

71 } 
	tBuf„r
;

74 
FILE
 *
	mfûe
;

75 *
	mp
;

76 *
	m«me
;

77 
	mlöe
;

78 
	mcﬁumn
;

79 
	m¡ok
;

80 
	mœ°
;

81 
	mbuf
[3];

82 
	mbuÊí
;

83 
time_t
 
	mmtime
;

84 } 
	tFûe
;

87 
	mköd
;

88 
Fûe
 *
	mfûe
;

89 
	mlöe
;

90 
	mcﬁumn
;

91 
boﬁ
 
	m•a˚
;

92 
boﬁ
 
	mbﬁ
;

93 
	mcou¡
;

94 
Së
 *
	mhide£t
;

97 
	mid
;

100 *
	msvÆ
;

101 
	m¶í
;

102 
	mc
;

103 
	míc
;

107 
boﬁ
 
	mis_v¨¨g
;

108 
	mposôi⁄
;

111 } 
	tTokí
;

114 
	mAST_LITERAL
 = 256,

115 
	mAST_LVAR
,

116 
	mAST_GVAR
,

117 
	mAST_TYPEDEF
,

118 
	mAST_FUNCALL
,

119 
	mAST_FUNCPTR_CALL
,

120 
	mAST_FUNCDESG
,

121 
	mAST_FUNC
,

122 
	mAST_DECL
,

123 
	mAST_INIT
,

124 
	mAST_CONV
,

125 
	mAST_ADDR
,

126 
	mAST_DEREF
,

127 
	mAST_IF
,

128 
	mAST_TERNARY
,

129 
	mAST_DEFAULT
,

130 
	mAST_RETURN
,

131 
	mAST_COMPOUND_STMT
,

132 
	mAST_STRUCT_REF
,

133 
	mAST_GOTO
,

134 
	mAST_COMPUTED_GOTO
,

135 
	mAST_LABEL
,

136 
	mOP_SIZEOF
,

137 
	mOP_CAST
,

138 
	mOP_SHR
,

139 
	mOP_SHL
,

140 
	mOP_A_SHR
,

141 
	mOP_A_SHL
,

142 
	mOP_PRE_INC
,

143 
	mOP_PRE_DEC
,

144 
	mOP_POST_INC
,

145 
	mOP_POST_DEC
,

146 
	mOP_LABEL_ADDR
,

147 
	#›
(
«me
, 
_
Ë«me,

	)

148 
	#keyw‹d
(
«me
, 
x
, 
y
Ë«me,

	)

149 
	~"keyw‹d.öc
"

150 #unde‡
keyw‹d


151 #unde‡
›


155 
	mKIND_VOID
,

156 
	mKIND_BOOL
,

157 
	mKIND_CHAR
,

158 
	mKIND_SHORT
,

159 
	mKIND_INT
,

160 
	mKIND_LONG
,

161 
	mKIND_LLONG
,

162 
	mKIND_FLOAT
,

163 
	mKIND_DOUBLE
,

164 
	mKIND_LDOUBLE
,

165 
	mKIND_ARRAY
,

166 
	mKIND_ENUM
,

167 
	mKIND_PTR
,

168 
	mKIND_STRUCT
,

169 
	mKIND_FUNC
,

171 
	mKIND_STUB
,

174 
	sTy≥
 {

175 
	mköd
;

176 
	msize
;

177 
	mÆign
;

178 
boﬁ
 
	musig
;

179 
boﬁ
 
	mis°©ic
;

181 
Ty≥
 *
	m±r
;

183 
	mÀn
;

185 
Di˘
 *
	mfõlds
;

186 
	moff£t
;

187 
boﬁ
 
	mis_°ru˘
;

189 
	mbôoff
;

190 
	mbôsize
;

192 
Ty≥
 *
	mªây≥
;

193 
Ve˘‹
 *
	m∑øms
;

194 
boﬁ
 
	mhasva
;

195 
boﬁ
 
	mﬁd°yÀ
;

196 } 
	tTy≥
;

199 *
	mfûe
;

200 
	mlöe
;

201 } 
	tSour˚Loc
;

203 
	sNode
 {

204 
	mköd
;

205 
Ty≥
 *
	mty
;

206 
Sour˚Loc
 *
	msour˚Loc
;

209 
	mivÆ
;

212 
	mfvÆ
;

213 *
	mÊabñ
;

217 *
	msvÆ
;

218 *
	m¶abñ
;

222 *
	mv¨«me
;

224 
	mloff
;

225 
Ve˘‹
 *
	mlv¨öô
;

227 *
	mgœbñ
;

231 
Node
 *
	mÀ·
;

232 
Node
 *
	mright
;

236 
Node
 *
	m›î™d
;

240 *
	m‚ame
;

242 
Ve˘‹
 *
	m¨gs
;

243 
Ty≥
 *
	m·y≥
;

245 
Node
 *
	mÂå
;

247 
Ve˘‹
 *
	m∑øms
;

248 
Ve˘‹
 *
	mloˇlv¨s
;

249 
Node
 *
	mbody
;

253 
Node
 *
	mde˛v¨
;

254 
Ve˘‹
 *
	mde˛öô
;

258 
Node
 *
	möôvÆ
;

259 
	möôoff
;

260 
Ty≥
 *
	mtŸy≥
;

264 
Node
 *
	mc⁄d
;

265 
Node
 *
	mthí
;

266 
Node
 *
	mñs
;

270 *
	mœbñ
;

271 *
	m√wœbñ
;

274 
Node
 *
	mªtvÆ
;

276 
Ve˘‹
 *
	m°mts
;

279 
Node
 *
	m°ruc
;

280 *
	mfõld
;

281 
Ty≥
 *
	mfõldty≥
;

284 } 
	tNode
;

286 
Ty≥
 *
ty≥_void
;

287 
Ty≥
 *
ty≥_boﬁ
;

288 
Ty≥
 *
ty≥_ch¨
;

289 
Ty≥
 *
ty≥_sh‹t
;

290 
Ty≥
 *
ty≥_öt
;

291 
Ty≥
 *
ty≥_l⁄g
;

292 
Ty≥
 *
ty≥_Œ⁄g
;

293 
Ty≥
 *
ty≥_uch¨
;

294 
Ty≥
 *
ty≥_ush‹t
;

295 
Ty≥
 *
ty≥_uöt
;

296 
Ty≥
 *
ty≥_ul⁄g
;

297 
Ty≥
 *
ty≥_uŒ⁄g
;

298 
Ty≥
 *
ty≥_Êﬂt
;

299 
Ty≥
 *
ty≥_doubÀ
;

300 
Ty≥
 *
ty≥_ldoubÀ
;

302 
	#EMPTY_MAP
 ((
M≠
){})

	)

303 
	#EMPTY_VECTOR
 ((
Ve˘‹
){})

	)

306 
Buf„r
 *
to_utf16
(*
p
, 
Àn
);

307 
Buf„r
 *
to_utf32
(*
p
, 
Àn
);

308 
wrôe_utf8
(
Buf„r
 *
b
, 
uöt32_t
 
ru√
);

311 
Buf„r
 *
make_buf„r
();

312 *
buf_body
(
Buf„r
 *
b
);

313 
buf_Àn
(
Buf„r
 *
b
);

314 
buf_wrôe
(
Buf„r
 *
b
, 
c
);

315 
buf_≠≥nd
(
Buf„r
 *
b
, *
s
, 
Àn
);

316 
buf_¥ötf
(
Buf„r
 *
b
, *
fmt
, ...);

317 *
vf‹m©
(*
fmt
, 
va_li°
 
≠
);

318 *
f‹m©
(*
fmt
, ...);

319 *
quŸe_c°rög
(*
p
);

320 *
quŸe_c°rög_Àn
(*
p
, 
Àn
);

321 *
quŸe_ch¨
(
c
);

324 
ªad_‰om_°rög
(*
buf
);

325 
boﬁ
 
is_idít
(
Tokí
 *
tok
, *
s
);

326 
ex≥˘_√wlöe
();

327 
add_ö˛ude_∑th
(*
∑th
);

328 
öô_now
();

329 
˝p_öô
();

330 
Tokí
 *
≥ek_tokí
();

331 
Tokí
 *
ªad_tokí
();

334 *
ty2s
(
Ty≥
 *
ty
);

335 *
node2s
(
Node
 *
node
);

336 *
tok2s
(
Tokí
 *
tok
);

339 
Di˘
 *
make_di˘
();

340 *
di˘_gë
(
Di˘
 *
di˘
, *
key
);

341 
di˘_put
(
Di˘
 *
di˘
, *
key
, *
vÆ
);

342 
Ve˘‹
 *
di˘_keys
(
Di˘
 *
di˘
);

345 
boﬁ
 
íabÀ_w¨nög
;

346 
boﬁ
 
dump°ack
;

347 
boﬁ
 
dumpsour˚
;

348 
boﬁ
 
w¨nög_is_îr‹
;

350 
	#STR2
(
x
Ë#x

	)

351 
	#STR
(
x
Ë
	`STR2
(x)

	)

352 
	#îr‹
(...Ë
	`îr‹f
(
__FILE__
 ":" 
	`STR
(
__LINE__
), 
NULL
, 
__VA_ARGS__
)

	)

353 
	#îr‹t
(
tok
, ...Ë
	`îr‹f
(
__FILE__
 ":" 
	`STR
(
__LINE__
), 
	`tokí_pos
—ok), 
__VA_ARGS__
)

	)

354 
	#w¨n
(...Ë
	`w¨nf
(
__FILE__
 ":" 
	`STR
(
__LINE__
), 
NULL
, 
__VA_ARGS__
)

	)

355 
	#w¨¡
(
tok
, ...Ë
	`w¨nf
(
__FILE__
 ":" 
	`STR
(
__LINE__
), 
	`tokí_pos
—ok), 
__VA_ARGS__
)

	)

357 
n‹ëu∫
 
îr‹f
(*
löe
, *
pos
, *
fmt
, ...);

358 
w¨nf
(*
löe
, *
pos
, *
fmt
, ...);

359 *
tokí_pos
(
Tokí
 *
tok
);

362 
Fûe
 *
make_fûe
(
FILE
 *
fûe
, *
«me
);

363 
Fûe
 *
make_fûe_°rög
(*
s
);

364 
ªadc
();

365 
uƒódc
(
c
);

366 
Fûe
 *
cuºít_fûe
();

367 
°ªam_push
(
Fûe
 *
fûe
);

368 
°ªam_dïth
();

369 *
öput_posôi⁄
();

370 
°ªam_°ash
(
Fûe
 *
f
);

371 
°ªam_un°ash
();

374 
£t_ouçut_fûe
(
FILE
 *
Â
);

375 
˛o£_ouçut_fûe
();

376 
emô_t›Àvñ
(
Node
 *
v
);

379 
Àx_öô
(*
fûíame
);

380 *
gë_ba£_fûe
();

381 
skù_c⁄d_ö˛
();

382 *
ªad_hódî_fûe_«me
(
boﬁ
 *
°d
);

383 
boﬁ
 
is_keyw‹d
(
Tokí
 *
tok
, 
c
);

384 
tokí_buf„r_°ash
(
Ve˘‹
 *
buf
);

385 
tokí_buf„r_un°ash
();

386 
ungë_tokí
(
Tokí
 *
tok
);

387 
Tokí
 *
Àx_°rög
(*
s
);

388 
Tokí
 *
Àx
();

391 
M≠
 *
make_m≠
();

392 
M≠
 *
make_m≠_∑ª¡
(M≠ *
∑ª¡
);

393 *
m≠_gë
(
M≠
 *
m
, *
key
);

394 
m≠_put
(
M≠
 *
m
, *
key
, *
vÆ
);

395 
m≠_ªmove
(
M≠
 *
m
, *
key
);

396 
size_t
 
m≠_Àn
(
M≠
 *
m
);

399 *
make_ãm≤ame
();

400 *
make_œbñ
();

401 
boﬁ
 
is_öây≥
(
Ty≥
 *
ty
);

402 
boﬁ
 
is_ÊŸy≥
(
Ty≥
 *
ty
);

403 *
make_∑ú
(*
fú°
, *
£c⁄d
);

404 
evÆ_öãx¥
(
Node
 *
node
, Nodê**
addr
);

405 
Node
 *
ªad_ex¥
();

406 
Ve˘‹
 *
ªad_t›Àvñs
();

407 
∑r£_öô
();

408 *
fuŒ∑th
(*
∑th
);

411 
Së
 *
£t_add
(Së *
s
, *
v
);

412 
boﬁ
 
£t_has
(
Së
 *
s
, *
v
);

413 
Së
 *
£t_uni⁄
(Së *
a
, Së *
b
);

414 
Së
 *
£t_öãr£˘i⁄
(Së *
a
, Së *
b
);

417 
Ve˘‹
 *
make_ve˘‹
();

418 
Ve˘‹
 *
make_ve˘‹1
(*
e
);

419 
Ve˘‹
 *
vec_c›y
(Ve˘‹ *
§c
);

420 
vec_push
(
Ve˘‹
 *
vec
, *
ñem
);

421 
vec_≠≥nd
(
Ve˘‹
 *
a
, Ve˘‹ *
b
);

422 *
vec_p›
(
Ve˘‹
 *
vec
);

423 *
vec_gë
(
Ve˘‹
 *
vec
, 
ödex
);

424 
vec_£t
(
Ve˘‹
 *
vec
, 
ödex
, *
vÆ
);

425 *
vec_hód
(
Ve˘‹
 *
vec
);

426 *
vec_èû
(
Ve˘‹
 *
vec
);

427 
Ve˘‹
 *
vec_ªvî£
(Ve˘‹ *
vec
);

428 *
vec_body
(
Ve˘‹
 *
vec
);

429 
vec_Àn
(
Ve˘‹
 *
vec
);

	@8cc/buffer.c

3 
	~<˘y≥.h
>

4 
	~<°d¨g.h
>

5 
	~<°dlib.h
>

6 
	~<°rög.h
>

7 
	~"8cc.h
"

9 
	#BUFFER_INIT_SIZE
 8

	)

11 
Buf„r
 *
	$make_buf„r
() {

12 
Buf„r
 *
r
 = 
	`mÆloc
((Buffer));

13 
r
->
body
 = 
	`mÆloc
(
BUFFER_INIT_SIZE
);

14 
r
->
«Œoc
 = 
BUFFER_INIT_SIZE
;

15 
r
->
Àn
 = 0;

16  
r
;

17 
	}
}

19 
	$ªÆloc_body
(
Buf„r
 *
b
) {

20 
√wsize
 = 
b
->
«Œoc
 * 2;

21 *
body
 = 
	`mÆloc
(
√wsize
);

22 
	`mem˝y
(
body
, 
b
->body, b->
Àn
);

23 
b
->
body
 = body;

24 
b
->
«Œoc
 = 
√wsize
;

25 
	}
}

27 *
	$buf_body
(
Buf„r
 *
b
) {

28  
b
->
body
;

29 
	}
}

31 
	$buf_Àn
(
Buf„r
 *
b
) {

32  
b
->
Àn
;

33 
	}
}

35 
	$buf_wrôe
(
Buf„r
 *
b
, 
c
) {

36 i‡(
b
->
«Œoc
 =(b->
Àn
 + 1))

37 
	`ªÆloc_body
(
b
);

38 
b
->
body
[b->
Àn
++] = 
c
;

39 
	}
}

41 
	$buf_≠≥nd
(
Buf„r
 *
b
, *
s
, 
Àn
) {

42 
i
 = 0; i < 
Àn
; i++)

43 
	`buf_wrôe
(
b
, 
s
[
i
]);

44 
	}
}

46 
	$buf_¥ötf
(
Buf„r
 *
b
, *
fmt
, ...) {

47 
va_li°
 
¨gs
;

49 
avaû
 = 
b
->
«Œoc
 - b->
Àn
;

50 
	`va_°¨t
(
¨gs
, 
fmt
);

51 
wrôãn
 = 
	`v¢¥ötf
(
b
->
body
 + b->
Àn
, 
avaû
, 
fmt
, 
¨gs
);

52 
	`va_íd
(
¨gs
);

53 i‡(
avaû
 <
wrôãn
) {

54 
	`ªÆloc_body
(
b
);

57 
b
->
Àn
 +
wrôãn
;

60 
	}
}

62 *
	$vf‹m©
(*
fmt
, 
va_li°
 
≠
) {

63 
Buf„r
 *
b
 = 
	`make_buf„r
();

64 
va_li°
 
aq
;

66 
avaû
 = 
b
->
«Œoc
 - b->
Àn
;

67 
	`va_c›y
(
aq
, 
≠
);

68 
wrôãn
 = 
	`v¢¥ötf
(
b
->
body
 + b->
Àn
, 
avaû
, 
fmt
, 
aq
);

69 
	`va_íd
(
aq
);

70 i‡(
avaû
 <
wrôãn
) {

71 
	`ªÆloc_body
(
b
);

74 
b
->
Àn
 +
wrôãn
;

75  
	`buf_body
(
b
);

77 
	}
}

79 *
	$f‹m©
(*
fmt
, ...) {

80 
va_li°
 
≠
;

81 
	`va_°¨t
(
≠
, 
fmt
);

82 *
r
 = 
	`vf‹m©
(
fmt
, 
≠
);

83 
	`va_íd
(
≠
);

84  
r
;

85 
	}
}

87 *
	$quŸe
(
c
) {

88 
c
) {

97  
NULL
;

98 
	}
}

100 
	$¥öt
(
Buf„r
 *
b
, 
c
) {

101 *
q
 = 
	`quŸe
(
c
);

102 i‡(
q
) {

103 
	`buf_¥ötf
(
b
, "%s", 
q
);

104 } i‡(
	`i•röt
(
c
)) {

105 
	`buf_¥ötf
(
b
, "%c", 
c
);

107 #ifde‡
__eú__


108 
	`buf_¥ötf
(
b
, "\\x%x", 
c
);

110 
	`buf_¥ötf
(
b
, "\\x%02x", 
c
);

113 
	}
}

115 *
	$quŸe_c°rög
(*
p
) {

116 
Buf„r
 *
b
 = 
	`make_buf„r
();

117 *
p
)

118 
	`¥öt
(
b
, *
p
++);

119  
	`buf_body
(
b
);

120 
	}
}

122 *
	$quŸe_c°rög_Àn
(*
p
, 
Àn
) {

123 
Buf„r
 *
b
 = 
	`make_buf„r
();

124 
i
 = 0; i < 
Àn
; i++)

125 
	`¥öt
(
b
, 
p
[
i
]);

126  
	`buf_body
(
b
);

127 
	}
}

129 *
	$quŸe_ch¨
(
c
) {

130 i‡(
c
 == '\\')  "\\\\";

131 i‡(
c
 == '\'')  "\\'";

132  
	`f‹m©
("%c", 
c
);

133 
	}
}

	@8cc/cpp.c

8 
	~<˘y≥.h
>

9 
	~<libgí.h
>

10 
	~<loˇÀ.h
>

11 
	~<°dlib.h
>

12 
	~<°rög.h
>

13 
	~<time.h
>

14 
	~<uni°d.h
>

15 
	~"8cc.h
"

17 
M≠
 *
	gma¸os
 = &
EMPTY_MAP
;

18 
M≠
 *
	g⁄˚
 = &
EMPTY_MAP
;

19 
M≠
 *
	gkeyw‹ds
 = &
EMPTY_MAP
;

20 
M≠
 *
	gö˛ude_gu¨d
 = &
EMPTY_MAP
;

21 
Ve˘‹
 *
	gc⁄d_ö˛_°ack
 = &
EMPTY_VECTOR
;

22 
Ve˘‹
 *
	g°d_ö˛ude_∑th
 = &
EMPTY_VECTOR
;

23 
tm
 
	gnow
;

24 
Tokí
 *
	g˝p_tokí_zîo
 = &(Tokí){ .
köd
 = 
TNUMBER
, .
	gsvÆ
 = "0" };

25 
Tokí
 *
	g˝p_tokí_⁄e
 = &(Tokí){ .
köd
 = 
TNUMBER
, .
	gsvÆ
 = "1" };

27 
	tS≥cülMa¸oH™dÀr
(
	tTokí
 *
	ttok
);

28 íum { 
	mIN_THEN
, 
	mIN_ELIF
, 
	mIN_ELSE
 } 
	tC⁄dIn˛Ctx
;

29 íum { 
	mMACRO_OBJ
, 
	mMACRO_FUNC
, 
	mMACRO_SPECIAL
 } 
	tMa¸oTy≥
;

32 
C⁄dIn˛Ctx
 
	m˘x
;

33 *
	mö˛ude_gu¨d
;

34 
Fûe
 *
	mfûe
;

35 
boﬁ
 
	mwa°rue
;

36 } 
	tC⁄dIn˛
;

39 
Ma¸oTy≥
 
	mköd
;

40 
	m«rgs
;

41 
Ve˘‹
 *
	mbody
;

42 
boﬁ
 
	mis_v¨g
;

43 
S≥cülMa¸oH™dÀr
 *
	m‚
;

44 } 
	tMa¸o
;

46 
Ma¸o
 *
make_obj_ma¸o
(
Ve˘‹
 *
body
);

47 
Ma¸o
 *
make_func_ma¸o
(
Ve˘‹
 *
body
, 
«rgs
, 
boﬁ
 
is_v¨g
);

48 
Ma¸o
 *
make_•ecül_ma¸o
(
S≥cülMa¸oH™dÀr
 *
‚
);

49 
deföe_obj_ma¸o
(*
«me
, 
Tokí
 *
vÆue
);

50 
ªad_dúe˘ive
(
Tokí
 *
hash
);

51 
Tokí
 *
ªad_ex∑nd
();

57 
C⁄dIn˛
 *
	$make_c⁄d_ö˛
(
boﬁ
 
wa°rue
) {

58 
C⁄dIn˛
 *
r
 = 
	`ˇŒoc
(1, (CondIncl));

59 
r
->
˘x
 = 
IN_THEN
;

60 
r
->
wa°rue
 = wastrue;

61  
r
;

62 
	}
}

64 
Ma¸o
 *
	$make_ma¸o
(
Ma¸o
 *
tm∂
) {

65 
Ma¸o
 *
r
 = 
	`mÆloc
((Macro));

66 *
r
 = *
tm∂
;

67  
r
;

68 
	}
}

70 
Ma¸o
 *
	$make_obj_ma¸o
(
Ve˘‹
 *
body
) {

71  
	`make_ma¸o
(&(
Ma¸o
){ 
MACRO_OBJ
, .
body
 = body });

72 
	}
}

74 
Ma¸o
 *
	$make_func_ma¸o
(
Ve˘‹
 *
body
, 
«rgs
, 
boﬁ
 
is_v¨g
) {

75  
	`make_ma¸o
(&(
Ma¸o
){

76 
MACRO_FUNC
, .
«rgs
 =Ç¨gs, .
body
 = body, .
is_v¨g
 = is_varg });

77 
	}
}

79 
Ma¸o
 *
	$make_•ecül_ma¸o
(
S≥cülMa¸oH™dÀr
 *
‚
) {

80  
	`make_ma¸o
(&(
Ma¸o
){ 
MACRO_SPECIAL
, .
‚
 = fn });

81 
	}
}

83 
Tokí
 *
	$make_ma¸o_tokí
(
posôi⁄
, 
boﬁ
 
is_v¨¨g
) {

84 
Tokí
 *
r
 = 
	`mÆloc
((Token));

85 
r
->
köd
 = 
TMACRO_PARAM
;

86 
r
->
is_v¨¨g
 = is_vararg;

87 
r
->
hide£t
 = 
NULL
;

88 
r
->
posôi⁄
 =Öosition;

89 
r
->
•a˚
 = 
Ál£
;

90 
r
->
bﬁ
 = 
Ál£
;

91  
r
;

92 
	}
}

94 
Tokí
 *
	$c›y_tokí
(
Tokí
 *
tok
) {

95 
Tokí
 *
r
 = 
	`mÆloc
((Token));

96 *
r
 = *
tok
;

97  
r
;

98 
	}
}

100 
	$˝p_ex≥˘
(
id
) {

101 
Tokí
 *
tok
 = 
	`Àx
();

102 i‡(!
	`is_keyw‹d
(
tok
, 
id
))

103 
	`îr‹t
(
tok
, "%¯ex≥˘ed, buàgŸ %s", 
id
, 
	`tok2s
(tok));

104 
	}
}

110 
boﬁ
 
	$is_idít
(
Tokí
 *
tok
, *
s
) {

111  
tok
->
köd
 =
TIDENT
 && !
	`°rcmp
—ok->
svÆ
, 
s
);

112 
	}
}

114 
boﬁ
 
	$˝p_√xt
(
id
) {

115 
Tokí
 *
tok
 = 
	`Àx
();

116 i‡(
	`is_keyw‹d
(
tok
, 
id
))

117  
åue
;

118 
	`ungë_tokí
(
tok
);

119  
Ál£
;

120 
	}
}

122 
	$¥›ag©e_•a˚
(
Ve˘‹
 *
tokís
, 
Tokí
 *
tm∂
) {

123 i‡(
	`vec_Àn
(
tokís
) == 0)

125 
Tokí
 *
tok
 = 
	`c›y_tokí
(
	`vec_hód
(
tokís
));

126 
tok
->
•a˚
 = 
tm∂
->space;

127 
	`vec_£t
(
tokís
, 0, 
tok
);

128 
	}
}

134 
Tokí
 *
	$˝p_ªad_idít
() {

135 
Tokí
 *
tok
 = 
	`Àx
();

136 i‡(
tok
->
köd
 !
TIDENT
)

137 
	`îr‹t
(
tok
, "idítifõ∏ex≥˘ed, buàgŸ %s", 
	`tok2s
(tok));

138  
tok
;

139 
	}
}

141 
	$ex≥˘_√wlöe
() {

142 
Tokí
 *
tok
 = 
	`Àx
();

143 i‡(
tok
->
köd
 !
TNEWLINE
)

144 
	`îr‹t
(
tok
, "√wlöêex≥˘ed, buàgŸ %s", 
	`tok2s
(tok));

145 
	}
}

147 
Ve˘‹
 *
	$ªad_⁄e_¨g
(
Tokí
 *
idít
, 
boﬁ
 *
íd
, boﬁ 
ªadÆl
) {

148 
Ve˘‹
 *
r
 = 
	`make_ve˘‹
();

149 
Àvñ
 = 0;

151 
Tokí
 *
tok
 = 
	`Àx
();

152 i‡(
tok
->
köd
 =
TEOF
)

153 
	`îr‹t
(
idít
, "unterminated macroárgumentÜist");

154 i‡(
tok
->
köd
 =
TNEWLINE
)

156 i‡(
tok
->
bﬁ
 && 
	`is_keyw‹d
(tok, '#')) {

157 
	`ªad_dúe˘ive
(
tok
);

160 i‡(
Àvñ
 =0 && 
	`is_keyw‹d
(
tok
, ')')) {

161 
	`ungë_tokí
(
tok
);

162 *
íd
 = 
åue
;

163  
r
;

165 i‡(
Àvñ
 =0 && 
	`is_keyw‹d
(
tok
, ','Ë&& !
ªadÆl
)

166  
r
;

167 i‡(
	`is_keyw‹d
(
tok
, '('))

168 
Àvñ
++;

169 i‡(
	`is_keyw‹d
(
tok
, ')'))

170 
Àvñ
--;

176 i‡(
tok
->
bﬁ
) {

177 
tok
 = 
	`c›y_tokí
(tok);

178 
tok
->
bﬁ
 = 
Ál£
;

179 
tok
->
•a˚
 = 
åue
;

181 
	`vec_push
(
r
, 
tok
);

183 
	}
}

185 
Ve˘‹
 *
	$do_ªad_¨gs
(
Tokí
 *
idít
, 
Ma¸o
 *
ma¸o
) {

186 
Ve˘‹
 *
r
 = 
	`make_ve˘‹
();

187 
boﬁ
 
íd
 = 
Ál£
;

188 !
íd
) {

189 
boﬁ
 
ö_ñlùsis
 = (
ma¸o
->
is_v¨g
 && 
	`vec_Àn
(
r
Ë+ 1 =ma¸o->
«rgs
);

190 
	`vec_push
(
r
, 
	`ªad_⁄e_¨g
(
idít
, &
íd
, 
ö_ñlùsis
));

192 i‡(
ma¸o
->
is_v¨g
 && 
	`vec_Àn
(
r
Ë=ma¸o->
«rgs
 - 1)

193 
	`vec_push
(
r
, 
	`make_ve˘‹
());

194  
r
;

195 
	}
}

197 
Ve˘‹
 *
	$ªad_¨gs
(
Tokí
 *
tok
, 
Ma¸o
 *
ma¸o
) {

198 i‡(
ma¸o
->
«rgs
 =0 && 
	`is_keyw‹d
(
	`≥ek_tokí
(), ')')) {

202  
	`make_ve˘‹
();

204 
Ve˘‹
 *
¨gs
 = 
	`do_ªad_¨gs
(
tok
, 
ma¸o
);

205 i‡(
	`vec_Àn
(
¨gs
Ë!
ma¸o
->
«rgs
)

206 
	`îr‹t
(
tok
, "macroárgumentÇumber doesÇot match");

207  
¨gs
;

208 
	}
}

210 
Ve˘‹
 *
	$add_hide_£t
(
Ve˘‹
 *
tokís
, 
Së
 *
hide£t
) {

211 
Ve˘‹
 *
r
 = 
	`make_ve˘‹
();

212 
i
 = 0; i < 
	`vec_Àn
(
tokís
); i++) {

213 
Tokí
 *
t
 = 
	`c›y_tokí
(
	`vec_gë
(
tokís
, 
i
));

214 
t
->
hide£t
 = 
	`£t_uni⁄
(t->hideset, hideset);

215 
	`vec_push
(
r
, 
t
);

217  
r
;

218 
	}
}

220 
Tokí
 *
	$glue_tokís
(
Tokí
 *
t
, Tokí *
u
) {

221 
Buf„r
 *
b
 = 
	`make_buf„r
();

222 
	`buf_¥ötf
(
b
, "%s", 
	`tok2s
(
t
));

223 
	`buf_¥ötf
(
b
, "%s", 
	`tok2s
(
u
));

224 
Tokí
 *
r
 = 
	`Àx_°rög
(
	`buf_body
(
b
));

225  
r
;

226 
	}
}

228 
	$glue_push
(
Ve˘‹
 *
tokís
, 
Tokí
 *
tok
) {

229 
Tokí
 *
œ°
 = 
	`vec_p›
(
tokís
);

230 
	`vec_push
(
tokís
, 
	`glue_tokís
(
œ°
, 
tok
));

231 
	}
}

233 
Tokí
 *
	$°rögize
(
Tokí
 *
tm∂
, 
Ve˘‹
 *
¨gs
) {

234 
Buf„r
 *
b
 = 
	`make_buf„r
();

235 
i
 = 0; i < 
	`vec_Àn
(
¨gs
); i++) {

236 
Tokí
 *
tok
 = 
	`vec_gë
(
¨gs
, 
i
);

237 i‡(
	`buf_Àn
(
b
Ë&& 
tok
->
•a˚
)

238 
	`buf_¥ötf
(
b
, " ");

239 
	`buf_¥ötf
(
b
, "%s", 
	`tok2s
(
tok
));

241 
	`buf_wrôe
(
b
, '\0');

242 
Tokí
 *
r
 = 
	`c›y_tokí
(
tm∂
);

243 
r
->
köd
 = 
TSTRING
;

244 
r
->
svÆ
 = 
	`buf_body
(
b
);

245 
r
->
¶í
 = 
	`buf_Àn
(
b
);

246 
r
->
íc
 = 
ENC_NONE
;

247  
r
;

248 
	}
}

250 
Ve˘‹
 *
	$ex∑nd_Æl
(
Ve˘‹
 *
tokís
, 
Tokí
 *
tm∂
) {

251 
	`tokí_buf„r_°ash
(
	`vec_ªvî£
(
tokís
));

252 
Ve˘‹
 *
r
 = 
	`make_ve˘‹
();

254 
Tokí
 *
tok
 = 
	`ªad_ex∑nd
();

255 i‡(
tok
->
köd
 =
TEOF
)

257 
	`vec_push
(
r
, 
tok
);

259 
	`¥›ag©e_•a˚
(
r
, 
tm∂
);

260 
	`tokí_buf„r_un°ash
();

261  
r
;

262 
	}
}

264 
Ve˘‹
 *
	$sub°
(
Ma¸o
 *
ma¸o
, 
Ve˘‹
 *
¨gs
, 
Së
 *
hide£t
) {

265 
Ve˘‹
 *
r
 = 
	`make_ve˘‹
();

266 
Àn
 = 
	`vec_Àn
(
ma¸o
->
body
);

267 
i
 = 0; i < 
Àn
; i++) {

268 
Tokí
 *
t0
 = 
	`vec_gë
(
ma¸o
->
body
, 
i
);

269 
Tokí
 *
t1
 = (
i
 =
Àn
 - 1Ë? 
NULL
 : 
	`vec_gë
(
ma¸o
->
body
, i + 1);

270 
boﬁ
 
t0_∑øm
 = (
t0
->
köd
 =
TMACRO_PARAM
);

271 
boﬁ
 
t1_∑øm
 = (
t1
 &&Å1->
köd
 =
TMACRO_PARAM
);

273 i‡(
	`is_keyw‹d
(
t0
, '#'Ë&& 
t1_∑øm
) {

274 
	`vec_push
(
r
, 
	`°rögize
(
t0
, 
	`vec_gë
(
¨gs
, 
t1
->
posôi⁄
)));

275 
i
++;

278 i‡(
	`is_keyw‹d
(
t0
, 
KHASHHASH
Ë&& 
t1_∑øm
) {

279 
Ve˘‹
 *
¨g
 = 
	`vec_gë
(
¨gs
, 
t1
->
posôi⁄
);

283 i‡(
t1
->
is_v¨¨g
 && 
	`vec_Àn
(
r
Ë> 0 && 
	`is_keyw‹d
(
	`vec_èû
(r), ',')) {

284 i‡(
	`vec_Àn
(
¨g
) > 0)

285 
	`vec_≠≥nd
(
r
, 
¨g
);

287 
	`vec_p›
(
r
);

288 } i‡(
	`vec_Àn
(
¨g
) > 0) {

289 
	`glue_push
(
r
, 
	`vec_hód
(
¨g
));

290 
i
 = 1; i < 
	`vec_Àn
(
¨g
); i++)

291 
	`vec_push
(
r
, 
	`vec_gë
(
¨g
, 
i
));

293 
i
++;

296 i‡(
	`is_keyw‹d
(
t0
, 
KHASHHASH
Ë&& 
t1
) {

297 
hide£t
 = 
t1
->hideset;

298 
	`glue_push
(
r
, 
t1
);

299 
i
++;

302 i‡(
t0_∑øm
 && 
t1
 && 
	`is_keyw‹d
—1, 
KHASHHASH
)) {

303 
hide£t
 = 
t1
->hideset;

304 
Ve˘‹
 *
¨g
 = 
	`vec_gë
(
¨gs
, 
t0
->
posôi⁄
);

305 i‡(
	`vec_Àn
(
¨g
) == 0)

306 
i
++;

308 
	`vec_≠≥nd
(
r
, 
¨g
);

311 i‡(
t0_∑øm
) {

312 
Ve˘‹
 *
¨g
 = 
	`vec_gë
(
¨gs
, 
t0
->
posôi⁄
);

313 
	`vec_≠≥nd
(
r
, 
	`ex∑nd_Æl
(
¨g
, 
t0
));

316 
	`vec_push
(
r
, 
t0
);

318  
	`add_hide_£t
(
r
, 
hide£t
);

319 
	}
}

321 
	$ungë_Æl
(
Ve˘‹
 *
tokís
) {

322 
i
 = 
	`vec_Àn
(
tokís
); i > 0;)

323 
	`ungë_tokí
(
	`vec_gë
(
tokís
, --
i
));

324 
	}
}

327 
Tokí
 *
	$ªad_ex∑nd_√wlöe
() {

328 
Tokí
 *
tok
 = 
	`Àx
();

329 i‡(
tok
->
köd
 !
TIDENT
)

330  
tok
;

331 *
«me
 = 
tok
->
svÆ
;

332 
Ma¸o
 *
ma¸o
 = 
	`m≠_gë
(
ma¸os
, 
«me
);

333 i‡(!
ma¸o
 || 
	`£t_has
(
tok
->
hide£t
, 
«me
))

334  
tok
;

336 
ma¸o
->
köd
) {

337 
MACRO_OBJ
: {

338 
Së
 *
hide£t
 = 
	`£t_add
(
tok
->hide£t, 
«me
);

339 
Ve˘‹
 *
tokís
 = 
	`sub°
(
ma¸o
, 
NULL
, 
hide£t
);

340 
	`¥›ag©e_•a˚
(
tokís
, 
tok
);

341 
	`ungë_Æl
(
tokís
);

342  
	`ªad_ex∑nd
();

344 
MACRO_FUNC
: {

345 i‡(!
	`˝p_√xt
('('))

346  
tok
;

347 
Ve˘‹
 *
¨gs
 = 
	`ªad_¨gs
(
tok
, 
ma¸o
);

348 
Tokí
 *
Ω¨í
 = 
	`≥ek_tokí
();

349 
	`˝p_ex≥˘
(')');

350 
Së
 *
hide£t
 = 
	`£t_add
(
	`£t_öãr£˘i⁄
(
tok
->hide£t, 
Ω¨í
->hide£t), 
«me
);

351 
Ve˘‹
 *
tokís
 = 
	`sub°
(
ma¸o
, 
¨gs
, 
hide£t
);

352 
	`¥›ag©e_•a˚
(
tokís
, 
tok
);

353 
	`ungë_Æl
(
tokís
);

354  
	`ªad_ex∑nd
();

356 
MACRO_SPECIAL
:

357 
ma¸o
->
	`‚
(
tok
);

358  
	`ªad_ex∑nd
();

360 
	`îr‹
("internalÉrror");

362 
	}
}

364 
Tokí
 *
	$ªad_ex∑nd
() {

366 
Tokí
 *
tok
 = 
	`ªad_ex∑nd_√wlöe
();

367 i‡(
tok
->
köd
 !
TNEWLINE
)

368  
tok
;

370 
	}
}

372 
boﬁ
 
	$ªad_fun˛ike_ma¸o_∑øms
(
Tokí
 *
«me
, 
M≠
 *
∑øm
) {

373 
pos
 = 0;

375 
Tokí
 *
tok
 = 
	`Àx
();

376 i‡(
	`is_keyw‹d
(
tok
, ')'))

377  
Ál£
;

378 i‡(
pos
) {

379 i‡(!
	`is_keyw‹d
(
tok
, ','))

380 
	`îr‹t
(
tok
, ",Éx≥˘ed, buàgŸ %s", 
	`tok2s
(tok));

381 
tok
 = 
	`Àx
();

383 i‡(
tok
->
köd
 =
TNEWLINE
)

384 
	`îr‹t
(
«me
, "missing ')' in macroÖarameterÜist");

385 i‡(
	`is_keyw‹d
(
tok
, 
KELLIPSIS
)) {

386 
	`m≠_put
(
∑øm
, "__VA_ARGS__", 
	`make_ma¸o_tokí
(
pos
++, 
åue
));

387 
	`˝p_ex≥˘
(')');

388  
åue
;

390 i‡(
tok
->
köd
 !
TIDENT
)

391 
	`îr‹t
(
tok
, "idítifõ∏ex≥˘ed, buàgŸ %s", 
	`tok2s
(tok));

392 *
¨g
 = 
tok
->
svÆ
;

393 i‡(
	`˝p_√xt
(
KELLIPSIS
)) {

394 
	`˝p_ex≥˘
(')');

395 
	`m≠_put
(
∑øm
, 
¨g
, 
	`make_ma¸o_tokí
(
pos
++, 
åue
));

396  
åue
;

398 
	`m≠_put
(
∑øm
, 
¨g
, 
	`make_ma¸o_tokí
(
pos
++, 
Ál£
));

400 
	}
}

402 
	$hashhash_check
(
Ve˘‹
 *
v
) {

403 i‡(
	`vec_Àn
(
v
) == 0)

405 i‡(
	`is_keyw‹d
(
	`vec_hód
(
v
), 
KHASHHASH
))

406 
	`îr‹t
(
	`vec_hód
(
v
), "'##' cannotáppearát start of macroÉxpansion");

407 i‡(
	`is_keyw‹d
(
	`vec_èû
(
v
), 
KHASHHASH
))

408 
	`îr‹t
(
	`vec_èû
(
v
), "'##' cannotáppearátÉnd of macroÉxpansion");

409 
	}
}

411 
Ve˘‹
 *
	$ªad_fun˛ike_ma¸o_body
(
M≠
 *
∑øm
) {

412 
Ve˘‹
 *
r
 = 
	`make_ve˘‹
();

414 
Tokí
 *
tok
 = 
	`Àx
();

415 i‡(
tok
->
köd
 =
TNEWLINE
)

416  
r
;

417 i‡(
tok
->
köd
 =
TIDENT
) {

418 
Tokí
 *
sub°
 = 
	`m≠_gë
(
∑øm
, 
tok
->
svÆ
);

419 i‡(
sub°
) {

420 
sub°
 = 
	`c›y_tokí
(subst);

421 
sub°
->
•a˚
 = 
tok
->space;

422 
	`vec_push
(
r
, 
sub°
);

426 
	`vec_push
(
r
, 
tok
);

428 
	}
}

430 
	$ªad_fun˛ike_ma¸o
(
Tokí
 *
«me
) {

431 
M≠
 *
∑øm
 = 
	`make_m≠
();

432 
boﬁ
 
is_v¨g
 = 
	`ªad_fun˛ike_ma¸o_∑øms
(
«me
, 
∑øm
);

433 
Ve˘‹
 *
body
 = 
	`ªad_fun˛ike_ma¸o_body
(
∑øm
);

434 
	`hashhash_check
(
body
);

435 
Ma¸o
 *
ma¸o
 = 
	`make_func_ma¸o
(
body
, 
	`m≠_Àn
(
∑øm
), 
is_v¨g
);

436 
	`m≠_put
(
ma¸os
, 
«me
->
svÆ
, 
ma¸o
);

437 
	}
}

439 
	$ªad_obj_ma¸o
(*
«me
) {

440 
Ve˘‹
 *
body
 = 
	`make_ve˘‹
();

442 
Tokí
 *
tok
 = 
	`Àx
();

443 i‡(
tok
->
köd
 =
TNEWLINE
)

445 
	`vec_push
(
body
, 
tok
);

447 
	`hashhash_check
(
body
);

448 
	`m≠_put
(
ma¸os
, 
«me
, 
	`make_obj_ma¸o
(
body
));

449 
	}
}

455 
	$ªad_deföe
() {

456 
Tokí
 *
«me
 = 
	`˝p_ªad_idít
();

457 
Tokí
 *
tok
 = 
	`Àx
();

458 i‡(
	`is_keyw‹d
(
tok
, '('Ë&& !tok->
•a˚
) {

459 
	`ªad_fun˛ike_ma¸o
(
«me
);

462 
	`ungë_tokí
(
tok
);

463 
	`ªad_obj_ma¸o
(
«me
->
svÆ
);

464 
	}
}

470 
	$ªad_undef
() {

471 
Tokí
 *
«me
 = 
	`˝p_ªad_idít
();

472 
	`ex≥˘_√wlöe
();

473 
	`m≠_ªmove
(
ma¸os
, 
«me
->
svÆ
);

474 
	}
}

480 
Tokí
 *
	$ªad_deföed_›
() {

481 
Tokí
 *
tok
 = 
	`Àx
();

482 i‡(
	`is_keyw‹d
(
tok
, '(')) {

483 
tok
 = 
	`Àx
();

484 
	`˝p_ex≥˘
(')');

486 i‡(
tok
->
köd
 !
TIDENT
)

487 
	`îr‹t
(
tok
, "idítifõ∏ex≥˘ed, buàgŸ %s", 
	`tok2s
(tok));

488  
	`m≠_gë
(
ma¸os
, 
tok
->
svÆ
Ë? 
˝p_tokí_⁄e
 : 
˝p_tokí_zîo
;

489 
	}
}

491 
Ve˘‹
 *
	$ªad_öãx¥_löe
() {

492 
Ve˘‹
 *
r
 = 
	`make_ve˘‹
();

494 
Tokí
 *
tok
 = 
	`ªad_ex∑nd_√wlöe
();

495 i‡(
tok
->
köd
 =
TNEWLINE
)

496  
r
;

497 i‡(
	`is_idít
(
tok
, "defined")) {

498 
	`vec_push
(
r
, 
	`ªad_deföed_›
());

499 } i‡(
tok
->
köd
 =
TIDENT
) {

502 
	`vec_push
(
r
, 
˝p_tokí_zîo
);

504 
	`vec_push
(
r
, 
tok
);

507 
	}
}

509 
boﬁ
 
	$ªad_c⁄°ex¥
() {

510 
	`tokí_buf„r_°ash
(
	`vec_ªvî£
(
	`ªad_öãx¥_löe
()));

511 
Node
 *
ex¥
 = 
	`ªad_ex¥
();

512 
Tokí
 *
tok
 = 
	`Àx
();

513 i‡(
tok
->
köd
 !
TEOF
)

514 
	`îr‹t
(
tok
, "°øyÅokí: %s", 
	`tok2s
(tok));

515 
	`tokí_buf„r_un°ash
();

516  
	`evÆ_öãx¥
(
ex¥
, 
NULL
);

517 
	}
}

519 
	$do_ªad_if
(
boﬁ
 
i°rue
) {

520 
	`vec_push
(
c⁄d_ö˛_°ack
, 
	`make_c⁄d_ö˛
(
i°rue
));

521 i‡(!
i°rue
)

522 
	`skù_c⁄d_ö˛
();

523 
	}
}

525 
	$ªad_if
() {

526 
	`do_ªad_if
(
	`ªad_c⁄°ex¥
());

527 
	}
}

529 
	$ªad_ifdef
() {

530 
Tokí
 *
tok
 = 
	`Àx
();

531 i‡(
tok
->
köd
 !
TIDENT
)

532 
	`îr‹t
(
tok
, "idítifõ∏ex≥˘ed, buàgŸ %s", 
	`tok2s
(tok));

533 
	`ex≥˘_√wlöe
();

534 
	`do_ªad_if
(
	`m≠_gë
(
ma¸os
, 
tok
->
svÆ
));

535 
	}
}

537 
	$ªad_i‚def
() {

538 
Tokí
 *
tok
 = 
	`Àx
();

539 i‡(
tok
->
köd
 !
TIDENT
)

540 
	`îr‹t
(
tok
, "idítifõ∏ex≥˘ed, buàgŸ %s", 
	`tok2s
(tok));

541 
	`ex≥˘_√wlöe
();

542 
	`do_ªad_if
(!
	`m≠_gë
(
ma¸os
, 
tok
->
svÆ
));

543 i‡(
tok
->
cou¡
 == 2) {

546 
C⁄dIn˛
 *
ci
 = 
	`vec_èû
(
c⁄d_ö˛_°ack
);

547 
ci
->
ö˛ude_gu¨d
 = 
tok
->
svÆ
;

548 
ci
->
fûe
 = 
tok
->file;

550 
	}
}

552 
	$ªad_ñ£
(
Tokí
 *
hash
) {

553 i‡(
	`vec_Àn
(
c⁄d_ö˛_°ack
) == 0)

554 
	`îr‹t
(
hash
, "stray #else");

555 
C⁄dIn˛
 *
ci
 = 
	`vec_èû
(
c⁄d_ö˛_°ack
);

556 i‡(
ci
->
˘x
 =
IN_ELSE
)

557 
	`îr‹t
(
hash
, "#elseáppears in #else");

558 
	`ex≥˘_√wlöe
();

559 
ci
->
˘x
 = 
IN_ELSE
;

560 
ci
->
ö˛ude_gu¨d
 = 
NULL
;

561 i‡(
ci
->
wa°rue
)

562 
	`skù_c⁄d_ö˛
();

563 
	}
}

565 
	$ªad_ñif
(
Tokí
 *
hash
) {

566 i‡(
	`vec_Àn
(
c⁄d_ö˛_°ack
) == 0)

567 
	`îr‹t
(
hash
, "stray #elif");

568 
C⁄dIn˛
 *
ci
 = 
	`vec_èû
(
c⁄d_ö˛_°ack
);

569 i‡(
ci
->
˘x
 =
IN_ELSE
)

570 
	`îr‹t
(
hash
, "#elifáfter #else");

571 
ci
->
˘x
 = 
IN_ELIF
;

572 
ci
->
ö˛ude_gu¨d
 = 
NULL
;

573 i‡(
ci
->
wa°rue
 || !
	`ªad_c⁄°ex¥
()) {

574 
	`skù_c⁄d_ö˛
();

577 
ci
->
wa°rue
 = 
åue
;

578 
	}
}

581 
Tokí
 *
	$skù_√wlöes
() {

582 
Tokí
 *
tok
 = 
	`Àx
();

583 
tok
->
köd
 =
TNEWLINE
)

584 
tok
 = 
	`Àx
();

585 
	`ungë_tokí
(
tok
);

586  
tok
;

587 
	}
}

589 
	$ªad_ídif
(
Tokí
 *
hash
) {

590 i‡(
	`vec_Àn
(
c⁄d_ö˛_°ack
) == 0)

591 
	`îr‹t
(
hash
, "stray #endif");

592 
C⁄dIn˛
 *
ci
 = 
	`vec_p›
(
c⁄d_ö˛_°ack
);

593 
	`ex≥˘_√wlöe
();

598 i‡(!
ci
->
ö˛ude_gu¨d
 || ci->
fûe
 !
hash
->file)

600 
Tokí
 *
œ°
 = 
	`skù_√wlöes
();

601 i‡(
ci
->
fûe
 !
œ°
->file)

602 
	`m≠_put
(
ö˛ude_gu¨d
, 
ci
->
fûe
->
«me
, ci->include_guard);

603 
	}
}

609 *
	$ªad_îr‹_mesßge
() {

610 
Buf„r
 *
b
 = 
	`make_buf„r
();

612 
Tokí
 *
tok
 = 
	`Àx
();

613 i‡(
tok
->
köd
 =
TNEWLINE
)

614  
	`buf_body
(
b
);

615 i‡(
	`buf_Àn
(
b
Ë!0 && 
tok
->
•a˚
)

616 
	`buf_wrôe
(
b
, ' ');

617 
	`buf_¥ötf
(
b
, "%s", 
	`tok2s
(
tok
));

619 
	}
}

621 
	$ªad_îr‹
(
Tokí
 *
hash
) {

622 
	`îr‹t
(
hash
, "#îr‹: %s", 
	`ªad_îr‹_mesßge
());

623 
	}
}

625 
	$ªad_w¨nög
(
Tokí
 *
hash
) {

626 
	`w¨¡
(
hash
, "#w¨nög: %s", 
	`ªad_îr‹_mesßge
());

627 
	}
}

633 *
	$joö_∑ths
(
Ve˘‹
 *
¨gs
) {

634 
Buf„r
 *
b
 = 
	`make_buf„r
();

635 
i
 = 0; i < 
	`vec_Àn
(
¨gs
); i++)

636 
	`buf_¥ötf
(
b
, "%s", 
	`tok2s
(
	`vec_gë
(
¨gs
, 
i
)));

637  
	`buf_body
(
b
);

638 
	}
}

640 *
	$ªad_˝p_hódî_«me
(
Tokí
 *
hash
, 
boﬁ
 *
°d
) {

642 *
∑th
 = 
	`ªad_hódî_fûe_«me
(
°d
);

643 i‡(
∑th
)

644  
∑th
;

649 
Tokí
 *
tok
 = 
	`ªad_ex∑nd_√wlöe
();

650 i‡(
tok
->
köd
 =
TNEWLINE
)

651 
	`îr‹t
(
hash
, "expected filename, but gotÇewline");

652 i‡(
tok
->
köd
 =
TSTRING
) {

653 *
°d
 = 
Ál£
;

654  
tok
->
svÆ
;

656 i‡(!
	`is_keyw‹d
(
tok
, '<'))

657 
	`îr‹t
(
tok
, "<Éx≥˘ed, buàgŸ %s", 
	`tok2s
(tok));

658 
Ve˘‹
 *
tokís
 = 
	`make_ve˘‹
();

660 
Tokí
 *
tok
 = 
	`ªad_ex∑nd_√wlöe
();

661 i‡(
tok
->
köd
 =
TNEWLINE
)

662 
	`îr‹t
(
hash
, "prematureÉnd of headerÇame");

663 i‡(
	`is_keyw‹d
(
tok
, '>'))

665 
	`vec_push
(
tokís
, 
tok
);

667 *
°d
 = 
åue
;

668  
	`joö_∑ths
(
tokís
);

669 
	}
}

671 
boﬁ
 
	$gu¨ded
(*
∑th
) {

672 *
gu¨d
 = 
	`m≠_gë
(
ö˛ude_gu¨d
, 
∑th
);

673 
boﬁ
 
r
 = (
gu¨d
 && 
	`m≠_gë
(
ma¸os
, guard));

674 
	`deföe_obj_ma¸o
("__8cc_ö˛ude_gu¨d", 
r
 ? 
˝p_tokí_⁄e
 : 
˝p_tokí_zîo
);

675  
r
;

676 
	}
}

678 #i‚de‡
__eú__


679 
boﬁ
 
	$åy_ö˛ude
(*
dú
, *
fûíame
, 
boﬁ
 
isimp‹t
) {

680 *
∑th
 = 
	`fuŒ∑th
(
	`f‹m©
("%s/%s", 
dú
, 
fûíame
));

681 i‡(
	`m≠_gë
(
⁄˚
, 
∑th
))

682  
åue
;

683 i‡(
	`gu¨ded
(
∑th
))

684  
åue
;

685 
FILE
 *
Â
 = 
	`f›í
(
∑th
, "r");

686 i‡(!
Â
)

687  
Ál£
;

688 i‡(
isimp‹t
)

689 
	`m≠_put
(
⁄˚
, 
∑th
, (*)1);

690 
	`°ªam_push
(
	`make_fûe
(
Â
, 
∑th
));

691  
åue
;

692 
	}
}

695 
	$ªad_ö˛ude
(
Tokí
 *
hash
, 
Fûe
 *
fûe
, 
boﬁ
 
isimp‹t
) {

696 #ifde‡
__eú__


697 
	`îr‹
("#include isÇot supported");

699 
boﬁ
 
°d
;

700 *
fûíame
 = 
	`ªad_˝p_hódî_«me
(
hash
, &
°d
);

701 
	`ex≥˘_√wlöe
();

702 i‡(
fûíame
[0] == '/') {

703 i‡(
	`åy_ö˛ude
("/", 
fûíame
, 
isimp‹t
))

705 
îr
;

707 i‡(!
°d
) {

708 *
dú
 = 
fûe
->
«me
 ? 
	`dú«me
(
	`°rdup
(file->name)) : ".";

709 i‡(
	`åy_ö˛ude
(
dú
, 
fûíame
, 
isimp‹t
))

712 
i
 = 0; i < 
	`vec_Àn
(
°d_ö˛ude_∑th
); i++)

713 i‡(
	`åy_ö˛ude
(
	`vec_gë
(
°d_ö˛ude_∑th
, 
i
), 
fûíame
, 
isimp‹t
))

715 
îr
:

716 
	`îr‹t
(
hash
, "ˇ¬Ÿ föd hódî fûe: %s", 
fûíame
);

718 
	}
}

720 
	$ªad_ö˛ude_√xt
(
Tokí
 *
hash
, 
Fûe
 *
fûe
) {

721 #ifde‡
__eú__


722 
	`îr‹
("#include_next isÇot supported");

728 
boﬁ
 
°d
;

729 *
fûíame
 = 
	`ªad_˝p_hódî_«me
(
hash
, &
°d
);

730 
	`ex≥˘_√wlöe
();

731 i‡(
fûíame
[0] == '/') {

732 i‡(
	`åy_ö˛ude
("/", 
fûíame
, 
Ál£
))

734 
îr
;

736 *
cur
 = 
	`fuŒ∑th
(
fûe
->
«me
);

737 
i
 = 0;

738 ; 
i
 < 
	`vec_Àn
(
°d_ö˛ude_∑th
); i++) {

739 *
dú
 = 
	`vec_gë
(
°d_ö˛ude_∑th
, 
i
);

740 i‡(!
	`°rcmp
(
cur
, 
	`fuŒ∑th
(
	`f‹m©
("%s/%s", 
dú
, 
fûíame
))))

743 
i
++; i < 
	`vec_Àn
(
°d_ö˛ude_∑th
); i++)

744 i‡(
	`åy_ö˛ude
(
	`vec_gë
(
°d_ö˛ude_∑th
, 
i
), 
fûíame
, 
Ál£
))

746 
îr
:

747 
	`îr‹t
(
hash
, "ˇ¬Ÿ föd hódî fûe: %s", 
fûíame
);

749 
	}
}

755 
	$∑r£_¥agma_›î™d
(
Tokí
 *
tok
) {

756 *
s
 = 
tok
->
svÆ
;

757 #ifde‡
__eú__


758 
	`îr‹t
(
tok
, "unknow¿#¥agma: %s", 
s
);

760 i‡(!
	`°rcmp
(
s
, "once")) {

761 *
∑th
 = 
	`fuŒ∑th
(
tok
->
fûe
->
«me
);

762 
	`m≠_put
(
⁄˚
, 
∑th
, (*)1);

763 } i‡(!
	`°rcmp
(
s
, "enable_warning")) {

764 
íabÀ_w¨nög
 = 
åue
;

765 } i‡(!
	`°rcmp
(
s
, "disable_warning")) {

766 
íabÀ_w¨nög
 = 
Ál£
;

768 
	`îr‹t
(
tok
, "unknow¿#¥agma: %s", 
s
);

771 
	}
}

773 
	$ªad_¥agma
() {

774 
Tokí
 *
tok
 = 
	`˝p_ªad_idít
();

775 
	`∑r£_¥agma_›î™d
(
tok
);

776 
	}
}

782 
boﬁ
 
	$is_digô_£quí˚
(*
p
) {

783 ; *
p
;Ö++)

784 i‡(!
	`isdigô
(*
p
))

785  
Ál£
;

786  
åue
;

787 
	}
}

789 
	$ªad_löe
() {

790 
Tokí
 *
tok
 = 
	`ªad_ex∑nd_√wlöe
();

791 i‡(
tok
->
köd
 !
TNUMBER
 || !
	`is_digô_£quí˚
—ok->
svÆ
))

792 
	`îr‹t
(
tok
, "numbîÉx≥˘edá·î #löe, buàgŸ %s", 
	`tok2s
(tok));

793 
löe
 = 
	`©oi
(
tok
->
svÆ
);

794 
tok
 = 
	`ªad_ex∑nd_√wlöe
();

795 *
fûíame
 = 
NULL
;

796 i‡(
tok
->
köd
 =
TSTRING
) {

797 
fûíame
 = 
tok
->
svÆ
;

798 
	`ex≥˘_√wlöe
();

799 } i‡(
tok
->
köd
 !
TNEWLINE
) {

800 
	`îr‹t
(
tok
, "√wlöê‹á sour˚Çamê¨êex≥˘ed, buàgŸ %s", 
	`tok2s
(tok));

802 
Fûe
 *
f
 = 
	`cuºít_fûe
();

803 
f
->
löe
 =Üine;

804 i‡(
fûíame
)

805 
f
->
«me
 = 
fûíame
;

806 
	}
}

810 
	$ªad_löem¨kî
(
Tokí
 *
tok
) {

811 i‡(!
	`is_digô_£quí˚
(
tok
->
svÆ
))

812 
	`îr‹t
(
tok
, "löênumbîÉx≥˘ed, buàgŸ %s", 
	`tok2s
(tok));

813 
löe
 = 
	`©oi
(
tok
->
svÆ
);

814 
tok
 = 
	`Àx
();

815 i‡(
tok
->
köd
 !
TSTRING
)

816 
	`îr‹t
(
tok
, "fûíamêex≥˘ed, buàgŸ %s", 
	`tok2s
(tok));

817 *
fûíame
 = 
tok
->
svÆ
;

819 
tok
 = 
	`Àx
();

820 } 
tok
->
köd
 !
TNEWLINE
);

821 
Fûe
 *
fûe
 = 
	`cuºít_fûe
();

822 
fûe
->
löe
 =Üine;

823 
fûe
->
«me
 = 
fûíame
;

824 
	}
}

830 
	$ªad_dúe˘ive
(
Tokí
 *
hash
) {

831 
Tokí
 *
tok
 = 
	`Àx
();

832 i‡(
tok
->
köd
 =
TNEWLINE
)

834 i‡(
tok
->
köd
 =
TNUMBER
) {

835 
	`ªad_löem¨kî
(
tok
);

838 i‡(
tok
->
köd
 !
TIDENT
)

839 
îr
;

840 *
s
 = 
tok
->
svÆ
;

841 i‡(!
	`°rcmp
(
s
, "deföe")Ë
	`ªad_deföe
();

842 i‡(!
	`°rcmp
(
s
, "ñif")Ë
	`ªad_ñif
(
hash
);

843 i‡(!
	`°rcmp
(
s
, "ñ£")Ë
	`ªad_ñ£
(
hash
);

844 i‡(!
	`°rcmp
(
s
, "ídif")Ë
	`ªad_ídif
(
hash
);

845 i‡(!
	`°rcmp
(
s
, "îr‹")Ë
	`ªad_îr‹
(
hash
);

846 i‡(!
	`°rcmp
(
s
, "if")Ë
	`ªad_if
();

847 i‡(!
	`°rcmp
(
s
, "ifdef")Ë
	`ªad_ifdef
();

848 i‡(!
	`°rcmp
(
s
, "i‚def")Ë
	`ªad_i‚def
();

849 i‡(!
	`°rcmp
(
s
, "imp‹t")Ë
	`ªad_ö˛ude
(
hash
, 
tok
->
fûe
, 
åue
);

850 i‡(!
	`°rcmp
(
s
, "ö˛ude")Ë
	`ªad_ö˛ude
(
hash
, 
tok
->
fûe
, 
Ál£
);

851 i‡(!
	`°rcmp
(
s
, "ö˛ude_√xt")Ë
	`ªad_ö˛ude_√xt
(
hash
, 
tok
->
fûe
);

852 i‡(!
	`°rcmp
(
s
, "löe")Ë
	`ªad_löe
();

853 i‡(!
	`°rcmp
(
s
, "¥agma")Ë
	`ªad_¥agma
();

854 i‡(!
	`°rcmp
(
s
, "undef")Ë
	`ªad_undef
();

855 i‡(!
	`°rcmp
(
s
, "w¨nög")Ë
	`ªad_w¨nög
(
hash
);

856 
îr
;

859 
îr
:

860 
	`îr‹t
(
hash
, "unsuµ‹ãdÖª¥o˚ss‹ dúe˘ive: %s", 
	`tok2s
(
tok
));

861 
	}
}

867 
	$make_tokí_pushback
(
Tokí
 *
tm∂
, 
köd
, *
svÆ
) {

868 
Tokí
 *
tok
 = 
	`c›y_tokí
(
tm∂
);

869 
tok
->
köd
 = kind;

870 
tok
->
svÆ
 = sval;

871 
tok
->
¶í
 = 
	`°æí
(
svÆ
) + 1;

872 
tok
->
íc
 = 
ENC_NONE
;

873 
	`ungë_tokí
(
tok
);

874 
	}
}

876 #i‚de‡
__eú__


877 
	$h™dÀ_d©e_ma¸o
(
Tokí
 *
tm∂
) {

878 
buf
[20];

879 
	`°r·ime
(
buf
, (buf), "%b %ê%Y", &
now
);

880 
	`make_tokí_pushback
(
tm∂
, 
TSTRING
, 
	`°rdup
(
buf
));

881 
	}
}

883 
	$h™dÀ_time_ma¸o
(
Tokí
 *
tm∂
) {

884 
buf
[10];

885 
	`°r·ime
(
buf
, (buf), "%T", &
now
);

886 
	`make_tokí_pushback
(
tm∂
, 
TSTRING
, 
	`°rdup
(
buf
));

887 
	}
}

889 
	$h™dÀ_time°amp_ma¸o
(
Tokí
 *
tm∂
) {

892 
buf
[30];

893 
	`°r·ime
(
buf
, (buf), "%®%b %ê%T %Y", 
	`loˇ…ime
(&
tm∂
->
fûe
->
mtime
));

894 
	`make_tokí_pushback
(
tm∂
, 
TSTRING
, 
	`°rdup
(
buf
));

895 
	}
}

898 
	$h™dÀ_fûe_ma¸o
(
Tokí
 *
tm∂
) {

899 
	`make_tokí_pushback
(
tm∂
, 
TSTRING
,Åm∂->
fûe
->
«me
);

900 
	}
}

902 
	$h™dÀ_löe_ma¸o
(
Tokí
 *
tm∂
) {

903 
	`make_tokí_pushback
(
tm∂
, 
TNUMBER
, 
	`f‹m©
("%d",Åm∂->
fûe
->
löe
));

904 
	}
}

906 
	$h™dÀ_¥agma_ma¸o
(
Tokí
 *
tm∂
) {

907 
	`˝p_ex≥˘
('(');

908 
Tokí
 *
›î™d
 = 
	`ªad_tokí
();

909 i‡(
›î™d
->
köd
 !
TSTRING
)

910 
	`îr‹t
(
›î™d
, "_Pøgm®èke†®°rögÜôîÆ, buàgŸ %s", 
	`tok2s
(operand));

911 
	`˝p_ex≥˘
(')');

912 
	`∑r£_¥agma_›î™d
(
›î™d
);

913 
	`make_tokí_pushback
(
tm∂
, 
TNUMBER
, "1");

914 
	}
}

916 
	$h™dÀ_ba£_fûe_ma¸o
(
Tokí
 *
tm∂
) {

917 
	`make_tokí_pushback
(
tm∂
, 
TSTRING
, 
	`gë_ba£_fûe
());

918 
	}
}

920 
	$h™dÀ_cou¡î_ma¸o
(
Tokí
 *
tm∂
) {

921 
cou¡î
 = 0;

922 
	`make_tokí_pushback
(
tm∂
, 
TNUMBER
, 
	`f‹m©
("%d", 
cou¡î
++));

923 
	}
}

925 
	$h™dÀ_ö˛ude_Àvñ_ma¸o
(
Tokí
 *
tm∂
) {

926 
	`make_tokí_pushback
(
tm∂
, 
TNUMBER
, 
	`f‹m©
("%d", 
	`°ªam_dïth
() - 1));

927 
	}
}

933 
	$add_ö˛ude_∑th
(*
∑th
) {

934 
	`vec_push
(
°d_ö˛ude_∑th
, 
∑th
);

935 
	}
}

937 
	$deföe_obj_ma¸o
(*
«me
, 
Tokí
 *
vÆue
) {

938 
	`m≠_put
(
ma¸os
, 
«me
, 
	`make_obj_ma¸o
(
	`make_ve˘‹1
(
vÆue
)));

939 
	}
}

941 
	$deföe_•ecül_ma¸o
(*
«me
, 
S≥cülMa¸oH™dÀr
 *
‚
) {

942 
	`m≠_put
(
ma¸os
, 
«me
, 
	`make_•ecül_ma¸o
(
‚
));

943 
	}
}

945 
	$öô_keyw‹ds
() {

946 
	#›
(
id
, 
°r
Ë
	`m≠_put
(
keyw‹ds
, så, (*)id);

	)

947 
	#keyw‹d
(
id
, 
°r
, 
_
Ë
	`m≠_put
(
keyw‹ds
, så, (*)id);

	)

948 
	~"keyw‹d.öc
"

949 #unde‡
keyw‹d


950 #unde‡
›


951 
	}
}

953 
	$öô_¥edeföed_ma¸os
() {

955 
	`vec_push
(
°d_ö˛ude_∑th
, 
BUILD_DIR
 "/include");

956 
	`vec_push
(
°d_ö˛ude_∑th
, "/usr/local/lib/8cc/include");

957 
	`vec_push
(
°d_ö˛ude_∑th
, "/usr/local/include");

958 
	`vec_push
(
°d_ö˛ude_∑th
, "/usr/include");

959 
	`vec_push
(
°d_ö˛ude_∑th
, "/usr/include/linux");

960 
	`vec_push
(
°d_ö˛ude_∑th
, "/usr/include/x86_64-linux-gnu");

963 #i‚de‡
__eú__


964 
	`deföe_•ecül_ma¸o
("__DATE__", 
h™dÀ_d©e_ma¸o
);

965 
	`deföe_•ecül_ma¸o
("__TIME__", 
h™dÀ_time_ma¸o
);

967 
	`deföe_•ecül_ma¸o
("__FILE__", 
h™dÀ_fûe_ma¸o
);

968 
	`deföe_•ecül_ma¸o
("__LINE__", 
h™dÀ_löe_ma¸o
);

969 
	`deföe_•ecül_ma¸o
("_Pøgma", 
h™dÀ_¥agma_ma¸o
);

971 
	`deföe_•ecül_ma¸o
("__BASE_FILE__", 
h™dÀ_ba£_fûe_ma¸o
);

972 
	`deföe_•ecül_ma¸o
("__COUNTER__", 
h™dÀ_cou¡î_ma¸o
);

973 
	`deföe_•ecül_ma¸o
("__INCLUDE_LEVEL__", 
h™dÀ_ö˛ude_Àvñ_ma¸o
);

974 #i‚de‡
__eú__


975 
	`deföe_•ecül_ma¸o
("__TIMESTAMP__", 
h™dÀ_time°amp_ma¸o
);

979 
	`ªad_‰om_°rög
("#ö˛udê<" 
BUILD_DIR
 "/include/8cc.h>");

981 
	`ªad_‰om_°rög
("#define _LP64 1");

982 
	`ªad_‰om_°rög
("#define __8cc__ 1");

983 
	`ªad_‰om_°rög
("#define __ELF__ 1");

984 
	`ªad_‰om_°rög
("#define __LP64__ 1");

985 
	`ªad_‰om_°rög
("#define __SIZEOF_DOUBLE__ 1");

986 
	`ªad_‰om_°rög
("#define __SIZEOF_FLOAT__ 1");

987 
	`ªad_‰om_°rög
("#define __SIZEOF_INT__ 1");

988 
	`ªad_‰om_°rög
("#define __SIZEOF_LONG_DOUBLE__ 1");

989 
	`ªad_‰om_°rög
("#define __SIZEOF_LONG_LONG__ 1");

990 
	`ªad_‰om_°rög
("#define __SIZEOF_LONG__ 1");

991 
	`ªad_‰om_°rög
("#define __SIZEOF_POINTER__ 1");

992 
	`ªad_‰om_°rög
("#define __SIZEOF_PTRDIFF_T__ 1");

993 
	`ªad_‰om_°rög
("#define __SIZEOF_SHORT__ 1");

994 
	`ªad_‰om_°rög
("#define __SIZEOF_SIZE_T__ 1");

995 
	`ªad_‰om_°rög
("#define __STDC_HOSTED__ 1");

996 
	`ªad_‰om_°rög
("#define __STDC_ISO_10646__ 201103L");

997 
	`ªad_‰om_°rög
("#define __STDC_NO_ATOMICS__ 1");

998 
	`ªad_‰om_°rög
("#define __STDC_NO_COMPLEX__ 1");

999 
	`ªad_‰om_°rög
("#define __STDC_NO_THREADS__ 1");

1000 
	`ªad_‰om_°rög
("#define __STDC_NO_VLA__ 1");

1001 
	`ªad_‰om_°rög
("#define __STDC_UTF_16__ 1");

1002 
	`ªad_‰om_°rög
("#define __STDC_UTF_32__ 1");

1003 
	`ªad_‰om_°rög
("#define __STDC_VERSION__ 201112L");

1004 
	`ªad_‰om_°rög
("#define __STDC__ 1");

1005 
	`ªad_‰om_°rög
("#define __eir__ 1");

1007 
	}
}

1009 
	$öô_now
() {

1010 #i‚de‡
__eú__


1011 
time_t
 
timë
 = 
	`time
(
NULL
);

1012 
	`loˇ…ime_r
(&
timë
, &
now
);

1014 
	}
}

1016 
	$˝p_öô
() {

1017 
	`£éoˇÀ
(
LC_ALL
, "C");

1018 
	`öô_keyw‹ds
();

1019 
	`öô_now
();

1020 
	`öô_¥edeföed_ma¸os
();

1021 
	}
}

1027 
Tokí
 *
	$maybe_c⁄vît_keyw‹d
(
Tokí
 *
tok
) {

1028 i‡(
tok
->
köd
 !
TIDENT
)

1029  
tok
;

1030 
id
 = (
öçå_t
)
	`m≠_gë
(
keyw‹ds
, 
tok
->
svÆ
);

1031 i‡(!
id
)

1032  
tok
;

1033 
Tokí
 *
r
 = 
	`c›y_tokí
(
tok
);

1034 
r
->
köd
 = 
TKEYWORD
;

1035 
r
->
id
 = id;

1036  
r
;

1037 
	}
}

1041 
	$ªad_‰om_°rög
(*
buf
) {

1042 
	`°ªam_°ash
(
	`make_fûe_°rög
(
buf
));

1043 
Ve˘‹
 *
t›Àvñs
 = 
	`ªad_t›Àvñs
();

1044 
i
 = 0; i < 
	`vec_Àn
(
t›Àvñs
); i++)

1045 
	`emô_t›Àvñ
(
	`vec_gë
(
t›Àvñs
, 
i
));

1046 
	`°ªam_un°ash
();

1047 
	}
}

1049 
Tokí
 *
	$≥ek_tokí
() {

1050 
Tokí
 *
r
 = 
	`ªad_tokí
();

1051 
	`ungë_tokí
(
r
);

1052  
r
;

1053 
	}
}

1055 
Tokí
 *
	$ªad_tokí
() {

1056 
Tokí
 *
tok
;

1058 
tok
 = 
	`ªad_ex∑nd
();

1059 i‡(
tok
->
bﬁ
 && 
	`is_keyw‹d
—ok, '#'Ë&&Åok->
hide£t
 =
NULL
) {

1060 
	`ªad_dúe˘ive
(
tok
);

1063 
	`as£π
(
tok
->
köd
 < 
MIN_CPP_TOKEN
);

1064  
	`maybe_c⁄vît_keyw‹d
(
tok
);

1066 
	}
}

	@8cc/debug.c

3 
	~"8cc.h
"

5 *
	$dec‹©e_öt
(*
«me
, 
Ty≥
 *
ty
) {

6 *
u
 = (
ty
->
usig
) ? "u" : "";

7 i‡(
ty
->
bôsize
 > 0)

8  
	`f‹m©
("%s%s:%d:%d", 
u
, 
«me
, 
ty
->
bôoff
,Åy->bôof‡+Åy->
bôsize
);

9  
	`f‹m©
("%s%s", 
u
, 
«me
);

10 
	}
}

12 *
	$do_ty2s
(
Di˘
 *
di˘
, 
Ty≥
 *
ty
) {

13 i‡(!
ty
)

15 
ty
->
köd
) {

16 
KIND_VOID
:  "void";

17 
KIND_BOOL
:  "_Bool";

18 
KIND_CHAR
:  
	`dec‹©e_öt
("ch¨", 
ty
);

19 
KIND_SHORT
:  
	`dec‹©e_öt
("sh‹t", 
ty
);

20 
KIND_INT
:  
	`dec‹©e_öt
("öt", 
ty
);

21 
KIND_LONG
:  
	`dec‹©e_öt
("l⁄g", 
ty
);

22 
KIND_LLONG
:  
	`dec‹©e_öt
("Œ⁄g", 
ty
);

23 
KIND_FLOAT
:  "float";

24 
KIND_DOUBLE
:  "double";

25 
KIND_LDOUBLE
:  "long double";

26 
KIND_PTR
:

27  
	`f‹m©
("*%s", 
	`do_ty2s
(
di˘
, 
ty
->
±r
));

28 
KIND_ARRAY
:

29  
	`f‹m©
("[%d]%s", 
ty
->
Àn
, 
	`do_ty2s
(
di˘
,Åy->
±r
));

30 
KIND_STRUCT
: {

31 *
köd
 = 
ty
->
is_°ru˘
 ? "struct" : "union";

32 i‡(
	`di˘_gë
(
di˘
, 
	`f‹m©
("%p", 
ty
)))

33  
	`f‹m©
("(%s)", 
köd
);

34 
	`di˘_put
(
di˘
, 
	`f‹m©
("%p", 
ty
), (*)1);

35 i‡(
ty
->
fõlds
) {

36 
Buf„r
 *
b
 = 
	`make_buf„r
();

37 
	`buf_¥ötf
(
b
, "(%s", 
köd
);

38 
Ve˘‹
 *
keys
 = 
	`di˘_keys
(
ty
->
fõlds
);

39 
i
 = 0; i < 
	`vec_Àn
(
keys
); i++) {

40 *
key
 = 
	`vec_gë
(
keys
, 
i
);

41 
Ty≥
 *
fõldty≥
 = 
	`di˘_gë
(
ty
->
fõlds
, 
key
);

42 
	`buf_¥ötf
(
b
, " (%s)", 
	`do_ty2s
(
di˘
, 
fõldty≥
));

44 
	`buf_¥ötf
(
b
, ")");

45  
	`buf_body
(
b
);

48 
KIND_FUNC
: {

49 
Buf„r
 *
b
 = 
	`make_buf„r
();

50 
	`buf_¥ötf
(
b
, "(");

51 i‡(
ty
->
∑øms
) {

52 
i
 = 0; i < 
	`vec_Àn
(
ty
->
∑øms
); i++) {

53 i‡(
i
 > 0)

54 
	`buf_¥ötf
(
b
, ",");

55 
Ty≥
 *
t
 = 
	`vec_gë
(
ty
->
∑øms
, 
i
);

56 
	`buf_¥ötf
(
b
, "%s", 
	`do_ty2s
(
di˘
, 
t
));

59 
	`buf_¥ötf
(
b
, ")=>%s", 
	`do_ty2s
(
di˘
, 
ty
->
ªây≥
));

60  
	`buf_body
(
b
);

63  
	`f‹m©
("(Unknow¿ty: %d)", 
ty
->
köd
);

65 
	}
}

67 *
	$ty2s
(
Ty≥
 *
ty
) {

68  
	`do_ty2s
(
	`make_di˘
(), 
ty
);

69 
	}
}

71 
	$u›_to_°rög
(
Buf„r
 *
b
, *
›
, 
Node
 *
node
) {

72 
	`buf_¥ötf
(
b
, "(%†%s)", 
›
, 
	`node2s
(
node
->
›î™d
));

73 
	}
}

75 
	$bö›_to_°rög
(
Buf„r
 *
b
, *
›
, 
Node
 *
node
) {

76 
	`buf_¥ötf
(
b
, "(%†%†%s)", 
›
, 
	`node2s
(
node
->
À·
),Çode2s“ode->
right
));

77 
	}
}

79 
	$a2s_de˛öô
(
Buf„r
 *
b
, 
Ve˘‹
 *
öôli°
) {

80 
i
 = 0; i < 
	`vec_Àn
(
öôli°
); i++) {

81 i‡(
i
 > 0)

82 
	`buf_¥ötf
(
b
, " ");

83 
Node
 *
öô
 = 
	`vec_gë
(
öôli°
, 
i
);

84 
	`buf_¥ötf
(
b
, "%s", 
	`node2s
(
öô
));

86 
	}
}

88 
	$do_node2s
(
Buf„r
 *
b
, 
Node
 *
node
) {

89 i‡(!
node
) {

90 
	`buf_¥ötf
(
b
, "(nil)");

93 
node
->
köd
) {

94 
AST_LITERAL
:

95 
node
->
ty
->
köd
) {

96 
KIND_CHAR
:

97 i‡(
node
->
ivÆ
 ='\n'Ë
	`buf_¥ötf
(
b
, "'\n'");

98 i‡(
node
->
ivÆ
 ='\\'Ë
	`buf_¥ötf
(
b
, "'\\\\'");

99 i‡(
node
->
ivÆ
 ='\0'Ë
	`buf_¥ötf
(
b
, "'\\0'");

100 
	`buf_¥ötf
(
b
, "'%c'", 
node
->
ivÆ
);

102 
KIND_INT
:

103 
	`buf_¥ötf
(
b
, "%d", 
node
->
ivÆ
);

105 
KIND_LONG
:

106 
	`buf_¥ötf
(
b
, "%ldL", 
node
->
ivÆ
);

108 
KIND_LLONG
:

109 
	`buf_¥ötf
(
b
, "%ŒdL", 
node
->
ivÆ
);

111 
KIND_FLOAT
:

112 
KIND_DOUBLE
:

113 
KIND_LDOUBLE
:

114 
	`buf_¥ötf
(
b
, "%f", 
node
->
fvÆ
);

116 
KIND_ARRAY
:

117 
	`buf_¥ötf
(
b
, "\"%s\"", 
	`quŸe_c°rög
(
node
->
svÆ
));

120 
	`îr‹
("internalÉrror");

123 
AST_LABEL
:

124 
	`buf_¥ötf
(
b
, "%s:", 
node
->
œbñ
);

126 
AST_LVAR
:

127 
	`buf_¥ötf
(
b
, "lv=%s", 
node
->
v¨«me
);

128 i‡(
node
->
lv¨öô
) {

129 
	`buf_¥ötf
(
b
, "(");

130 
	`a2s_de˛öô
(
b
, 
node
->
lv¨öô
);

131 
	`buf_¥ötf
(
b
, ")");

134 
AST_GVAR
:

135 
	`buf_¥ötf
(
b
, "gv=%s", 
node
->
v¨«me
);

137 
AST_FUNCALL
:

138 
AST_FUNCPTR_CALL
: {

139 
	`buf_¥ötf
(
b
, "(%s)%s(", 
	`ty2s
(
node
->
ty
),

140 
node
->
köd
 =
AST_FUNCALL
 ?Çode->
‚ame
 : 
	`node2s
(node));

141 
i
 = 0; i < 
	`vec_Àn
(
node
->
¨gs
); i++) {

142 i‡(
i
 > 0)

143 
	`buf_¥ötf
(
b
, ",");

144 
	`buf_¥ötf
(
b
, "%s", 
	`node2s
(
	`vec_gë
(
node
->
¨gs
, 
i
)));

146 
	`buf_¥ötf
(
b
, ")");

149 
AST_FUNCDESG
: {

150 
	`buf_¥ötf
(
b
, "(funcdesg %s)", 
node
->
‚ame
);

153 
AST_FUNC
: {

154 
	`buf_¥ötf
(
b
, "(%s)%s(", 
	`ty2s
(
node
->
ty
),Çode->
‚ame
);

155 
i
 = 0; i < 
	`vec_Àn
(
node
->
∑øms
); i++) {

156 i‡(
i
 > 0)

157 
	`buf_¥ötf
(
b
, ",");

158 
Node
 *
∑øm
 = 
	`vec_gë
(
node
->
∑øms
, 
i
);

159 
	`buf_¥ötf
(
b
, "%†%s", 
	`ty2s
(
∑øm
->
ty
), 
	`node2s
(param));

161 
	`buf_¥ötf
(
b
, ")");

162 
	`do_node2s
(
b
, 
node
->
body
);

165 
AST_GOTO
:

166 
	`buf_¥ötf
(
b
, "gŸo(%s)", 
node
->
œbñ
);

168 
AST_DECL
:

169 
	`buf_¥ötf
(
b
, "(decl %s %s",

170 
	`ty2s
(
node
->
de˛v¨
->
ty
),

171 
node
->
de˛v¨
->
v¨«me
);

172 i‡(
node
->
de˛öô
) {

173 
	`buf_¥ötf
(
b
, " ");

174 
	`a2s_de˛öô
(
b
, 
node
->
de˛öô
);

176 
	`buf_¥ötf
(
b
, ")");

178 
AST_INIT
:

179 
	`buf_¥ötf
(
b
, "%s@%d", 
	`node2s
(
node
->
öôvÆ
),Çode->
öôoff
, 
	`ty2s
“ode->
tŸy≥
));

181 
AST_CONV
:

182 
	`buf_¥ötf
(
b
, "(c⁄v %s=>%s)", 
	`node2s
(
node
->
›î™d
), 
	`ty2s
“ode->
ty
));

184 
AST_IF
:

185 
	`buf_¥ötf
(
b
, "(if %s %s",

186 
	`node2s
(
node
->
c⁄d
),

187 
	`node2s
(
node
->
thí
));

188 i‡(
node
->
ñs
)

189 
	`buf_¥ötf
(
b
, " %s", 
	`node2s
(
node
->
ñs
));

190 
	`buf_¥ötf
(
b
, ")");

192 
AST_TERNARY
:

193 
	`buf_¥ötf
(
b
, "(? %s %s %s)",

194 
	`node2s
(
node
->
c⁄d
),

195 
	`node2s
(
node
->
thí
),

196 
	`node2s
(
node
->
ñs
));

198 
AST_RETURN
:

199 
	`buf_¥ötf
(
b
, "‘ëu∫ %s)", 
	`node2s
(
node
->
ªtvÆ
));

201 
AST_COMPOUND_STMT
: {

202 
	`buf_¥ötf
(
b
, "{");

203 
i
 = 0; i < 
	`vec_Àn
(
node
->
°mts
); i++) {

204 
	`do_node2s
(
b
, 
	`vec_gë
(
node
->
°mts
, 
i
));

205 
	`buf_¥ötf
(
b
, ";");

207 
	`buf_¥ötf
(
b
, "}");

210 
AST_STRUCT_REF
:

211 
	`do_node2s
(
b
, 
node
->
°ruc
);

212 
	`buf_¥ötf
(
b
, ".");

213 
	`buf_¥ötf
(
b
, 
node
->
fõld
);

215 
AST_ADDR
: 
	`u›_to_°rög
(
b
, "addr", 
node
); ;

216 
AST_DEREF
: 
	`u›_to_°rög
(
b
, "dîef", 
node
); ;

217 
OP_SAL
: 
	`bö›_to_°rög
(
b
, "<<", 
node
); ;

218 
OP_SAR
:

219 
OP_SHR
: 
	`bö›_to_°rög
(
b
, ">>", 
node
); ;

220 
OP_GE
: 
	`bö›_to_°rög
(
b
, ">=", 
node
); ;

221 
OP_LE
: 
	`bö›_to_°rög
(
b
, "<=", 
node
); ;

222 
OP_NE
: 
	`bö›_to_°rög
(
b
, "!=", 
node
); ;

223 
OP_PRE_INC
: 
	`u›_to_°rög
(
b
, "¥e++", 
node
); ;

224 
OP_PRE_DEC
: 
	`u›_to_°rög
(
b
, "¥e--", 
node
); ;

225 
OP_POST_INC
: 
	`u›_to_°rög
(
b
, "po°++", 
node
); ;

226 
OP_POST_DEC
: 
	`u›_to_°rög
(
b
, "po°--", 
node
); ;

227 
OP_LOGAND
: 
	`bö›_to_°rög
(
b
, "™d", 
node
); ;

228 
OP_LOGOR
: 
	`bö›_to_°rög
(
b
, "‹", 
node
); ;

229 
OP_A_ADD
: 
	`bö›_to_°rög
(
b
, "+=", 
node
); ;

230 
OP_A_SUB
: 
	`bö›_to_°rög
(
b
, "-=", 
node
); ;

231 
OP_A_MUL
: 
	`bö›_to_°rög
(
b
, "*=", 
node
); ;

232 
OP_A_DIV
: 
	`bö›_to_°rög
(
b
, "/=", 
node
); ;

233 
OP_A_MOD
: 
	`bö›_to_°rög
(
b
, "%=", 
node
); ;

234 
OP_A_AND
: 
	`bö›_to_°rög
(
b
, "&=", 
node
); ;

235 
OP_A_OR
: 
	`bö›_to_°rög
(
b
, "|=", 
node
); ;

236 
OP_A_XOR
: 
	`bö›_to_°rög
(
b
, "^=", 
node
); ;

237 
OP_A_SAL
: 
	`bö›_to_°rög
(
b
, "<<=", 
node
); ;

238 
OP_A_SAR
:

239 
OP_A_SHR
: 
	`bö›_to_°rög
(
b
, ">>=", 
node
); ;

240 '!': 
	`u›_to_°rög
(
b
, "!", 
node
); ;

241 '&': 
	`bö›_to_°rög
(
b
, "&", 
node
); ;

242 '|': 
	`bö›_to_°rög
(
b
, "|", 
node
); ;

243 
OP_CAST
: {

244 
	`buf_¥ötf
(
b
, "((%s)=>(%s) %s)",

245 
	`ty2s
(
node
->
›î™d
->
ty
),

246 
	`ty2s
(
node
->
ty
),

247 
	`node2s
(
node
->
›î™d
));

250 
OP_LABEL_ADDR
:

251 
	`buf_¥ötf
(
b
, "&&%s", 
node
->
œbñ
);

254 *
À·
 = 
	`node2s
(
node
->left);

255 *
right
 = 
	`node2s
(
node
->right);

256 i‡(
node
->
köd
 =
OP_EQ
)

257 
	`buf_¥ötf
(
b
, "(== ");

259 
	`buf_¥ötf
(
b
, "(%¯", 
node
->
köd
);

260 
	`buf_¥ötf
(
b
, "%†%s)", 
À·
, 
right
);

263 
	}
}

265 *
	$node2s
(
Node
 *
node
) {

266 
Buf„r
 *
b
 = 
	`make_buf„r
();

267 
	`do_node2s
(
b
, 
node
);

268  
	`buf_body
(
b
);

269 
	}
}

271 *
	$ícodög_¥efix
(
íc
) {

272 
íc
) {

273 
ENC_CHAR16
:  "u";

274 
ENC_CHAR32
:  "U";

275 
ENC_UTF8
:  "u8";

276 
ENC_WCHAR
:  "L";

279 
	}
}

281 *
	$tok2s
(
Tokí
 *
tok
) {

282 i‡(!
tok
)

284 
tok
->
köd
) {

285 
TIDENT
:

286  
tok
->
svÆ
;

287 
TKEYWORD
:

288 
tok
->
id
) {

289 
	#›
(
id
, 
°r
Ëid:  så;

	)

290 
	#keyw‹d
(
id
, 
°r
, 
_
Ëid:  så;

	)

291 
	~"keyw‹d.öc
"

292 #unde‡
keyw‹d


293 #unde‡
›


294 :  
	`f‹m©
("%c", 
tok
->
id
);

296 
TCHAR
:

297  
	`f‹m©
("%s'%s'",

298 
	`ícodög_¥efix
(
tok
->
íc
),

299 
	`quŸe_ch¨
(
tok
->
c
));

300 
TNUMBER
:

301  
tok
->
svÆ
;

302 
TSTRING
:

303  
	`f‹m©
("%s\"%s\"",

304 
	`ícodög_¥efix
(
tok
->
íc
),

305 
	`quŸe_c°rög
(
tok
->
svÆ
));

306 
TEOF
:

308 
TINVALID
:

309  
	`f‹m©
("%c", 
tok
->
c
);

310 
TNEWLINE
:

312 
TSPACE
:

314 
TMACRO_PARAM
:

317 
	`îr‹
("öã∫ÆÉº‹: unknow¿tokí köd: %d", 
tok
->
köd
);

318 
	}
}

	@8cc/dict.c

3 
	~<°dlib.h
>

4 
	~"8cc.h
"

6 
Di˘
 *
	$make_di˘
() {

7 
Di˘
 *
r
 = 
	`mÆloc
((Dict));

8 
r
->
m≠
 = 
	`make_m≠
();

9 
r
->
key
 = 
	`make_ve˘‹
();

10  
r
;

11 
	}
}

13 *
	$di˘_gë
(
Di˘
 *
di˘
, *
key
) {

14  
	`m≠_gë
(
di˘
->
m≠
, 
key
);

15 
	}
}

17 
	$di˘_put
(
Di˘
 *
di˘
, *
key
, *
vÆ
) {

18 
	`m≠_put
(
di˘
->
m≠
, 
key
, 
vÆ
);

19 
	`vec_push
(
di˘
->
key
, key);

20 
	}
}

22 
Ve˘‹
 *
	$di˘_keys
(
Di˘
 *
di˘
) {

23  
di˘
->
key
;

24 
	}
}

	@8cc/encoding.c

11 
	~"8cc.h
"

13 
	$cou¡_Àadög_⁄es
(
c
) {

14 
i
 = 7; i >= 0; i--)

15 i‡((
c
 & (1 << 
i
)) == 0)

16  7 - 
i
;

18 
	}
}

20 
	$ªad_ru√
(
uöt32_t
 *
r
, *
s
, *
íd
) {

21 
Àn
 = 
	`cou¡_Àadög_⁄es
(
s
[0]);

22 i‡(
Àn
 == 0) {

23 *
r
 = 
s
[0];

26 i‡(
s
 + 
Àn
 > 
íd
)

27 
	`îr‹
("invalid UTF-8 sequence");

28 
i
 = 1; i < 
Àn
; i++)

29 i‡((
s
[
i
] & 0xC0) != 0x80)

30 
	`îr‹
("invalid UTF-8 continuation byte");

31 
Àn
) {

33 *
r
 = ((
s
[0] & 0x1F) << 6) | (s[1] & 0x3F);

36 *
r
 = ((
s
[0] & 0xF) << 12) | ((s[1] & 0x3F) << 6) | (s[2] & 0x3F);

39 *
r
 = ((
s
[0] & 0x7) << 18) | ((s[1] & 0x3F) << 12) | ((s[2] & 0x3F) << 6) | (s[3] & 0x3F);

42 
	`îr‹
("invalid UTF-8 sequence");

43 
	}
}

45 
	$wrôe16
(
Buf„r
 *
b
, 
uöt16_t
 
x
) {

46 
	`buf_wrôe
(
b
, 
x
 & 0xFF);

47 
	`buf_wrôe
(
b
, 
x
 >> 8);

48 
	}
}

50 
	$wrôe32
(
Buf„r
 *
b
, 
uöt32_t
 
x
) {

51 
	`wrôe16
(
b
, 
x
 & 0xFFFF);

52 
	`wrôe16
(
b
, 
x
 >> 16);

53 
	}
}

55 
Buf„r
 *
	$to_utf16
(*
p
, 
Àn
) {

56 
Buf„r
 *
b
 = 
	`make_buf„r
();

57 *
íd
 = 
p
 + 
Àn
;

58 
p
 !
íd
) {

59 
uöt32_t
 
ru√
;

60 
p
 +
	`ªad_ru√
(&
ru√
,Ö, 
íd
);

61 i‡(
ru√
 < 0x10000) {

62 
	`wrôe16
(
b
, 
ru√
);

64 
	`wrôe16
(
b
, (
ru√
 >> 10) + 0xD7C0);

65 
	`wrôe16
(
b
, (
ru√
 & 0x3FF) + 0xDC00);

68  
b
;

69 
	}
}

71 
Buf„r
 *
	$to_utf32
(*
p
, 
Àn
) {

72 
Buf„r
 *
b
 = 
	`make_buf„r
();

73 *
íd
 = 
p
 + 
Àn
;

74 
p
 !
íd
) {

75 
uöt32_t
 
ru√
;

76 
p
 +
	`ªad_ru√
(&
ru√
,Ö, 
íd
);

77 
	`wrôe32
(
b
, 
ru√
);

79  
b
;

80 
	}
}

82 
	$wrôe_utf8
(
Buf„r
 *
b
, 
uöt32_t
 
ru√
) {

83 i‡(
ru√
 < 0x80) {

84 
	`buf_wrôe
(
b
, 
ru√
);

87 i‡(
ru√
 < 0x800) {

88 
	`buf_wrôe
(
b
, 0xC0 | (
ru√
 >> 6));

89 
	`buf_wrôe
(
b
, 0x80 | (
ru√
 & 0x3F));

92 i‡(
ru√
 < 0x10000) {

93 
	`buf_wrôe
(
b
, 0xE0 | (
ru√
 >> 12));

94 
	`buf_wrôe
(
b
, 0x80 | ((
ru√
 >> 6) & 0x3F));

95 
	`buf_wrôe
(
b
, 0x80 | (
ru√
 & 0x3F));

98 i‡(
ru√
 < 0x200000) {

99 
	`buf_wrôe
(
b
, 0xF0 | (
ru√
 >> 18));

100 
	`buf_wrôe
(
b
, 0x80 | ((
ru√
 >> 12) & 0x3F));

101 
	`buf_wrôe
(
b
, 0x80 | ((
ru√
 >> 6) & 0x3F));

102 
	`buf_wrôe
(
b
, 0x80 | (
ru√
 & 0x3F));

105 
	`îr‹
("övÆid UCS ch¨a˘î: \\U%08x", 
ru√
);

106 
	}
}

	@8cc/error.c

3 
	~<°d¨g.h
>

4 
	~<°dlib.h
>

5 
	~<uni°d.h
>

6 
	~"8cc.h
"

8 
boﬁ
 
	gíabÀ_w¨nög
 = 
åue
;

9 
boﬁ
 
	gw¨nög_is_îr‹
 = 
Ál£
;

11 
	$¥öt_îr‹
(*
löe
, *
pos
, *
œbñ
, *
fmt
, 
va_li°
 
¨gs
) {

12 
	`Ârötf
(
°dîr
, 
	`ißây
(
	`fûío
(°dîr)Ë? "\e[1;31m[%s]\e[0m " : "[%s] ", 
œbñ
);

13 
	`Ârötf
(
°dîr
, "%s: %s: ", 
löe
, 
pos
);

14 
	`vÂrötf
(
°dîr
, 
fmt
, 
¨gs
);

15 
	`Ârötf
(
°dîr
, "\n");

16 
	}
}

18 
	$îr‹f
(*
löe
, *
pos
, *
fmt
, ...) {

19 
va_li°
 
¨gs
;

20 
	`va_°¨t
(
¨gs
, 
fmt
);

21 
	`¥öt_îr‹
(
löe
, 
pos
, "ERROR", 
fmt
, 
¨gs
);

22 
	`va_íd
(
¨gs
);

23 
	`exô
(1);

24 
	}
}

26 
	$w¨nf
(*
löe
, *
pos
, *
fmt
, ...) {

27 i‡(!
íabÀ_w¨nög
)

29 *
œbñ
 = 
w¨nög_is_îr‹
 ? "ERROR" : "WARN";

30 
va_li°
 
¨gs
;

31 
	`va_°¨t
(
¨gs
, 
fmt
);

32 
	`¥öt_îr‹
(
löe
, 
pos
, 
œbñ
, 
fmt
, 
¨gs
);

33 
	`va_íd
(
¨gs
);

34 i‡(
w¨nög_is_îr‹
)

35 
	`exô
(1);

36 
	}
}

38 *
	$tokí_pos
(
Tokí
 *
tok
) {

39 
Fûe
 *
f
 = 
tok
->
fûe
;

40 i‡(!
f
)

42 *
«me
 = 
f
->name ? f->name : "(unknown)";

43  
	`f‹m©
("%s:%d:%d", 
«me
, 
tok
->
löe
,Åok->
cﬁumn
);

44 
	}
}

	@8cc/file.c

19 
	~<î∫o.h
>

20 
	~<°dlib.h
>

21 
	~<°rög.h
>

22 
	~<sys/°©.h
>

23 
	~<sys/ty≥s.h
>

24 
	~<uni°d.h
>

25 
	~"8cc.h
"

27 
Ve˘‹
 *
	gfûes
 = &
EMPTY_VECTOR
;

28 
Ve˘‹
 *
	g°ashed
 = &
EMPTY_VECTOR
;

30 
Fûe
 *
	$make_fûe
(
FILE
 *
fûe
, *
«me
) {

31 
Fûe
 *
r
 = 
	`ˇŒoc
(1, (File));

32 
r
->
fûe
 = file;

33 
r
->
«me
 =Çame;

34 
r
->
löe
 = 1;

35 
r
->
cﬁumn
 = 1;

36 #ifde‡
__eú__


37 
r
->
mtime
 = 0;

39 
°©
 
°
;

40 i‡(
	`f°©
(
	`fûío
(
fûe
), &
°
) == -1)

41 
	`îr‹
("f°© faûed: %s", 
	`°ªº‹
(
î∫o
));

42 
r
->
mtime
 = 
°
.
°_mtime
;

44  
r
;

45 
	}
}

47 
Fûe
 *
	$make_fûe_°rög
(*
s
) {

48 
Fûe
 *
r
 = 
	`ˇŒoc
(1, (File));

49 
r
->
löe
 = 1;

50 
r
->
cﬁumn
 = 1;

51 
r
->
p
 = 
s
;

52  
r
;

53 
	}
}

55 
	$˛o£_fûe
(
Fûe
 *
f
) {

56 i‡(
f
->
fûe
)

57 
	`f˛o£
(
f
->
fûe
);

58 
	}
}

60 
	$ªadc_fûe
(
Fûe
 *
f
) {

61 
c
 = 
	`gëc
(
f
->
fûe
);

62 i‡(
c
 =
EOF
) {

63 
c
 = (
f
->
œ°
 ='\n' || f->œ° =
EOF
) ? EOF : '\n';

64 } i‡(
c
 == '\r') {

65 
c2
 = 
	`gëc
(
f
->
fûe
);

66 i‡(
c2
 != '\n')

67 
	`ungëc
(
c2
, 
f
->
fûe
);

68 
c
 = '\n';

70 
f
->
œ°
 = 
c
;

71  
c
;

72 
	}
}

74 
	$ªadc_°rög
(
Fûe
 *
f
) {

75 
c
;

76 i‡(*
f
->
p
 == '\0') {

77 
c
 = (
f
->
œ°
 ='\n' || f->œ° =
EOF
) ? EOF : '\n';

78 } i‡(*
f
->
p
 == '\r') {

79 
f
->
p
++;

80 i‡(*
f
->
p
 == '\n')

81 
f
->
p
++;

82 
c
 = '\n';

84 
c
 = *
f
->
p
++;

86 
f
->
œ°
 = 
c
;

87  
c
;

88 
	}
}

90 
	$fûe_gë
() {

91 
Fûe
 *
f
 = 
	`vec_èû
(
fûes
);

92 
c
;

93 i‡(
f
->
buÊí
 > 0) {

94 
c
 = 
f
->
buf
[--f->
buÊí
];

95 } i‡(
f
->
fûe
) {

96 
c
 = 
	`ªadc_fûe
(
f
);

98 
c
 = 
	`ªadc_°rög
(
f
);

100 i‡(
c
 == '\n') {

101 
f
->
löe
++;

102 
f
->
cﬁumn
 = 1;

103 } i‡(
c
 !
EOF
) {

104 
f
->
cﬁumn
++;

106  
c
;

107 
	}
}

109 
	$ªadc
() {

111 
c
 = 
	`fûe_gë
();

112 i‡(
c
 =
EOF
) {

113 i‡(
	`vec_Àn
(
fûes
) == 1)

114  
c
;

115 
	`˛o£_fûe
(
	`vec_p›
(
fûes
));

118 i‡(
c
 != '\\')

119  
c
;

120 
c2
 = 
	`fûe_gë
();

121 i‡(
c2
 == '\n')

123 
	`uƒódc
(
c2
);

124  
c
;

126 
	}
}

128 
	$uƒódc
(
c
) {

129 i‡(
c
 =
EOF
)

131 
Fûe
 *
f
 = 
	`vec_èû
(
fûes
);

132 
	`as£π
(
f
->
buÊí
 < (f->
buf
) / (f->buf[0]));

133 
f
->
buf
[f->
buÊí
++] = 
c
;

134 i‡(
c
 == '\n') {

135 
f
->
cﬁumn
 = 1;

136 
f
->
löe
--;

138 
f
->
cﬁumn
--;

140 
	}
}

142 
Fûe
 *
	$cuºít_fûe
() {

143  
	`vec_èû
(
fûes
);

144 
	}
}

146 
	$°ªam_push
(
Fûe
 *
f
) {

147 
	`vec_push
(
fûes
, 
f
);

148 
	}
}

150 
	$°ªam_dïth
() {

151  
	`vec_Àn
(
fûes
);

152 
	}
}

154 *
	$öput_posôi⁄
() {

155 i‡(
	`vec_Àn
(
fûes
) == 0)

157 
Fûe
 *
f
 = 
	`vec_èû
(
fûes
);

158  
	`f‹m©
("%s:%d:%d", 
f
->
«me
, f->
löe
, f->
cﬁumn
);

159 
	}
}

161 
	$°ªam_°ash
(
Fûe
 *
f
) {

162 
	`vec_push
(
°ashed
, 
fûes
);

163 
fûes
 = 
	`make_ve˘‹1
(
f
);

164 
	}
}

166 
	$°ªam_un°ash
() {

167 
fûes
 = 
	`vec_p›
(
°ashed
);

168 
	}
}

	@8cc/gen.c

3 
	~<°d¨g.h
>

4 
	~<°dlib.h
>

5 
	~<°rög.h
>

6 
	~<sys/°©.h
>

7 
	~<sys/ty≥s.h
>

8 
	~<uni°d.h
>

9 
	~"8cc.h
"

11 
boﬁ
 
	gdump°ack
 = 
Ál£
;

12 
boﬁ
 
	gdumpsour˚
 = 
åue
;

14 
	gTAB
 = 8;

15 
Ve˘‹
 *
	gfun˘i⁄s
 = &
EMPTY_VECTOR
;

16 
	g°ackpos
;

18 
	gnumgp
;

19 
	gnumÂ
;

21 
FILE
 *
	gouçutÂ
;

22 
	gis_maö
;

24 
M≠
 *
	gsour˚_fûes
 = &
EMPTY_MAP
;

25 
M≠
 *
	gsour˚_löes
 = &
EMPTY_MAP
;

26 *
	gœ°_loc
 = "";

28 
emô_addr
(
Node
 *
node
);

29 
emô_ex¥
(
Node
 *
node
);

30 
emô_de˛_öô
(
Ve˘‹
 *
öôs
, 
off
, 
tŸÆsize
);

31 
do_emô_d©a
(
Ve˘‹
 *
öôs
, 
size
, 
off
, 
dïth
);

32 
emô_d©a
(
Node
 *
v
, 
off
, 
dïth
);

34 
	#REGAREA_SIZE
 176

	)

36 
	#emô
(...Ë
	`emôf
(
__LINE__
, "\t" 
__VA_ARGS__
)

	)

37 
	#emô_noödít
(...Ë
	`emôf
(
__LINE__
, 
__VA_ARGS__
)

	)

39 
	#as£π_Êﬂt
(Ë
	`as£π
(0 && "Êﬂt")

	)

41 #ifde‡
__eú__


42 
	#MOD24
(
x
Ë
	)
x

44 
	#MOD24
(
x
Ë(x & 0xffffff)

	)

47 #ifde‡
__GNUC__


48 
	#SAVE
 \

49 
ßve_hook
 
	`__©åibuã__
((
unu£d
, 
	`˛ónup
(
p›_fun˘i⁄
))); \

50 i‡(
dump°ack
) \

51 
	`vec_push
(
fun˘i⁄s
, (*)
__func__
);

	)

53 
	$p›_fun˘i⁄
(*
ign‹e
) {

54 i‡(
dump°ack
)

55 
	`vec_p›
(
fun˘i⁄s
);

56 
	}
}

58 
	#SAVE


	)

61 *
	$gë_ˇŒî_li°
() {

62 
Buf„r
 *
b
 = 
	`make_buf„r
();

63 
i
 = 0; i < 
	`vec_Àn
(
fun˘i⁄s
); i++) {

64 i‡(
i
 > 0)

65 
	`buf_¥ötf
(
b
, " -> ");

66 
	`buf_¥ötf
(
b
, "%s", 
	`vec_gë
(
fun˘i⁄s
, 
i
));

68 
	`buf_wrôe
(
b
, '\0');

69  
	`buf_body
(
b
);

70 
	}
}

72 
	$£t_ouçut_fûe
(
FILE
 *
Â
) {

73 
ouçutÂ
 = 
Â
;

74 
	}
}

76 
	$˛o£_ouçut_fûe
() {

77 
	`f˛o£
(
ouçutÂ
);

78 
	}
}

80 
	$emôf
(
löe
, *
fmt
, ...) {

82 
buf
[256];

83 
i
 = 0;

84 *
p
 = 
fmt
; *p;Ö++) {

85 
	`as£π
(
i
 < (
buf
) - 3);

86 i‡(*
p
 == '#') {

87 
buf
[
i
++] = '%';

88 
buf
[
i
++] = '%';

90 
buf
[
i
++] = *
p
;

93 
buf
[
i
] = '\0';

95 
va_li°
 
¨gs
;

96 
	`va_°¨t
(
¨gs
, 
fmt
);

97 
cﬁ
 = 
	`vÂrötf
(
ouçutÂ
, 
buf
, 
¨gs
);

98 
	`va_íd
(
¨gs
);

100 i‡(
dump°ack
) {

101 *
p
 = 
fmt
; *p;Ö++)

102 i‡(*
p
 == '\t')

103 
cﬁ
 +
TAB
 - 1;

104 
•a˚
 = (28 - 
cﬁ
) > 0 ? (30 - col) : 2;

105 
	`Ârötf
(
ouçutÂ
, "%*¯%s:%d", 
•a˚
, '#', 
	`gë_ˇŒî_li°
(), 
löe
);

107 
	`Ârötf
(
ouçutÂ
, "\n");

108 
	}
}

110 
	$emô_no°ack
(*
fmt
, ...) {

111 
	`Ârötf
(
ouçutÂ
, "\t");

112 
va_li°
 
¨gs
;

113 
	`va_°¨t
(
¨gs
, 
fmt
);

114 
	`vÂrötf
(
ouçutÂ
, 
fmt
, 
¨gs
);

115 
	`va_íd
(
¨gs
);

116 
	`Ârötf
(
ouçutÂ
, "\n");

117 
	}
}

119 
	$push
(*
ªg
) {

120 
SAVE
;

121 
	`as£π
(
	`°rcmp
(
ªg
, "D"));

122 
	`emô
("mov D, SP");

123 
	`emô
("add D, -1");

124 
	`emô
("°‹ê%s, D", 
ªg
);

125 
	`emô
("mov SP, D");

126 
°ackpos
 += 1;

127 
	}
}

129 
	$p›
(*
ªg
) {

130 
SAVE
;

131 
	`emô
("lﬂd %s, SP", 
ªg
);

132 
	`emô
("add SP, 1", 
ªg
);

133 
°ackpos
 -= 1;

134 
	`as£π
(
°ackpos
 >= 0);

135 
	}
}

138 
	$maybe_emô_bôshi·_lﬂd
(
Ty≥
 *
ty
) {

139 
SAVE
;

140 i‡(
ty
->
bôsize
 <= 0)

142 
	`emô
("sh∏$%d, #øx", 
ty
->
bôoff
);

143 
	`push
("rcx");

144 
	`emô
("mov $0x%lx, #rcx", (1 << ()
ty
->
bôsize
) - 1);

145 
	`emô
("and #rcx, #rax");

146 
	`p›
("rcx");

147 
	}
}

149 
	$maybe_emô_bôshi·_ßve
(
Ty≥
 *
ty
, *
addr
) {

150 
SAVE
;

151 i‡(
ty
->
bôsize
 <= 0)

153 
	`push
("rcx");

154 
	`push
("rdi");

155 
	`emô
("mov $0x%lx, #rdi", (1 << ()
ty
->
bôsize
) - 1);

156 
	`emô
("and #rdi, #rax");

157 
	`emô
("sh»$%d, #øx", 
ty
->
bôoff
);

158 
	`emô
("mov %s, #%s", 
addr
, 
	`gë_öt_ªg
(
ty
, 'c'));

159 
	`emô
("mov $0x%lx, #rdi", ~(((1 << ()
ty
->
bôsize
Ë- 1Ë<<Åy->
bôoff
));

160 
	`emô
("and #rdi, #rcx");

161 
	`emô
("or #rcx, #rax");

162 
	`p›
("rdi");

163 
	`p›
("rcx");

164 
	}
}

167 
	$emô_glﬂd
(
Ty≥
 *
ty
, *
œbñ
, 
off
) {

168 
SAVE
;

169 i‡(
ty
->
köd
 =
KIND_ARRAY
) {

170 
	`emô
("mov A, %s", 
œbñ
);

171 i‡(
off
)

172 
	`emô
("add A, %d", 
	`MOD24
(
off
));

175 
	`emô
("mov B, %s", 
œbñ
);

176 i‡(
off
)

177 
	`emô
("add B, %d", 
	`MOD24
(
off
));

178 
	`emô
("load A, B");

180 
	`maybe_emô_bôshi·_lﬂd
(
ty
);

182 
	}
}

184 
	$emô_ötˇ°
(
Ty≥
 *
ty
) {

185 
	}
}

187 
	$emô_toöt
(
Ty≥
 *
ty
) {

188 
SAVE
;

189 i‡(
ty
->
köd
 =
KIND_FLOAT
)

190 
	`emô
("cvttss2si #xmm0, #eax");

191 i‡(
ty
->
köd
 =
KIND_DOUBLE
)

192 
	`emô
("cvttsd2si #xmm0, #eax");

193 
	}
}

195 
	$emô_Œﬂd
(
Ty≥
 *
ty
, *
ba£
, 
off
) {

196 
SAVE
;

197 i‡(
ty
->
köd
 =
KIND_ARRAY
) {

198 
	`emô
("mov A, %s", 
ba£
);

199 i‡(
off
)

200 
	`emô
("add A, %d", 
	`MOD24
(
off
));

201 } i‡(
ty
->
köd
 =
KIND_FLOAT
) {

202 
	`as£π_Êﬂt
();

203 } i‡(
ty
->
köd
 =
KIND_DOUBLE
 ||Åy->köd =
KIND_LDOUBLE
) {

204 
	`as£π_Êﬂt
();

206 
	`emô
("mov B, %s", 
ba£
);

207 i‡(
off
)

208 
	`emô
("add B, %d", 
	`MOD24
(
off
));

209 
	`emô
("load A, B");

211 
	}
}

213 
	$maybe_c⁄vît_boﬁ
(
Ty≥
 *
ty
) {

214 i‡(
ty
->
köd
 =
KIND_BOOL
) {

215 
	`emô
("ne A, 0");

217 
	}
}

219 
	$emô_gßve
(*
v¨«me
, 
Ty≥
 *
ty
, 
off
) {

220 
SAVE
;

221 
	`as£π
(
ty
->
köd
 !
KIND_ARRAY
);

222 
	`maybe_c⁄vît_boﬁ
(
ty
);

224 *
ªg
 = 
	`gë_öt_ªg
(
ty
, 'a');

225 *
addr
 = 
	`f‹m©
("%s+%d(%%rù)", 
v¨«me
, 
off
);

226 
	`maybe_emô_bôshi·_ßve
(
ty
, 
addr
);

228 
	`emô
("mov B, %s", 
v¨«me
);

229 i‡(
off
)

230 
	`emô
("add B, %d", 
	`MOD24
(
off
));

231 
	`emô
("store A, B");

232 
	}
}

234 
	$emô_lßve
(
Ty≥
 *
ty
, 
off
) {

235 
SAVE
;

236 i‡(
ty
->
köd
 =
KIND_FLOAT
) {

237 
	`as£π_Êﬂt
();

238 } i‡(
ty
->
köd
 =
KIND_DOUBLE
) {

239 
	`as£π_Êﬂt
();

241 
	`emô
("mov B, BP");

242 i‡(
off
)

243 
	`emô
("add B, %d", 
	`MOD24
(
off
));

244 
	`emô
("store A, B");

246 
	}
}

248 
	$do_emô_assign_dîef
(
Ty≥
 *
ty
, 
off
) {

249 
SAVE
;

250 
	`emô
("mov C, A");

251 
	`emô
("load A, SP");

252 
	`emô
("mov B, A");

253 
	`emô
("mov A, C");

254 i‡(
off
)

255 
	`emô
("add A, %d", 
	`MOD24
(
off
));

256 
	`emô
("store B, A");

257 
	`p›
("A");

258 
	}
}

260 
	$emô_assign_dîef
(
Node
 *
v¨
) {

261 
SAVE
;

262 
	`push
("A");

263 
	`emô_ex¥
(
v¨
->
›î™d
);

264 
	`do_emô_assign_dîef
(
v¨
->
›î™d
->
ty
->
±r
, 0);

265 
	}
}

267 
emô_ˇŒ_buûtö
(*
‚ame
);

269 
	$emô_poöãr_¨ôh
(
köd
, 
Node
 *
À·
, Nodê*
right
) {

270 
SAVE
;

271 
	`emô_ex¥
(
À·
);

272 
	`push
("B");

273 
	`push
("A");

274 
	`emô_ex¥
(
right
);

276 i‡(
À·
->
ty
->
±r
->
size
 == 2)

277 
	`emô
("add A, A");

278 i‡(
À·
->
ty
->
±r
->
size
 > 2) {

279 
	`push
("A");

280 
	`emô
("mov A, %d", 
À·
->
ty
->
±r
->
size
);

281 
	`push
("A");

282 
	`emô_ˇŒ_buûtö
("__builtin_mul");

283 
	`emô
("add SP, 2");

284 
°ackpos
 -= 3;

287 
	`emô
("mov B, A");

288 
	`p›
("A");

289 
köd
) {

290 '+': 
	`emô
("add A, B"); ;

291 '-': 
	`emô
("sub A, B"); ;

292 : 
	`îr‹
("övÆid o≥øt‹ '%d'", 
köd
);

294 
	`emô
("mov C, A");

295 
	`p›
("A");

296 
	`emô
("mov B, A");

297 
	`emô
("mov A, C");

298 
	}
}

300 
	$emô_zîo_fûÀr
(
°¨t
, 
íd
) {

301 
SAVE
;

302 
	`emô
("mov A, 0");

303 
	`emô
("mov B, SP");

304 ; 
°¨t
 !
íd
; start++) {

305 
	`emô
("store A, B");

306 
	`emô
("add B, 1");

308 
	}
}

310 
	$ísuª_lv¨_öô
(
Node
 *
node
) {

311 
SAVE
;

312 
	`as£π
(
node
->
köd
 =
AST_LVAR
);

313 i‡(
node
->
lv¨öô
)

314 
	`emô_de˛_öô
(
node
->
lv¨öô
,Çode->
loff
,Çode->
ty
->
size
);

315 
node
->
lv¨öô
 = 
NULL
;

316 
	}
}

318 
	$emô_assign_°ru˘_ªf
(
Node
 *
°ruc
, 
Ty≥
 *
fõld
, 
off
) {

319 
SAVE
;

320 
°ruc
->
köd
) {

321 
AST_LVAR
:

322 
	`ísuª_lv¨_öô
(
°ruc
);

323 
	`emô_lßve
(
fõld
, 
°ruc
->
loff
 + fõld->
off£t
 + 
off
);

325 
AST_GVAR
:

326 
	`emô_gßve
(
°ruc
->
gœbñ
, 
fõld
, fõld->
off£t
 + 
off
);

328 
AST_STRUCT_REF
:

329 
	`emô_assign_°ru˘_ªf
(
°ruc
->°ruc, 
fõld
, 
off
 + såuc->
ty
->
off£t
);

331 
AST_DEREF
:

332 
	`push
("A");

333 
	`emô_ex¥
(
°ruc
->
›î™d
);

334 
	`do_emô_assign_dîef
(
fõld
, fõld->
off£t
 + 
off
);

337 
	`îr‹
("öã∫ÆÉº‹: %s", 
	`node2s
(
°ruc
));

339 
	}
}

341 
	$emô_lﬂd_°ru˘_ªf
(
Node
 *
°ruc
, 
Ty≥
 *
fõld
, 
off
) {

342 
SAVE
;

343 
°ruc
->
köd
) {

344 
AST_LVAR
:

345 
	`ísuª_lv¨_öô
(
°ruc
);

346 
	`emô_Œﬂd
(
fõld
, "BP", 
°ruc
->
loff
 + fõld->
off£t
 + 
off
);

348 
AST_GVAR
:

349 
	`emô_glﬂd
(
fõld
, 
°ruc
->
gœbñ
, fõld->
off£t
 + 
off
);

351 
AST_STRUCT_REF
:

352 
	`emô_lﬂd_°ru˘_ªf
(
°ruc
->°ruc, 
fõld
, såuc->
ty
->
off£t
 + 
off
);

354 
AST_DEREF
:

355 
	`emô_ex¥
(
°ruc
->
›î™d
);

356 
	`emô_Œﬂd
(
fõld
, "A", fõld->
off£t
 + 
off
);

359 
	`îr‹
("öã∫ÆÉº‹: %s", 
	`node2s
(
°ruc
));

361 
	}
}

363 
	$emô_°‹e
(
Node
 *
v¨
) {

364 
SAVE
;

365 
v¨
->
köd
) {

366 
AST_DEREF
: 
	`emô_assign_dîef
(
v¨
); ;

367 
AST_STRUCT_REF
: 
	`emô_assign_°ru˘_ªf
(
v¨
->
°ruc
, v¨->
ty
, 0); ;

368 
AST_LVAR
:

369 
	`ísuª_lv¨_öô
(
v¨
);

370 
	`emô_lßve
(
v¨
->
ty
, v¨->
loff
);

372 
AST_GVAR
: 
	`emô_gßve
(
v¨
->
gœbñ
, v¨->
ty
, 0); ;

373 : 
	`îr‹
("internalÉrror");

375 
	}
}

377 
	$emô_to_boﬁ
(
Ty≥
 *
ty
) {

378 
SAVE
;

379 i‡(
	`is_ÊŸy≥
(
ty
)) {

380 
	`as£π_Êﬂt
();

382 
	`emô
("ne A, 0");

384 
	}
}

386 
	$emô_comp
(*
ö°
, 
Node
 *
node
) {

387 
SAVE
;

388 i‡(
	`is_ÊŸy≥
(
node
->
À·
->
ty
)) {

389 
	`as£π_Êﬂt
();

391 
	`emô_ex¥
(
node
->
À·
);

392 
	`push
("A");

393 
	`emô_ex¥
(
node
->
right
);

394 
	`emô
("mov B, A");

395 
	`p›
("A");

397 
	`emô
("%†A, B", 
ö°
);

398 
	}
}

400 
	$emô_bö›_öt_¨ôh
(
Node
 *
node
) {

401 
SAVE
;

402 
	`emô_ex¥
(
node
->
À·
);

403 
	`push
("A");

404 
	`emô_ex¥
(
node
->
right
);

405 
	`emô
("mov B, A");

406 
	`p›
("A");

407 
node
->
köd
) {

409 
	`emô
("add A, B");

412 
	`emô
("sub A, B");

418 
OP_SAL
:

419 
OP_SAR
:

420 
OP_SHR
:

421 
	`push
("B");

422 
	`push
("A");

423 i‡(
node
->
köd
 == '*')

424 
	`emô_ˇŒ_buûtö
("__builtin_mul");

425 i‡(
node
->
köd
 == '/')

426 
	`emô_ˇŒ_buûtö
("__builtin_div");

427 i‡(
node
->
köd
 == '%')

428 
	`emô_ˇŒ_buûtö
("__builtin_mod");

429 i‡(
node
->
köd
 == '^')

430 
	`emô_ˇŒ_buûtö
("__builtin_xor");

431 i‡(
node
->
köd
 =
OP_SAL
)

432 
	`emô_ˇŒ_buûtö
("__builtin_shl");

433 i‡(
node
->
köd
 =
OP_SAR
 ||Çode->köd =
OP_SHR
)

434 
	`emô_ˇŒ_buûtö
("__builtin_shr");

435 
	`emô
("add SP, 2");

436 
°ackpos
 -= 3;

438 : 
	`îr‹
("övÆid o≥øt‹ '%d'", 
node
->
köd
);

440 
	}
}

442 
	$emô_bö›_Êﬂt_¨ôh
(
Node
 *
node
) {

443 
SAVE
;

444 
	`as£π_Êﬂt
();

445 
	}
}

447 
	$emô_lﬂd_c⁄vît
(
Ty≥
 *
to
, Ty≥ *
‰om
) {

448 
SAVE
;

449 i‡(
	`is_öây≥
(
‰om
Ë&& 
to
->
köd
 =
KIND_FLOAT
)

450 
	`emô
("cvtsi2ss #eax, #xmm0");

451 i‡(
	`is_öây≥
(
‰om
Ë&& 
to
->
köd
 =
KIND_DOUBLE
)

452 
	`emô
("cvtsi2sd #eax, #xmm0");

453 i‡(
‰om
->
köd
 =
KIND_FLOAT
 && 
to
->köd =
KIND_DOUBLE
)

454 
	`emô
("cvtps2pd #xmm0, #xmm0");

455 i‡((
‰om
->
köd
 =
KIND_DOUBLE
 || from->köd =
KIND_LDOUBLE
Ë&& 
to
->köd =
KIND_FLOAT
)

456 
	`emô
("cvtpd2ps #xmm0, #xmm0");

457 i‡(
to
->
köd
 =
KIND_BOOL
)

458 
	`emô_to_boﬁ
(
‰om
);

459 i‡(
	`is_öây≥
(
‰om
Ë&& is_öây≥(
to
))

460 
	`emô_ötˇ°
(
‰om
);

461 i‡(
	`is_öây≥
(
to
))

462 
	`emô_toöt
(
‰om
);

463 
	}
}

465 
	$emô_ªt
() {

466 
SAVE
;

467 i‡(
is_maö
) {

468 
	`emô
("exit");

470 
	`emô
("mov SP, BP");

471 
	`p›
("A");

472 
	`emô
("mov BP, A");

473 
	`p›
("A");

474 
	`emô
("jmp A");

475 
°ackpos
 += 2;

477 
	}
}

479 
	$emô_bö›
(
Node
 *
node
) {

480 
SAVE
;

481 i‡(
node
->
ty
->
köd
 =
KIND_PTR
) {

482 
	`emô_poöãr_¨ôh
(
node
->
köd
,Çode->
À·
,Çode->
right
);

485 
node
->
köd
) {

486 '<': 
	`emô_comp
("…", 
node
); ;

487 
OP_EQ
: 
	`emô_comp
("eq", 
node
); ;

488 
OP_LE
: 
	`emô_comp
("À", 
node
); ;

489 
OP_NE
: 
	`emô_comp
("√", 
node
); ;

491 i‡(
	`is_öây≥
(
node
->
ty
))

492 
	`emô_bö›_öt_¨ôh
(
node
);

493 i‡(
	`is_ÊŸy≥
(
node
->
ty
))

494 
	`emô_bö›_Êﬂt_¨ôh
(
node
);

496 
	`îr‹
("öã∫ÆÉº‹: %s", 
	`node2s
(
node
));

497 
	}
}

499 
	$emô_ßve_lôîÆ
(
Node
 *
node
, 
Ty≥
 *
tŸy≥
, 
off
) {

500 
v
 = 
node
->
ivÆ
;

501 
tŸy≥
->
köd
) {

502 
KIND_BOOL
:

503 
v
 = !!v;

504 
KIND_CHAR
:

505 
KIND_SHORT
:

506 
KIND_INT
:

507 
KIND_LONG
:

508 
KIND_LLONG
:

509 
KIND_PTR
: {

510 
	`emô
("mov B, BP");

511 i‡(
off
)

512 
	`emô
("add B, %d", 
	`MOD24
(
off
));

513 
	`emô
("mov A, %d", 
	`MOD24
(
v
));

514 
	`emô
("store A, B");

517 
KIND_FLOAT
:

518 
KIND_DOUBLE
:

519 
	`as£π_Êﬂt
();

521 
	`îr‹
("öã∫ÆÉº‹: <%s> <%s> <%d>", 
	`node2s
(
node
), 
	`ty2s
(
tŸy≥
), 
off
);

523 
	}
}

525 
	$emô_addr
(
Node
 *
node
) {

526 
node
->
köd
) {

527 
AST_LVAR
:

528 
	`ísuª_lv¨_öô
(
node
);

529 
	`emô
("mov A, BP");

530 
	`emô
("add A, %d", 
node
->
loff
);

532 
AST_GVAR
:

533 
	`emô
("mov A, %s", 
node
->
gœbñ
);

535 
AST_DEREF
:

536 
	`emô_ex¥
(
node
->
›î™d
);

538 
AST_STRUCT_REF
:

539 
	`emô_addr
(
node
->
°ruc
);

540 
	`emô
("add A, %d", 
node
->
ty
->
off£t
);

542 
AST_FUNCDESG
:

543 
	`emô
("mov A, %s", 
node
->
‚ame
);

546 
	`îr‹
("öã∫ÆÉº‹: %s", 
	`node2s
(
node
));

548 
	}
}

550 
	$emô_c›y_°ru˘
(
Node
 *
À·
, Nodê*
right
) {

551 
	`push
("B");

552 
	`push
("C");

553 
	`emô_addr
(
right
);

554 
	`push
("A");

555 
	`emô_addr
(
À·
);

556 
	`emô
("mov C, A");

557 
	`p›
("A");

558 
	`emô
("mov B, A");

559 
i
 = 0;

560 ; 
i
 < 
À·
->
ty
->
size
; i++) {

561 
	`emô
("load A, B");

562 
	`emô
("store A, C");

563 
	`emô
("add B, 1");

564 
	`emô
("add C, 1");

566 
	`p›
("A");

567 
	`emô
("mov C, A");

568 
	`p›
("A");

569 
	`emô
("mov B, A");

570 
	}
}

572 
	$cmpöô
(c⁄° *
x
, c⁄° *
y
) {

573 
Node
 *
a
 = *(Nodê**)
x
;

574 
Node
 *
b
 = *(Nodê**)
y
;

575  
a
->
öôoff
 - 
b
->initoff;

576 
	}
}

578 
	$emô_fûl_hﬁes
(
Ve˘‹
 *
öôs
, 
off
, 
tŸÆsize
) {

581 
Àn
 = 
	`vec_Àn
(
öôs
);

582 
Node
 **
buf
 = 
	`mÆloc
(
Àn
 * (Node *));

583 
i
 = 0; i < 
Àn
; i++)

584 
buf
[
i
] = 
	`vec_gë
(
öôs
, i);

585 
	`qs‹t
(
buf
, 
Àn
, (
Node
 *), 
cmpöô
);

587 
œ°íd
 = 0;

588 
i
 = 0; i < 
Àn
; i++) {

589 
Node
 *
node
 = 
buf
[
i
];

590 i‡(
œ°íd
 < 
node
->
öôoff
)

591 
	`emô_zîo_fûÀr
(
œ°íd
 + 
off
, 
node
->
öôoff
 + off);

592 
œ°íd
 = 
node
->
öôoff
 +Çode->
tŸy≥
->
size
;

594 
	`emô_zîo_fûÀr
(
œ°íd
 + 
off
, 
tŸÆsize
 + off);

595 
	}
}

597 
	$emô_de˛_öô
(
Ve˘‹
 *
öôs
, 
off
, 
tŸÆsize
) {

598 
	`emô_fûl_hﬁes
(
öôs
, 
off
, 
tŸÆsize
);

599 
i
 = 0; i < 
	`vec_Àn
(
öôs
); i++) {

600 
Node
 *
node
 = 
	`vec_gë
(
öôs
, 
i
);

601 
	`as£π
(
node
->
köd
 =
AST_INIT
);

602 
boﬁ
 
isbôfõld
 = (
node
->
tŸy≥
->
bôsize
 > 0);

603 i‡(
node
->
öôvÆ
->
köd
 =
AST_LITERAL
 && !
isbôfõld
) {

604 
	`emô_ßve_lôîÆ
(
node
->
öôvÆ
,Çode->
tŸy≥
,Çode->
öôoff
 + 
off
);

606 
	`emô_ex¥
(
node
->
öôvÆ
);

607 
	`emô_lßve
(
node
->
tŸy≥
,Çode->
öôoff
 + 
off
);

610 
	}
}

612 
	$emô_¥e_öc_dec
(
Node
 *
node
, *
›
) {

613 
	`emô_ex¥
(
node
->
›î™d
);

614 
	`emô
("%†A, 1", 
›
);

615 
	`emô_°‹e
(
node
->
›î™d
);

616 
	}
}

618 
	$emô_po°_öc_dec
(
Node
 *
node
, *
›
) {

619 
SAVE
;

620 
	`emô_ex¥
(
node
->
›î™d
);

621 
	`push
("A");

622 
	`emô
("%†A, 1", 
›
);

623 
	`emô_°‹e
(
node
->
›î™d
);

624 
	`p›
("A");

625 
	}
}

627 
	$emô_je
(*
œbñ
) {

628 
	`emô
("jeq %s, A, 0", 
œbñ
);

629 
	}
}

631 
	$emô_œbñ
(*
œbñ
) {

632 
	`emô
("%s:", 
œbñ
);

633 
	}
}

635 
	$emô_jmp
(*
œbñ
) {

636 
	`emô
("jm∞%s", 
œbñ
);

637 
	}
}

639 
	$emô_ˇŒ_buûtö
(*
‚ame
) {

640 *
íd
 = 
	`make_œbñ
();

641 
	`emô
("mov A, %s", 
íd
);

642 
	`push
("A");

643 
	`emô
("jm∞%s", 
‚ame
);

644 
	`emô_œbñ
(
íd
);

645 
	`emô
("mov A, B");

646 
	}
}

648 
	$emô_lôîÆ
(
Node
 *
node
) {

649 
SAVE
;

650 
node
->
ty
->
köd
) {

651 
KIND_BOOL
:

652 
KIND_CHAR
:

653 
KIND_SHORT
:

654 
	`emô
("mov A, %d", 
	`MOD24
(
node
->
ivÆ
));

656 
KIND_INT
:

657 
KIND_LONG
:

658 
KIND_LLONG
: {

659 
	`emô
("mov A, %d", 
	`MOD24
(
node
->
ivÆ
));

662 
KIND_FLOAT
:

663 
KIND_DOUBLE
:

664 
KIND_LDOUBLE
: {

665 
	`as£π_Êﬂt
();

668 
KIND_ARRAY
: {

669 i‡(!
node
->
¶abñ
) {

670 
node
->
¶abñ
 = 
	`make_œbñ
();

671 
	`emô_noödít
(".data");

672 
	`emô_œbñ
(
node
->
¶abñ
);

673 
	`emô
(".°rög \"%s\"", 
	`quŸe_c°rög_Àn
(
node
->
svÆ
,Çode->
ty
->
size
 - 1));

674 
	`emô_noödít
(".text");

676 
	`emô
("mov A, %s", 
node
->
¶abñ
);

680 
	`îr‹
("internalÉrror");

682 
	}
}

684 **
	$•lô
(*
buf
) {

685 *
p
 = 
buf
;

686 
Àn
 = 1;

687 *
p
) {

688 i‡(
p
[0] == '\r' &&Ö[1] == '\n') {

689 
Àn
++;

690 
p
 += 2;

693 i‡(
p
[0] == '\r' ||Ö[0] == '\n')

694 
Àn
++;

695 
p
++;

697 
p
 = 
buf
;

698 **
r
 = 
	`mÆloc
((*Ë* 
Àn
 + 1);

699 
i
 = 0;

700 *
p
) {

701 i‡(
p
[0] == '\r' &&Ö[1] == '\n') {

702 
p
[0] = '\0';

703 
p
 += 2;

704 
r
[
i
++] = 
p
;

707 i‡(
p
[0] == '\r' ||Ö[0] == '\n') {

708 
p
[0] = '\0';

709 
r
[
i
++] = 
p
 + 1;

711 
p
++;

713 
r
[
i
] = 
NULL
;

714  
r
;

715 
	}
}

717 #i‚de‡
__eú__


718 **
	$ªad_sour˚_fûe
(*
fûe
) {

719 
FILE
 *
Â
 = 
	`f›í
(
fûe
, "r");

720 i‡(!
Â
)

721  
NULL
;

722 
°©
 
°
;

723 
	`f°©
(
	`fûío
(
Â
), &
°
);

724 *
buf
 = 
	`mÆloc
(
°
.
°_size
 + 1);

725 i‡(
	`‰ód
(
buf
, 1, 
°
.
°_size
, 
Â
) != st.st_size)

726  
NULL
;

727 
	`f˛o£
(
Â
);

728 
buf
[
°
.
°_size
] = '\0';

729  
	`•lô
(
buf
);

730 
	}
}

733 
	$maybe_¥öt_sour˚_löe
(*
fûe
, 
löe
) {

734 i‡(!
dumpsour˚
)

736 **
löes
 = 
	`m≠_gë
(
sour˚_löes
, 
fûe
);

737 i‡(!
löes
) {

738 #ifde‡
__eú__


741 
löes
 = 
	`ªad_sour˚_fûe
(
fûe
);

742 i‡(!
löes
)

744 
	`m≠_put
(
sour˚_löes
, 
fûe
, 
löes
);

747 
Àn
 = 0;

748 **
p
 = 
löes
; *p;Ö++)

749 
Àn
++;

750 
	`emô_no°ack
("# %s", 
löes
[
löe
 - 1]);

751 
	}
}

753 
	$maybe_¥öt_sour˚_loc
(
Node
 *
node
) {

754 i‡(!
node
->
sour˚Loc
)

756 *
fûe
 = 
node
->
sour˚Loc
->file;

757 
fûío
 = ()
	`m≠_gë
(
sour˚_fûes
, 
fûe
);

758 i‡(!
fûío
) {

759 
fûío
 = 
	`m≠_Àn
(
sour˚_fûes
) + 1;

760 
	`m≠_put
(
sour˚_fûes
, 
fûe
, (*)
fûío
);

761 
	`emô
(".fûê%ld \"%s\"", 
fûío
, 
	`quŸe_c°rög
(
fûe
));

763 *
loc
 = 
	`f‹m©
(".lo¯%ld %d 0", 
fûío
, 
node
->
sour˚Loc
->
löe
);

764 i‡(
	`°rcmp
(
loc
, 
œ°_loc
)) {

765 
	`emô
("%s", 
loc
);

766 
	`maybe_¥öt_sour˚_löe
(
fûe
, 
node
->
sour˚Loc
->
löe
);

768 
œ°_loc
 = 
loc
;

769 
	}
}

771 
	$emô_lv¨
(
Node
 *
node
) {

772 
SAVE
;

773 
	`ísuª_lv¨_öô
(
node
);

774 
	`emô_Œﬂd
(
node
->
ty
, "BP",Çode->
loff
);

775 
	}
}

777 
	$emô_gv¨
(
Node
 *
node
) {

778 
SAVE
;

779 
	`emô_glﬂd
(
node
->
ty
,Çode->
gœbñ
, 0);

780 
	}
}

784 
	$emô_buûtö_ªtu∫_addªss
(
Node
 *
node
) {

785 
	`push
("r11");

786 
	`as£π
(
	`vec_Àn
(
node
->
¨gs
) == 1);

787 
	`emô_ex¥
(
	`vec_hód
(
node
->
¨gs
));

788 *
lo›
 = 
	`make_œbñ
();

789 *
íd
 = 
	`make_œbñ
();

790 
	`emô
("mov #rbp, #r11");

791 
	`emô_œbñ
(
lo›
);

792 
	`emô
("test #rax, #rax");

793 
	`emô
("jz %s", 
íd
);

794 
	`emô
("mov (#r11), #r11");

795 
	`emô
("sub $1, #rax");

796 
	`emô_jmp
(
lo›
);

797 
	`emô_œbñ
(
íd
);

798 
	`emô
("mov 8(#r11), #rax");

799 
	`p›
("r11");

800 
	}
}

804 
	$emô_buûtö_ªg_˛ass
(
Node
 *
node
) {

805 
Node
 *
¨g
 = 
	`vec_gë
(
node
->
¨gs
, 0);

806 
	`as£π
(
¨g
->
ty
->
köd
 =
KIND_PTR
);

807 
Ty≥
 *
ty
 = 
¨g
->ty->
±r
;

808 i‡(
ty
->
köd
 =
KIND_STRUCT
)

809 
	`emô
("mov $2, #eax");

810 i‡(
	`is_ÊŸy≥
(
ty
))

811 
	`emô
("mov $1, #eax");

813 
	`emô
("mov $0, #eax");

814 
	}
}

816 
	$emô_buûtö_va_°¨t
(
Node
 *
node
) {

817 
SAVE
;

818 
	`as£π
(
	`vec_Àn
(
node
->
¨gs
) == 1);

819 
	`emô_ex¥
(
	`vec_hód
(
node
->
¨gs
));

820 
	`push
("rcx");

821 
	`emô
("mov»$%d, (#øx)", 
numgp
 * 8);

822 
	`emô
("mov»$%d, 4(#øx)", 48 + 
numÂ
 * 16);

823 
	`emô
("À®%d(#rbp), #rcx", -
REGAREA_SIZE
);

824 
	`emô
("mov #rcx, 16(#rax)");

825 
	`p›
("rcx");

826 
	}
}

830 
boﬁ
 
	$maybe_emô_buûtö
(
Node
 *
node
) {

832 
SAVE
;

833 i‡(!
	`°rcmp
("__buûtö_ªtu∫_addªss", 
node
->
‚ame
)) {

834 
	`emô_buûtö_ªtu∫_addªss
(
node
);

835  
åue
;

837 i‡(!
	`°rcmp
("__buûtö_ªg_˛ass", 
node
->
‚ame
)) {

838 
	`emô_buûtö_ªg_˛ass
(
node
);

839  
åue
;

841 i‡(!
	`°rcmp
("__buûtö_va_°¨t", 
node
->
‚ame
)) {

842 
	`emô_buûtö_va_°¨t
(
node
);

843  
åue
;

845  
Ál£
;

847  
Ál£
;

849 
	}
}

851 
	$˛assify_¨gs
(
Ve˘‹
 *
öts
, Ve˘‹ *
¨gs
) {

852 
SAVE
;

853 
i
 = 0; i < 
	`vec_Àn
(
¨gs
); i++) {

854 
Node
 *
v
 = 
	`vec_gë
(
¨gs
, 
i
);

855 
	`as£π
(!
	`is_ÊŸy≥
(
v
->
ty
));

856 
	`vec_push
(
öts
, 
v
);

858 
	}
}

860 
	$emô_¨gs
(
Ve˘‹
 *
vÆs
) {

861 
SAVE
;

862 
r
 = 0;

863 
i
 = 0; i < 
	`vec_Àn
(
vÆs
); i++) {

864 
Node
 *
v
 = 
	`vec_gë
(
vÆs
, 
i
);

865 
	`emô_ex¥
(
v
);

866 
	`push
("A");

867 
r
 += 1;

869  
r
;

870 
	}
}

872 
	$maybe_boﬁónize_ªtvÆ
(
Ty≥
 *
ty
) {

873 i‡(
ty
->
köd
 =
KIND_BOOL
) {

874 
	`emô
("ne A, 0");

876 
	}
}

878 
	$emô_ˇŒ
(
Node
 *
node
) {

879 
boﬁ
 
i•å
 = (
node
->
köd
 =
AST_FUNCPTR_CALL
);

880 *
íd
 = 
	`make_œbñ
();

881 i‡(
i•å
) {

882 
	`emô_ex¥
(
node
->
Âå
);

883 
	`emô
("mov C, A");

885 
	`emô
("mov A, %s", 
íd
);

886 
	`push
("A");

887 i‡(
i•å
)

888 
	`emô
("jmp C");

890 
	`emô
("jm∞%s", 
node
->
‚ame
);

891 
	`emô_œbñ
(
íd
);

892 
	`emô
("mov A, B");

893 
°ackpos
 -= 1;

894 
	}
}

896 
	$emô_func_ˇŒ
(
Node
 *
node
) {

897 
SAVE
;

898 
›os
 = 
°ackpos
;

900 
Ve˘‹
 *
öts
 = 
	`make_ve˘‹
();

901 
	`˛assify_¨gs
(
öts
, 
node
->
¨gs
);

903 
	`emô_¨gs
(
	`vec_ªvî£
(
öts
));

905 i‡(!
node
->
‚ame
) {

906 
	`emô_ˇŒ
(
node
);

907 } i‡(!
	`°rcmp
(
node
->
‚ame
, "__builtin_dump")) {

908 
	`emô
("dump");

909 } i‡(!
	`°rcmp
(
node
->
‚ame
, "exit")) {

910 
	`emô
("exit");

911 } i‡(!
	`°rcmp
(
node
->
‚ame
, "putchar")) {

912 
	`emô
("putc A");

913 } i‡(!
	`°rcmp
(
node
->
‚ame
, "getchar")) {

914 *
íd
 = 
	`make_œbñ
();

915 
	`emô
("getc A");

916 
	`emô
("j√ %s, A, 0", 
íd
);

917 
	`emô
("mov A, -1");

918 
	`emô_œbñ
(
íd
);

920 
	`emô_ˇŒ
(
node
);

922 i‡(
	`vec_Àn
(
öts
))

923 
	`emô
("add SP, %d", 
	`vec_Àn
(
öts
));

924 
°ackpos
 -
	`vec_Àn
(
öts
);

925 
	`as£π
(
›os
 =
°ackpos
);

926 
	}
}

928 
	$emô_de˛
(
Node
 *
node
) {

929 
SAVE
;

930 i‡(!
node
->
de˛öô
)

932 
	`emô_de˛_öô
(
node
->
de˛öô
,Çode->
de˛v¨
->
loff
,Çode->de˛v¨->
ty
->
size
);

933 
	}
}

935 
	$emô_c⁄v
(
Node
 *
node
) {

936 
SAVE
;

937 
	`emô_ex¥
(
node
->
›î™d
);

938 
	`emô_lﬂd_c⁄vît
(
node
->
ty
,Çode->
›î™d
->ty);

939 
	}
}

941 
	$emô_dîef
(
Node
 *
node
) {

942 
SAVE
;

943 
	`emô_ex¥
(
node
->
›î™d
);

944 
	`emô_Œﬂd
(
node
->
›î™d
->
ty
->
±r
, "A", 0);

945 
	`emô_lﬂd_c⁄vît
(
node
->
ty
,Çode->
›î™d
->ty->
±r
);

946 
	}
}

948 
	$emô_ã∫¨y
(
Node
 *
node
) {

949 
SAVE
;

950 
	`emô_ex¥
(
node
->
c⁄d
);

951 *
√
 = 
	`make_œbñ
();

952 
	`emô_je
(
√
);

953 i‡(
node
->
thí
)

954 
	`emô_ex¥
(
node
->
thí
);

955 i‡(
node
->
ñs
) {

956 *
íd
 = 
	`make_œbñ
();

957 
	`emô_jmp
(
íd
);

958 
	`emô_œbñ
(
√
);

959 
	`emô_ex¥
(
node
->
ñs
);

960 
	`emô_œbñ
(
íd
);

962 
	`emô_œbñ
(
√
);

964 
	}
}

966 
	$emô_gŸo
(
Node
 *
node
) {

967 
SAVE
;

968 
	`as£π
(
node
->
√wœbñ
);

969 
	`emô_jmp
(
node
->
√wœbñ
);

970 
	}
}

972 
	$emô_ªtu∫
(
Node
 *
node
) {

973 
SAVE
;

974 i‡(
node
->
ªtvÆ
) {

975 
	`emô_ex¥
(
node
->
ªtvÆ
);

976 
	`maybe_boﬁónize_ªtvÆ
(
node
->
ªtvÆ
->
ty
);

977 
	`emô
("mov B, A");

979 
	`emô_ªt
();

980 
	}
}

982 
	$emô_compound_°mt
(
Node
 *
node
) {

983 
SAVE
;

984 
i
 = 0; i < 
	`vec_Àn
(
node
->
°mts
); i++)

985 
	`emô_ex¥
(
	`vec_gë
(
node
->
°mts
, 
i
));

986 
	}
}

988 
	$emô_log™d
(
Node
 *
node
) {

989 
SAVE
;

990 *
íd
 = 
	`make_œbñ
();

991 
	`emô_ex¥
(
node
->
À·
);

992 
	`emô
("mov B, 0");

993 
	`emô
("jeq %s, A, 0", 
íd
);

994 
	`emô_ex¥
(
node
->
right
);

995 
	`emô
("mov B, A");

996 
	`emô
("ne B, 0");

997 
	`emô_œbñ
(
íd
);

998 
	`emô
("mov A, B");

999 
	}
}

1001 
	$emô_log‹
(
Node
 *
node
) {

1002 
SAVE
;

1003 *
íd
 = 
	`make_œbñ
();

1004 
	`emô_ex¥
(
node
->
À·
);

1005 
	`emô
("mov B, 1");

1006 
	`emô
("j√ %s, A, 0", 
íd
);

1007 
	`emô_ex¥
(
node
->
right
);

1008 
	`emô
("mov B, A");

1009 
	`emô
("ne B, 0");

1010 
	`emô_œbñ
(
íd
);

1011 
	`emô
("mov A, B");

1012 
	}
}

1014 
	$emô_lognŸ
(
Node
 *
node
) {

1015 
SAVE
;

1016 
	`emô_ex¥
(
node
->
›î™d
);

1017 
	`emô
("eq A, 0");

1018 
	}
}

1020 
	$emô_bô™d
(
Node
 *
node
) {

1021 
SAVE
;

1022 
	`emô_ex¥
(
node
->
À·
);

1023 
	`push
("A");

1024 
	`emô_ex¥
(
node
->
right
);

1025 
	`push
("A");

1026 
	`emô_ˇŒ_buûtö
("__builtin_and");

1027 
	`emô
("add SP, 2");

1028 
°ackpos
 -= 3;

1029 
	}
}

1031 
	$emô_bô‹
(
Node
 *
node
) {

1032 
SAVE
;

1033 
	`emô_ex¥
(
node
->
À·
);

1034 
	`push
("A");

1035 
	`emô_ex¥
(
node
->
right
);

1036 
	`push
("A");

1037 
	`emô_ˇŒ_buûtö
("__builtin_or");

1038 
	`emô
("add SP, 2");

1039 
°ackpos
 -= 3;

1040 
	}
}

1042 
	$emô_bônŸ
(
Node
 *
node
) {

1043 
SAVE
;

1044 
	`emô_ex¥
(
node
->
À·
);

1045 
	`push
("A");

1046 
	`emô_ˇŒ_buûtö
("__builtin_not");

1047 
	`emô
("add SP, 1");

1048 
°ackpos
 -= 2;

1049 
	}
}

1051 
	$emô_ˇ°
(
Node
 *
node
) {

1052 
SAVE
;

1053 
	`emô_ex¥
(
node
->
›î™d
);

1054 
	`emô_lﬂd_c⁄vît
(
node
->
ty
,Çode->
›î™d
->ty);

1056 
	}
}

1058 
	$emô_comma
(
Node
 *
node
) {

1059 
SAVE
;

1060 
	`emô_ex¥
(
node
->
À·
);

1061 
	`emô_ex¥
(
node
->
right
);

1062 
	}
}

1064 
	$emô_assign
(
Node
 *
node
) {

1065 
SAVE
;

1066 i‡(
node
->
À·
->
ty
->
köd
 =
KIND_STRUCT
) {

1067 
	`emô_c›y_°ru˘
(
node
->
À·
,Çode->
right
);

1069 
	`emô_ex¥
(
node
->
right
);

1070 
	`emô_lﬂd_c⁄vît
(
node
->
ty
,Çode->
right
->ty);

1071 
	`emô_°‹e
(
node
->
À·
);

1073 
	}
}

1075 
	$emô_œbñ_addr
(
Node
 *
node
) {

1076 
SAVE
;

1077 
	`emô
("mov $%s, #øx", 
node
->
√wœbñ
);

1078 
	}
}

1080 
	$emô_compuãd_gŸo
(
Node
 *
node
) {

1081 
SAVE
;

1082 
	`emô_ex¥
(
node
->
›î™d
);

1083 
	`emô
("jmp *#rax");

1084 
	}
}

1086 
	$emô_ex¥
(
Node
 *
node
) {

1087 
SAVE
;

1088 
	`maybe_¥öt_sour˚_loc
(
node
);

1089 
node
->
köd
) {

1090 
AST_LITERAL
: 
	`emô_lôîÆ
(
node
); ;

1091 
AST_LVAR
: 
	`emô_lv¨
(
node
); ;

1092 
AST_GVAR
: 
	`emô_gv¨
(
node
); ;

1093 
AST_FUNCDESG
: 
	`emô_addr
(
node
); ;

1094 
AST_FUNCALL
:

1095 i‡(
	`maybe_emô_buûtö
(
node
))

1098 
AST_FUNCPTR_CALL
:

1099 
	`emô_func_ˇŒ
(
node
);

1101 
AST_DECL
: 
	`emô_de˛
(
node
); ;

1102 
AST_CONV
: 
	`emô_c⁄v
(
node
); ;

1103 
AST_ADDR
: 
	`emô_addr
(
node
->
›î™d
); ;

1104 
AST_DEREF
: 
	`emô_dîef
(
node
); ;

1105 
AST_IF
:

1106 
AST_TERNARY
:

1107 
	`emô_ã∫¨y
(
node
);

1109 
AST_GOTO
: 
	`emô_gŸo
(
node
); ;

1110 
AST_LABEL
:

1111 i‡(
node
->
√wœbñ
)

1112 
	`emô_œbñ
(
node
->
√wœbñ
);

1114 
AST_RETURN
: 
	`emô_ªtu∫
(
node
); ;

1115 
AST_COMPOUND_STMT
: 
	`emô_compound_°mt
(
node
); ;

1116 
AST_STRUCT_REF
:

1117 
	`emô_lﬂd_°ru˘_ªf
(
node
->
°ruc
,Çode->
ty
, 0);

1119 
OP_PRE_INC
: 
	`emô_¥e_öc_dec
(
node
, "add"); ;

1120 
OP_PRE_DEC
: 
	`emô_¥e_öc_dec
(
node
, "sub"); ;

1121 
OP_POST_INC
: 
	`emô_po°_öc_dec
(
node
, "add"); ;

1122 
OP_POST_DEC
: 
	`emô_po°_öc_dec
(
node
, "sub"); ;

1123 '!': 
	`emô_lognŸ
(
node
); ;

1124 '&': 
	`emô_bô™d
(
node
); ;

1125 '|': 
	`emô_bô‹
(
node
); ;

1126 '~': 
	`emô_bônŸ
(
node
); ;

1127 
OP_LOGAND
: 
	`emô_log™d
(
node
); ;

1128 
OP_LOGOR
: 
	`emô_log‹
(
node
); ;

1129 
OP_CAST
: 
	`emô_ˇ°
(
node
); ;

1130 ',': 
	`emô_comma
(
node
); ;

1131 '=': 
	`emô_assign
(
node
); ;

1132 
OP_LABEL_ADDR
: 
	`emô_œbñ_addr
(
node
); ;

1133 
AST_COMPUTED_GOTO
: 
	`emô_compuãd_gŸo
(
node
); ;

1135 
	`emô_bö›
(
node
);

1137 
	}
}

1139 
	$emô_zîo
(
size
) {

1140 
SAVE
;

1141 i‡(
size
 == -1)

1143 ; 
size
 > 0; size--Ë
	`emô
(".long 0");

1144 
	}
}

1146 
	$emô_∑ddög
(
Node
 *
node
, 
off
) {

1147 
SAVE
;

1148 
diff
 = 
node
->
öôoff
 - 
off
;

1149 
	`as£π
(
diff
 >= 0);

1150 
	`emô_zîo
(
diff
);

1151 
	}
}

1153 
	$emô_d©a_addr
(
Node
 *
›î™d
, 
dïth
) {

1154 
›î™d
->
köd
) {

1155 
AST_LVAR
: {

1156 *
œbñ
 = 
	`make_œbñ
();

1157 
	`emô
(".d©®%d", 
dïth
 + 1);

1158 
	`emô_œbñ
(
œbñ
);

1159 
	`do_emô_d©a
(
›î™d
->
lv¨öô
, o≥ønd->
ty
->
size
, 0, 
dïth
 + 1);

1160 
	`emô
(".d©®%d", 
dïth
);

1161 
	`emô
(".l⁄g %s", 
œbñ
);

1164 
AST_GVAR
:

1165 
	`emô
(".l⁄g %s", 
›î™d
->
gœbñ
);

1168 
	`îr‹
("internalÉrror");

1170 
	}
}

1172 
	$emô_d©a_ch¨±r
(*
s
, 
dïth
) {

1173 *
œbñ
 = 
	`make_œbñ
();

1174 
	`emô
(".d©®%d", 
dïth
 + 1);

1175 
	`emô_œbñ
(
œbñ
);

1176 
	`emô
(".°rög \"%s\"", 
	`quŸe_c°rög
(
s
));

1177 
	`emô
(".d©®%d", 
dïth
);

1178 
	`emô
(".l⁄g %s", 
œbñ
);

1179 
	}
}

1181 
	$emô_d©a_¥imty≥
(
Ty≥
 *
ty
, 
Node
 *
vÆ
, 
dïth
) {

1182 
ty
->
köd
) {

1183 
KIND_FLOAT
: {

1184 
	`as£π_Êﬂt
();

1187 
KIND_DOUBLE
:

1188 
	`as£π_Êﬂt
();

1190 
KIND_BOOL
:

1191 
	`emô
(".l⁄g %d", !!
	`evÆ_öãx¥
(
vÆ
, 
NULL
));

1193 
KIND_CHAR
:

1194 
KIND_SHORT
:

1195 
KIND_INT
:

1196 
	`emô
(".l⁄g %d", 
	`evÆ_öãx¥
(
vÆ
, 
NULL
));

1198 
KIND_LONG
:

1199 
KIND_LLONG
:

1200 
KIND_PTR
:

1201 i‡(
vÆ
->
köd
 =
OP_LABEL_ADDR
) {

1202 
	`emô
(".l⁄g %s", 
vÆ
->
√wœbñ
);

1205 
boﬁ
 
is_ch¨_±r
 = (
vÆ
->
›î™d
->
ty
->
köd
 =
KIND_ARRAY
 && vÆ->›î™d->ty->
±r
->köd =
KIND_CHAR
);

1206 i‡(
is_ch¨_±r
) {

1207 
	`emô_d©a_ch¨±r
(
vÆ
->
›î™d
->
svÆ
, 
dïth
);

1208 } i‡(
vÆ
->
köd
 =
AST_GVAR
) {

1209 
	`emô
(".l⁄g %s", 
vÆ
->
gœbñ
);

1211 
Node
 *
ba£
 = 
NULL
;

1212 
v
 = 
	`evÆ_öãx¥
(
vÆ
, &
ba£
);

1213 i‡(
ba£
 =
NULL
) {

1214 
	`emô
(".l⁄g %u", 
v
);

1217 
Ty≥
 *
ty
 = 
ba£
->ty;

1218 i‡(
ba£
->
köd
 =
AST_CONV
 || ba£->köd =
AST_ADDR
)

1219 
ba£
 = ba£->
›î™d
;

1220 i‡(
ba£
->
köd
 !
AST_GVAR
)

1221 
	`îr‹
("globÆ v¨übÀÉx≥˘ed, buàgŸ %s", 
	`node2s
(
ba£
));

1222 
	`as£π
(
ty
->
±r
);

1224 i‡(
v
 * 
ty
->
±r
->
size
)

1225 
	`îr‹
("TODO: fix! %d %d", 
v
, 
ty
->
±r
->
size
);

1226 
	`emô
(".l⁄g %s", 
ba£
->
gœbñ
);

1228 
	`emô
(".l⁄g %s+%u", 
ba£
->
gœbñ
, 
v
 * 
ty
->
±r
->
size
);

1233 
	`îr‹
("d⁄'àknow howÅÿh™dÀ\¿ <%s>\¿ <%s>", 
	`ty2s
(
ty
), 
	`node2s
(
vÆ
));

1235 
	}
}

1237 
	$do_emô_d©a
(
Ve˘‹
 *
öôs
, 
size
, 
off
, 
dïth
) {

1238 
SAVE
;

1239 
i
 = 0; i < 
	`vec_Àn
(
öôs
Ë&& 0 < 
size
 && size != -1; i++) {

1240 
Node
 *
node
 = 
	`vec_gë
(
öôs
, 
i
);

1241 
Node
 *
v
 = 
node
->
öôvÆ
;

1242 
	`emô_∑ddög
(
node
, 
off
);

1246 
	`as£π
(
node
->
tŸy≥
->
bôoff
 == 0);

1247 
d©a
 = 
	`evÆ_öãx¥
(
v
, 
NULL
);

1248 
Ty≥
 *
tŸy≥
 = 
node
->totype;

1249 
i
++ ; i < 
	`vec_Àn
(
öôs
); i++) {

1250 
node
 = 
	`vec_gë
(
öôs
, 
i
);

1251 i‡(
node
->
tŸy≥
->
bôsize
 <= 0) {

1254 
v
 = 
node
->
öôvÆ
;

1255 
tŸy≥
 = 
node
->totype;

1256 
d©a
 |(((()1 << 
tŸy≥
->
bôsize
Ë- 1Ë& 
	`evÆ_öãx¥
(
v
, 
NULL
)Ë<<ÅŸy≥->
bôoff
;

1258 
	`emô_d©a_¥imty≥
(
tŸy≥
, &(
Node
){ 
AST_LITERAL
,ÅŸy≥, .
ivÆ
 = 
d©a
 }, 
dïth
);

1259 
off
 +
tŸy≥
->
size
;

1260 
size
 -
tŸy≥
->size;

1261 i‡(
i
 =
	`vec_Àn
(
öôs
))

1264 
off
 +
node
->
tŸy≥
->
size
;

1265 
size
 -
node
->
tŸy≥
->size;

1267 i‡(
v
->
köd
 =
AST_ADDR
) {

1268 
	`emô_d©a_addr
(
v
->
›î™d
, 
dïth
);

1271 i‡(
v
->
köd
 =
AST_LVAR
 && v->
lv¨öô
) {

1272 
	`do_emô_d©a
(
v
->
lv¨öô
, v->
ty
->
size
, 0, 
dïth
);

1275 
	`emô_d©a_¥imty≥
(
node
->
tŸy≥
,Çode->
öôvÆ
, 
dïth
);

1277 
	`emô_zîo
(
size
);

1278 
	}
}

1280 
	$emô_d©a
(
Node
 *
v
, 
off
, 
dïth
) {

1281 
SAVE
;

1282 
	`emô
(".d©®%d", 
dïth
);

1284 i‡(!
v
->
de˛v¨
->
ty
->
is°©ic
)

1285 
	`emô_noödít
(".globÆ %s", 
v
->
de˛v¨
->
gœbñ
);

1287 
	`emô_noödít
("%s:", 
v
->
de˛v¨
->
gœbñ
);

1288 
	`do_emô_d©a
(
v
->
de˛öô
, v->
de˛v¨
->
ty
->
size
, 
off
, 
dïth
);

1289 
	}
}

1291 
	$emô_bss
(
Node
 *
v
) {

1292 
SAVE
;

1293 
	`emô
(".data");

1295 i‡(!
v
->
de˛v¨
->
ty
->
is°©ic
)

1296 
	`emô
(".globÆ %s", 
v
->
de˛v¨
->
gœbñ
);

1297 
	`emô
(".lcomm %s, %d", 
v
->
de˛v¨
->
gœbñ
, v->de˛v¨->
ty
->
size
);

1299 
i
;

1300 
	`emô
("%s:\n", 
v
->
de˛v¨
->
gœbñ
);

1301 
i
 = 0; i < 
v
->
de˛v¨
->
ty
->
size
 && v->declvar->ty->size != -1; i++) {

1302 
	`emô
(".long 0");

1305 
	}
}

1307 
	$emô_globÆ_v¨
(
Node
 *
v
) {

1308 
SAVE
;

1309 i‡(
v
->
de˛öô
)

1310 
	`emô_d©a
(
v
, 0, 0);

1312 
	`emô_bss
(
v
);

1313 
	}
}

1315 
	$assign_func_∑øm_off£ts
(
Ve˘‹
 *
∑øms
, 
off
) {

1316 
¨g
 = 2;

1317 
i
 = 0; i < 
	`vec_Àn
(
∑øms
); i++) {

1318 
Node
 *
v
 = 
	`vec_gë
(
∑øms
, 
i
);

1319 i‡(
	`is_ÊŸy≥
(
v
->
ty
))

1320 
	`as£π_Êﬂt
();

1321 
v
->
loff
 = 
¨g
++;

1323 
	}
}

1325 
	$emô_func_¥ﬁogue
(
Node
 *
func
) {

1326 
SAVE
;

1327 
	`emô
(".text");

1328 
	`emô_noödít
("%s:", 
func
->
‚ame
);

1330 
	`push
("BP");

1331 
	`emô
("mov BP, SP");

1332 
off
 = 0;

1333 
	`assign_func_∑øm_off£ts
(
func
->
∑øms
, 
off
);

1335 
loˇœªa
 = 0;

1336 
i
 = 0; i < 
	`vec_Àn
(
func
->
loˇlv¨s
); i++) {

1337 
Node
 *
v
 = 
	`vec_gë
(
func
->
loˇlv¨s
, 
i
);

1338 
size
 = 
v
->
ty
->size;

1339 
off
 -
size
;

1340 
v
->
loff
 = 
off
;

1341 
loˇœªa
 +
size
;

1343 i‡(
loˇœªa
) {

1344 
	`emô
("sub SP, %d", 
loˇœªa
);

1345 
°ackpos
 +
loˇœªa
;

1347 
	}
}

1349 
	$emô_t›Àvñ
(
Node
 *
v
) {

1350 
°ackpos
 = 1;

1351 i‡(
v
->
köd
 =
AST_FUNC
) {

1352 
is_maö
 = !
	`°rcmp
(
v
->
‚ame
, "main");

1353 
	`emô_func_¥ﬁogue
(
v
);

1354 
	`emô_ex¥
(
v
->
body
);

1355 
	`emô_ªt
();

1356 
is_maö
 = 0;

1357 } i‡(
v
->
köd
 =
AST_DECL
) {

1358 
	`emô_globÆ_v¨
(
v
);

1360 
	`îr‹
("internalÉrror");

1362 
	}
}

	@8cc/include/float.h

3 #i‚de‡
__STDFLOAT_H


4 
	#__STDFLOAT_H


	)

6 
	#DECIMAL_DIG
 21

	)

7 
	#FLT_EVAL_METHOD
 0

8 
	#FLT_RADIX
 2

	)

9 
	#FLT_ROUNDS
 1

10 

	)

11 
	#FLT_DIG
 6

	)

12 
	#FLT_EPSILON
 0x1
p
-23

	)

13 
	#FLT_MANT_DIG
 24

	)

14 
	#FLT_MAX
 0x1.ffff„
p
+127

	)

15 
	#FLT_MAX_10_EXP
 38

	)

16 
	#FLT_MAX_EXP
 128

	)

17 
	#FLT_MIN
 0x1
p
-126

	)

18 
	#FLT_MIN_10_EXP
 -37

	)

19 
	#FLT_MIN_EXP
 -125

	)

20 
	#FLT_TRUE_MIN
 0x1
p
-149

	)

22 
	#DBL_DIG
 15

	)

23 
	#DBL_EPSILON
 0x1
p
-52

	)

24 
	#DBL_MANT_DIG
 53

	)

25 
	#DBL_MAX
 0x1.fffffffffffff
p
+1023

	)

26 
	#DBL_MAX_10_EXP
 308

	)

27 
	#DBL_MAX_EXP
 1024

	)

28 
	#DBL_MIN
 0x1
p
-1022

	)

29 
	#DBL_MIN_10_EXP
 -307

	)

30 
	#DBL_MIN_EXP
 -1021

	)

31 
	#DBL_TRUE_MIN
 0x0.0000000000001
p
-1022

	)

33 
	#LDBL_DIG
 15

	)

34 
	#LDBL_EPSILON
 0x1
p
-52

	)

35 
	#LDBL_MANT_DIG
 53

	)

36 
	#LDBL_MAX
 0x1.fffffffffffff
p
+1023

	)

37 
	#LDBL_MAX_10_EXP
 308

	)

38 
	#LDBL_MAX_EXP
 1024

	)

39 
	#LDBL_MIN
 0x1
p
-1022

	)

40 
	#LDBL_MIN_10_EXP
 -307

	)

41 
	#LDBL_MIN_EXP
 -1021

	)

42 
	#LDBL_TRUE_MIN
 0x0.0000000000001
p
-1022

	)

	@8cc/include/iso646.h

5 #i‚de‡
__ISO646_H


6 
	#__ISO646_H


	)

8 
	#™d
 &&

	)

9 
	#™d_eq
 &=

	)

10 
	#bô™d
 &

	)

11 
	#bô‹
 |

	)

12 
	#com∂
 ~

	)

13 
	#nŸ
 !

	)

14 
	#nŸ_eq
 !=

	)

15 
	#‹
 ||

	)

16 
	#‹_eq
 |=

	)

17 
	#x‹
 ^

	)

18 
	#x‹_eq
 ^=

	)

	@8cc/include/stdalign.h

3 #i‚de‡
__STDALIGN_H


4 
	#__STDALIGN_H


	)

6 
	#Æig«s
 
_Alig«s


	)

7 
	#Æignof
 
_Alignof


	)

8 
	#__Æig«s_is_deföed
 1

	)

9 
	#__Æignof_is_deföed
 1

	)

	@8cc/include/stdarg.h

3 #i‚de‡
__STDARG_H


4 
	#__STDARG_H


	)

12 
	mgp_off£t
;

13 
	mÂ_off£t
;

14 *
	movîÊow_¨g_¨ó
;

15 *
	mªg_ßve_¨ó
;

16 } 
	t__va_ñem
;

18 
__va_ñem
 
	tva_li°
[1];

20 *
	$__va_¨g_gp
(
__va_ñem
 *
≠
) {

21 *
r
 = (*)
≠
->
ªg_ßve_¨ó
 +áp->
gp_off£t
;

22 
≠
->
gp_off£t
 += 8;

23  
r
;

24 
	}
}

26 *
	$__va_¨g_Â
(
__va_ñem
 *
≠
) {

27 *
r
 = (*)
≠
->
ªg_ßve_¨ó
 +áp->
Â_off£t
;

28 
≠
->
Â_off£t
 += 16;

29  
r
;

30 
	}
}

32 *
	$__va_¨g_mem
(
__va_ñem
 *
≠
) {

34 
	}
}

36 
	#va_°¨t
(
≠
, 
œ°
Ë
	`__buûtö_va_°¨t
◊p)

	)

37 
	#va_¨g
(
≠
, 
ty≥
) \

39 
kœss
 = 
	`__buûtö_ªg_˛ass
((
ty≥
 *)0); \

40 *(
ty≥
 *)(
kœss
 =0 ? 
	`__va_¨g_gp
(
≠
) : \

41 
kœss
 =1 ? 
	`__va_¨g_Â
(
≠
) : \

42 
	`__va_¨g_mem
(
≠
)); \

43 })

	)

45 
	#va_íd
(
≠
Ë1

	)

46 
	#va_c›y
(
de°
, 
§c
Ë((de°)[0] = (§c)[0])

	)

49 
	#__GNUC_VA_LIST
 1

	)

50 
va_li°
 
	t__gnuc_va_li°
;

	@8cc/include/stdbool.h

3 #i‚de‡
__STDBOOL_H


4 
	#__STDBOOL_H


	)

6 
	#boﬁ
 
_Boﬁ


	)

7 
	#åue
 1

	)

8 
	#Ál£
 0

	)

9 
	#__boﬁ_åue_Ál£_¨e_deföed
 1

	)

	@8cc/include/stddef.h

3 #i‚de‡
__STDDEF_H


4 
	#__STDDEF_H


	)

6 
	#NULL
 ((*)0)

	)

8 
	tsize_t
;

9 
	t±rdiff_t
;

10 
	twch¨_t
;

11 
	tmax_Æign_t
;

13 
	#off£tof
(
ty≥
, 
membî
Ë((
size_t
)&((—y≥ *)0)->membî))

	)

	@8cc/include/stdnoreturn.h

3 #i‚de‡
__STDNORETURN_H


4 
	#__STDNORETURN_H


	)

6 
	#n‹ëu∫
 
_N‹ëu∫


	)

	@8cc/lex.c

24 
	~<˘y≥.h
>

25 
	~<î∫o.h
>

26 
	~<°dlib.h
>

27 
	~<°rög.h
>

28 
	~"8cc.h
"

30 
Ve˘‹
 *
	gbuf„rs
 = &
EMPTY_VECTOR
;

31 
Tokí
 *
	g•a˚_tokí
 = &(Tokí){ 
TSPACE
 };

32 
Tokí
 *
	g√wlöe_tokí
 = &(Tokí){ 
TNEWLINE
 };

33 
Tokí
 *
	geof_tokí
 = &(Tokí){ 
TEOF
 };

36 
	mlöe
;

37 
	mcﬁumn
;

38 } 
	tPos
;

40 
Pos
 
	gpos
;

42 *
	$pos_°rög
(
Pos
 *
p
) {

43 
Fûe
 *
f
 = 
	`cuºít_fûe
();

44  
	`f‹m©
("%s:%d:%d", 
f
 ? f->
«me
 : "(unknown)", 
p
->
löe
,Ö->
cﬁumn
);

45 
	}
}

47 
	#îr‹p
(
p
, ...Ë
	`îr‹f
(
__FILE__
 ":" 
	`STR
(
__LINE__
), 
	`pos_°rög
(&p), 
__VA_ARGS__
)

	)

48 
	#w¨≈
(
p
, ...Ë
	`w¨nf
(
__FILE__
 ":" 
	`STR
(
__LINE__
), 
	`pos_°rög
(&p), 
__VA_ARGS__
)

	)

50 
skù_block_commít
();

52 
	$Àx_öô
(*
fûíame
) {

53 
	`vec_push
(
buf„rs
, 
	`make_ve˘‹
());

54 i‡(!
	`°rcmp
(
fûíame
, "-")) {

55 
	`°ªam_push
(
	`make_fûe
(
°dö
, "-"));

58 #i‚de‡
__eú__


59 
FILE
 *
Â
 = 
	`f›í
(
fûíame
, "r");

60 i‡(!
Â
)

61 
	`îr‹
("C™nŸ o≥¿%s: %s", 
fûíame
, 
	`°ªº‹
(
î∫o
));

62 
	`°ªam_push
(
	`make_fûe
(
Â
, 
fûíame
));

64 
	}
}

66 
	$gë_pos
(
dñè
, 
Pos
* 
pos
) {

67 
Fûe
 *
f
 = 
	`cuºít_fûe
();

68 
pos
->
löe
 = 
f
->line;

69 
pos
->
cﬁumn
 = 
f
->cﬁum¿+ 
dñè
;

70 
	}
}

72 
	$m¨k
() {

73 
	`gë_pos
(0, &
pos
);

74 
	}
}

76 
Tokí
 *
	$make_tokí
(
Tokí
 *
tm∂
) {

77 
Tokí
 *
r
 = 
	`mÆloc
((Token));

78 *
r
 = *
tm∂
;

79 
r
->
hide£t
 = 
NULL
;

80 
Fûe
 *
f
 = 
	`cuºít_fûe
();

81 
r
->
fûe
 = 
f
;

82 
r
->
löe
 = 
pos
.line;

83 
r
->
cﬁumn
 = 
pos
.column;

84 
r
->
cou¡
 = 
f
->
¡ok
++;

85  
r
;

86 
	}
}

88 
Tokí
 *
	$make_idít
(*
p
) {

89  
	`make_tokí
(&(
Tokí
){ 
TIDENT
, .
svÆ
 = 
p
 });

90 
	}
}

92 
Tokí
 *
	$make_°πok
(*
s
, 
Àn
, 
íc
) {

93  
	`make_tokí
(&(
Tokí
){ 
TSTRING
, .
svÆ
 = 
s
, .
¶í
 = 
Àn
, .
íc
 =Énc });

94 
	}
}

96 
Tokí
 *
	$make_keyw‹d
(
id
) {

97  
	`make_tokí
(&(
Tokí
){ 
TKEYWORD
, .
id
 = id });

98 
	}
}

100 
Tokí
 *
	$make_numbî
(*
s
) {

101  
	`make_tokí
(&(
Tokí
){ 
TNUMBER
, .
svÆ
 = 
s
 });

102 
	}
}

104 
Tokí
 *
	$make_övÆid
(
c
) {

105  
	`make_tokí
(&(
Tokí
){ 
TINVALID
, .
c
 = c });

106 
	}
}

108 
Tokí
 *
	$make_ch¨
(
c
, 
íc
) {

109  
	`make_tokí
(&(
Tokí
){ 
TCHAR
, .
c
 = c, .
íc
 =Énc });

110 
	}
}

112 
boﬁ
 
	$iswhôe•a˚
(
c
) {

113  
c
 == ' ' || c == '\t' || c == '\f' || c == '\v';

114 
	}
}

116 
	$Àx_≥ek
() {

117 
r
 = 
	`ªadc
();

118 
	`uƒódc
(
r
);

119  
r
;

120 
	}
}

122 
boﬁ
 
	$√xt
(
ex≥˘
) {

123 
c
 = 
	`ªadc
();

124 i‡(
c
 =
ex≥˘
)

125  
åue
;

126 
	`uƒódc
(
c
);

127  
Ál£
;

128 
	}
}

130 
	$skù_löe
() {

132 
c
 = 
	`ªadc
();

133 i‡(
c
 =
EOF
)

135 i‡(
c
 == '\n') {

136 
	`uƒódc
(
c
);

140 
	}
}

142 
boﬁ
 
	$do_skù_•a˚
() {

143 
c
 = 
	`ªadc
();

144 i‡(
c
 =
EOF
)

145  
Ál£
;

146 i‡(
	`iswhôe•a˚
(
c
))

147  
åue
;

148 i‡(
c
 == '/') {

149 i‡(
	`√xt
('*')) {

150 
	`skù_block_commít
();

151  
åue
;

153 i‡(
	`√xt
('/')) {

154 
	`skù_löe
();

155  
åue
;

158 
	`uƒódc
(
c
);

159  
Ál£
;

160 
	}
}

164 
boﬁ
 
	$skù_•a˚
() {

165 i‡(!
	`do_skù_•a˚
())

166  
Ál£
;

167 
	`do_skù_•a˚
());

168  
åue
;

169 
	}
}

171 
	$skù_ch¨
() {

172 i‡(
	`ªadc
() == '\\')

173 
	`ªadc
();

174 
c
 = 
	`ªadc
();

175 
c
 !
EOF
 && c != '\'')

176 
c
 = 
	`ªadc
();

177 
	}
}

179 
	$skù_°rög
() {

180 
c
 = 
	`ªadc
(); c !
EOF
 && c != '"'; c =Ñeadc())

181 i‡(
c
 == '\\')

182 
	`ªadc
();

183 
	}
}

190 
	$skù_c⁄d_ö˛
() {

191 
√°
 = 0;

193 
boﬁ
 
bﬁ
 = (
	`cuºít_fûe
()->
cﬁumn
 == 1);

194 
	`skù_•a˚
();

195 
c
 = 
	`ªadc
();

196 i‡(
c
 =
EOF
)

198 i‡(
c
 == '\'') {

199 
	`skù_ch¨
();

202 i‡(
c
 == '\"') {

203 
	`skù_°rög
();

206 i‡(
c
 !'#' || !
bﬁ
)

208 
cﬁumn
 = 
	`cuºít_fûe
()->column - 1;

209 
Tokí
 *
tok
 = 
	`Àx
();

210 i‡(
tok
->
köd
 !
TIDENT
)

212 i‡(!
√°
 && (
	`is_idít
(
tok
, "else") || is_ident(tok, "elif") || is_ident(tok, "endif"))) {

213 
	`ungë_tokí
(
tok
);

214 
Tokí
 *
hash
 = 
	`make_keyw‹d
('#');

215 
hash
->
bﬁ
 = 
åue
;

216 
hash
->
cﬁumn
 = column;

217 
	`ungë_tokí
(
hash
);

220 i‡(
	`is_idít
(
tok
, "if") || is_ident(tok, "ifdef") || is_ident(tok, "ifndef"))

221 
√°
++;

222 i‡(
√°
 && 
	`is_idít
(
tok
, "endif"))

223 
√°
--;

224 
	`skù_löe
();

226 
	}
}

230 
Tokí
 *
	$Àx_ªad_numbî
(
c
) {

231 
Buf„r
 *
b
 = 
	`make_buf„r
();

232 
	`buf_wrôe
(
b
, 
c
);

233 
œ°
 = 
c
;

235 
c
 = 
	`ªadc
();

236 
boﬁ
 
Ê⁄um
 = 
	`°rchr
("eEpP", 
œ°
Ë&& såchr("+-", 
c
);

237 i‡(!
	`isdigô
(
c
Ë&& !
	`ißÕha
(cË&& c !'.' && !
Ê⁄um
) {

238 
	`uƒódc
(
c
);

239 
	`buf_wrôe
(
b
, '\0');

240  
	`make_numbî
(
	`buf_body
(
b
));

242 
	`buf_wrôe
(
b
, 
c
);

243 
œ°
 = 
c
;

245 
	}
}

247 
boﬁ
 
	$√xto˘
() {

248 
c
 = 
	`Àx_≥ek
();

249  '0' <
c
 && c <= '7';

250 
	}
}

253 
	$ªad_o˘Æ_ch¨
(
c
) {

254 
r
 = 
c
 - '0';

255 i‡(!
	`√xto˘
())

256  
r
;

257 
r
 = (∏<< 3Ë| (
	`ªadc
() - '0');

258 i‡(!
	`√xto˘
())

259  
r
;

260  (
r
 << 3Ë| (
	`ªadc
() - '0');

261 
	}
}

264 
	$ªad_hex_ch¨
() {

265 
Pos
 
p
;

266 
	`gë_pos
(-2, &
p
);

267 
c
 = 
	`ªadc
();

268 i‡(!
	`isxdigô
(
c
))

269 
	`îr‹p
(
p
, "\\x i†nŸ fﬁlowed byá hexadecimÆ ch¨a˘î: %c", 
c
);

270 
r
 = 0;

271 ;; 
c
 = 
	`ªadc
()) {

272 
c
) {

273 '0' ... '9': 
r
 = (∏<< 4Ë| (
c
 - '0'); ;

274 'a' ... 'f': 
r
 = (∏<< 4Ë| (
c
 - 'a' + 10); ;

275 'A' ... 'F': 
r
 = (∏<< 4Ë| (
c
 - 'A' + 10); ;

276 : 
	`uƒódc
(
c
);  
r
;

279 
	}
}

281 
boﬁ
 
	$is_vÆid_u˙
(
c
) {

284 i‡(0xD800 <
c
 && c <= 0xDFFF)

285  
Ál£
;

289  0xA0 <
c
 || c == '$' || c == '@' || c == '`';

290 
	}
}

293 
	$ªad_univîßl_ch¨
(
Àn
) {

294 
Pos
 
p
;

295 
	`gë_pos
(-2, &
p
);

296 
r
 = 0;

297 
i
 = 0; i < 
Àn
; i++) {

298 
c
 = 
	`ªadc
();

299 
c
) {

300 '0' ... '9': 
r
 = (∏<< 4Ë| (
c
 - '0'); ;

301 'a' ... 'f': 
r
 = (∏<< 4Ë| (
c
 - 'a' + 10); ;

302 'A' ... 'F': 
r
 = (∏<< 4Ë| (
c
 - 'A' + 10); ;

303 : 
	`îr‹p
(
p
, "övÆid univîß»ch¨a˘î: %c", 
c
);

306 i‡(!
	`is_vÆid_u˙
(
r
))

307 
	`îr‹p
(
p
, "övÆid univîß»ch¨a˘î: \\%c%0*x", (
Àn
 =4Ë? 'u' : 'U',Üí, 
r
);

308  
r
;

309 
	}
}

311 
	$ªad_esˇ≥d_ch¨
() {

312 
Pos
 
p
;

313 
	`gë_pos
(-1, &
p
);

314 
c
 = 
	`ªadc
();

323 
c
) {

325  
c
;

334 'x':  
	`ªad_hex_ch¨
();

335 'u':  
	`ªad_univîßl_ch¨
(4);

336 'U':  
	`ªad_univîßl_ch¨
(8);

337 '0' ... '7':  
	`ªad_o˘Æ_ch¨
(
c
);

339 
	`w¨≈
(
p
, "unknow¿esˇ≥ ch¨a˘î: \\%c", 
c
);

340  
c
;

341 
	}
}

343 
Tokí
 *
	$ªad_ch¨
(
íc
) {

344 
c
 = 
	`ªadc
();

345 
r
 = (
c
 ='\\'Ë? 
	`ªad_esˇ≥d_ch¨
() : c;

346 
c
 = 
	`ªadc
();

347 i‡(
c
 != '\'')

348 
	`îr‹p
(
pos
, "unterminated char");

349 i‡(
íc
 =
ENC_NONE
)

350  
	`make_ch¨
(()
r
, 
íc
);

351  
	`make_ch¨
(
r
, 
íc
);

352 
	}
}

355 
Tokí
 *
	$ªad_°rög
(
íc
) {

356 
Buf„r
 *
b
 = 
	`make_buf„r
();

358 
c
 = 
	`ªadc
();

359 i‡(
c
 =
EOF
)

360 
	`îr‹p
(
pos
, "unterminated string");

361 i‡(
c
 == '"')

363 i‡(
c
 != '\\') {

364 
	`buf_wrôe
(
b
, 
c
);

367 
boﬁ
 
isucs
 = (
	`Àx_≥ek
() == 'u' ||Üex_peek() == 'U');

368 
c
 = 
	`ªad_esˇ≥d_ch¨
();

369 i‡(
isucs
) {

370 
	`wrôe_utf8
(
b
, 
c
);

373 
	`buf_wrôe
(
b
, 
c
);

375 
	`buf_wrôe
(
b
, '\0');

376  
	`make_°πok
(
	`buf_body
(
b
), 
	`buf_Àn
(b), 
íc
);

377 
	}
}

379 
Tokí
 *
	$ªad_idít
(
c
) {

380 
Buf„r
 *
b
 = 
	`make_buf„r
();

381 
	`buf_wrôe
(
b
, 
c
);

383 
c
 = 
	`ªadc
();

384 i‡(
	`iß um
(
c
) || (c & 0x80) || c == '_' || c == '$') {

385 
	`buf_wrôe
(
b
, 
c
);

390 i‡(
c
 ='\\' && (
	`Àx_≥ek
() == 'u' ||Üex_peek() == 'U')) {

391 
	`wrôe_utf8
(
b
, 
	`ªad_esˇ≥d_ch¨
());

394 
	`uƒódc
(
c
);

395 
	`buf_wrôe
(
b
, '\0');

396  
	`make_idít
(
	`buf_body
(
b
));

398 
	}
}

400 
	$skù_block_commít
() {

401 
Pos
 
p
;

402 
	`gë_pos
(-2, &
p
);

403 
boﬁ
 
maybe_íd
 = 
Ál£
;

405 
c
 = 
	`ªadc
();

406 i‡(
c
 =
EOF
)

407 
	`îr‹p
(
p
, "prematureÉnd of block comment");

408 i‡(
c
 ='/' && 
maybe_íd
)

410 
maybe_íd
 = (
c
 == '*');

412 
	}
}

418 
Tokí
 *
	$ªad_hash_digøph
() {

419 i‡(
	`√xt
('>'))

420  
	`make_keyw‹d
('}');

421 i‡(
	`√xt
(':')) {

422 i‡(
	`√xt
('%')) {

423 i‡(
	`√xt
(':'))

424  
	`make_keyw‹d
(
KHASHHASH
);

425 
	`uƒódc
('%');

427  
	`make_keyw‹d
('#');

429  
NULL
;

430 
	}
}

432 
Tokí
 *
	$ªad_ªp
(
ex≥˘
, 
t1
, 
ñs
) {

433  
	`make_keyw‹d
(
	`√xt
(
ex≥˘
Ë? 
t1
 : 
ñs
);

434 
	}
}

436 
Tokí
 *
	$ªad_ªp2
(
ex≥˘1
, 
t1
, 
ex≥˘2
, 
t2
, 
ñs
) {

437 i‡(
	`√xt
(
ex≥˘1
))

438  
	`make_keyw‹d
(
t1
);

439  
	`make_keyw‹d
(
	`√xt
(
ex≥˘2
Ë? 
t2
 : 
ñs
);

440 
	}
}

442 
Tokí
 *
	$do_ªad_tokí
() {

443 i‡(
	`skù_•a˚
())

444  
•a˚_tokí
;

445 
	`m¨k
();

446 
c
 = 
	`ªadc
();

447 
c
) {

448 '\n':  
√wlöe_tokí
;

449 ':':  
	`make_keyw‹d
(
	`√xt
('>') ? ']' : ':');

450 '#':  
	`make_keyw‹d
(
	`√xt
('#'Ë? 
KHASHHASH
 : '#');

451 '+':  
	`ªad_ªp2
('+', 
OP_INC
, '=', 
OP_A_ADD
, '+');

452 '*':  
	`ªad_ªp
('=', 
OP_A_MUL
, '*');

453 '=':  
	`ªad_ªp
('=', 
OP_EQ
, '=');

454 '!':  
	`ªad_ªp
('=', 
OP_NE
, '!');

455 '&':  
	`ªad_ªp2
('&', 
OP_LOGAND
, '=', 
OP_A_AND
, '&');

456 '|':  
	`ªad_ªp2
('|', 
OP_LOGOR
, '=', 
OP_A_OR
, '|');

457 '^':  
	`ªad_ªp
('=', 
OP_A_XOR
, '^');

458 '"':  
	`ªad_°rög
(
ENC_NONE
);

459 '\'':  
	`ªad_ch¨
(
ENC_NONE
);

460 '/':  
	`make_keyw‹d
(
	`√xt
('='Ë? 
OP_A_DIV
 : '/');

464  
	`ªad_idít
(
c
);

466  
	`Àx_ªad_numbî
(
c
);

469 
íc
 = (
c
 ='L'Ë? 
ENC_WCHAR
 : 
ENC_CHAR32
;

470 i‡(
	`√xt
('"')Ë 
	`ªad_°rög
(
íc
);

471 i‡(
	`√xt
('\'')Ë 
	`ªad_ch¨
(
íc
);

472  
	`ªad_idít
(
c
);

475 i‡(
	`√xt
('"')Ë 
	`ªad_°rög
(
ENC_CHAR16
);

476 i‡(
	`√xt
('\'')Ë 
	`ªad_ch¨
(
ENC_CHAR16
);

478 i‡(
	`√xt
('8')) {

479 i‡(
	`√xt
('"'))

480  
	`ªad_°rög
(
ENC_UTF8
);

481 
	`uƒódc
('8');

483  
	`ªad_idít
(
c
);

485 i‡(
	`isdigô
(
	`Àx_≥ek
()))

486  
	`Àx_ªad_numbî
(
c
);

487 i‡(
	`√xt
('.')) {

488 i‡(
	`√xt
('.'))

489  
	`make_keyw‹d
(
KELLIPSIS
);

490  
	`make_idít
("..");

492  
	`make_keyw‹d
('.');

495  
	`make_keyw‹d
(
c
);

497 i‡(
	`√xt
('-')Ë 
	`make_keyw‹d
(
OP_DEC
);

498 i‡(
	`√xt
('>')Ë 
	`make_keyw‹d
(
OP_ARROW
);

499 i‡(
	`√xt
('=')Ë 
	`make_keyw‹d
(
OP_A_SUB
);

500  
	`make_keyw‹d
('-');

502 i‡(
	`√xt
('<')Ë 
	`ªad_ªp
('=', 
OP_A_SAL
, 
OP_SAL
);

503 i‡(
	`√xt
('=')Ë 
	`make_keyw‹d
(
OP_LE
);

504 i‡(
	`√xt
(':')Ë 
	`make_keyw‹d
('[');

505 i‡(
	`√xt
('%')Ë 
	`make_keyw‹d
('{');

506  
	`make_keyw‹d
('<');

508 i‡(
	`√xt
('=')Ë 
	`make_keyw‹d
(
OP_GE
);

509 i‡(
	`√xt
('>')Ë 
	`ªad_ªp
('=', 
OP_A_SAR
, 
OP_SAR
);

510  
	`make_keyw‹d
('>');

512 
Tokí
 *
tok
 = 
	`ªad_hash_digøph
();

513 i‡(
tok
)

514  
tok
;

515  
	`ªad_ªp
('=', 
OP_A_MOD
, '%');

517 
EOF
:

518  
eof_tokí
;

519 :  
	`make_övÆid
(
c
);

521 
	}
}

523 
boﬁ
 
	$buf„r_em±y
() {

524  
	`vec_Àn
(
buf„rs
Ë=1 && vec_Àn(
	`vec_hód
(buffers)) == 0;

525 
	}
}

538 *
	$ªad_hódî_fûe_«me
(
boﬁ
 *
°d
) {

539 i‡(!
	`buf„r_em±y
())

540  
NULL
;

541 
	`skù_•a˚
();

542 
Pos
 
p
;

543 
	`gë_pos
(0, &
p
);

544 
˛o£
;

545 i‡(
	`√xt
('"')) {

546 *
°d
 = 
Ál£
;

547 
˛o£
 = '"';

548 } i‡(
	`√xt
('<')) {

549 *
°d
 = 
åue
;

550 
˛o£
 = '>';

552  
NULL
;

554 
Buf„r
 *
b
 = 
	`make_buf„r
();

555 !
	`√xt
(
˛o£
)) {

556 
c
 = 
	`ªadc
();

557 i‡(
c
 =
EOF
 || c == '\n')

558 
	`îr‹p
(
p
, "prematureÉnd of headerÇame");

559 
	`buf_wrôe
(
b
, 
c
);

561 i‡(
	`buf_Àn
(
b
) == 0)

562 
	`îr‹p
(
p
, "headerÇame shouldÇot beÉmpty");

563 
	`buf_wrôe
(
b
, '\0');

564  
	`buf_body
(
b
);

565 
	}
}

567 
boﬁ
 
	$is_keyw‹d
(
Tokí
 *
tok
, 
c
) {

568  (
tok
->
köd
 =
TKEYWORD
Ë&& (tok->
id
 =
c
);

569 
	}
}

575 
	$tokí_buf„r_°ash
(
Ve˘‹
 *
buf
) {

576 
	`vec_push
(
buf„rs
, 
buf
);

577 
	}
}

579 
	$tokí_buf„r_un°ash
() {

580 
	`vec_p›
(
buf„rs
);

581 
	}
}

583 
	$ungë_tokí
(
Tokí
 *
tok
) {

584 i‡(
tok
->
köd
 =
TEOF
)

586 
Ve˘‹
 *
buf
 = 
	`vec_èû
(
buf„rs
);

587 
	`vec_push
(
buf
, 
tok
);

588 
	}
}

593 
Tokí
 *
	$Àx_°rög
(*
s
) {

594 
	`°ªam_°ash
(
	`make_fûe_°rög
(
s
));

595 
Tokí
 *
r
 = 
	`do_ªad_tokí
();

596 
	`√xt
('\n');

597 
Pos
 
p
;

598 
	`gë_pos
(0, &
p
);

599 i‡(
	`Àx_≥ek
(Ë!
EOF
)

600 
	`îr‹p
(
p
, "unc⁄sumed i≈ut: %s", 
s
);

601 
	`°ªam_un°ash
();

602  
r
;

603 
	}
}

605 
Tokí
 *
	$Àx
() {

606 
Ve˘‹
 *
buf
 = 
	`vec_èû
(
buf„rs
);

607 i‡(
	`vec_Àn
(
buf
) > 0)

608  
	`vec_p›
(
buf
);

609 i‡(
	`vec_Àn
(
buf„rs
) > 1)

610  
eof_tokí
;

611 
boﬁ
 
bﬁ
 = (
	`cuºít_fûe
()->
cﬁumn
 == 1);

612 
Tokí
 *
tok
 = 
	`do_ªad_tokí
();

613 
tok
->
köd
 =
TSPACE
) {

614 
tok
 = 
	`do_ªad_tokí
();

615 
tok
->
•a˚
 = 
åue
;

617 
tok
->
bﬁ
 = bol;

618  
tok
;

619 
	}
}

	@8cc/main.c

3 
	~<libgí.h
>

4 
	~<°dlib.h
>

5 
	~<°rög.h
>

6 
	~<sys/ty≥s.h
>

7 
	~<sys/waô.h
>

8 
	~<uni°d.h
>

9 
	~"8cc.h
"

11 *
	göfûe
;

12 *
	goutfûe
;

13 *
	gasmfûe
;

14 
boﬁ
 
	gdum∑°
;

15 
boﬁ
 
	g˝p⁄ly
;

16 
boﬁ
 
	gdum∑sm
;

17 
boﬁ
 
	gd⁄éök
;

18 
Buf„r
 *
	g˝pdefs
;

19 
Ve˘‹
 *
	gtmpfûes
 = &
EMPTY_VECTOR
;

21 #i‚de‡
__eú__


22 
	$ußge
(
exôcode
) {

23 
	`Ârötf
(
exôcode
 ? 
°dîr
 : 
°dout
,

46 
	`exô
(
exôcode
);

47 
	}
}

49 
	$dñëe_ãmp_fûes
() {

50 
i
 = 0; i < 
	`vec_Àn
(
tmpfûes
); i++)

51 
	`u∆ök
(
	`vec_gë
(
tmpfûes
, 
i
));

52 
	}
}

54 *
	$ba£
(*
∑th
) {

55  
	`ba£«me
(
	`°rdup
(
∑th
));

56 
	}
}

58 *
	$ª∂a˚_suffix
(*
fûíame
, 
suffix
) {

59 *
r
 = 
	`f‹m©
("%s", 
fûíame
);

60 *
p
 = 
r
 + 
	`°æí
(r) - 1;

61 i‡(*
p
 != 'c')

62 
	`îr‹
("filename suffix isÇot .c");

63 *
p
 = 
suffix
;

64  
r
;

65 
	}
}

67 
FILE
 *
	$›í_asmfûe
() {

68 i‡(
dum∑sm
) {

69 
asmfûe
 = 
outfûe
 ? outfûê: 
	`ª∂a˚_suffix
(
	`ba£
(
öfûe
), 's');

71 
asmfûe
 = 
	`f‹m©
("/tmp/8ccXXXXXX.s");

72 i‡(!
	`mk°emps
(
asmfûe
, 2))

73 
	`≥º‹
("mkstemps");

74 
	`vec_push
(
tmpfûes
, 
asmfûe
);

76 i‡(!
	`°rcmp
(
asmfûe
, "-"))

77  
°dout
;

78 
FILE
 *
Â
 = 
	`f›í
(
asmfûe
, "w");

79 i‡(!
Â
)

80 
	`≥º‹
("fopen");

81  
Â
;

82 
	}
}

84 
	$∑r£_w¨nögs_¨g
(*
s
) {

85 i‡(!
	`°rcmp
(
s
, "error"))

86 
w¨nög_is_îr‹
 = 
åue
;

87 i‡(
	`°rcmp
(
s
, "all"))

88 
	`îr‹
("unknow¿-W o±i⁄: %s", 
s
);

89 
	}
}

91 
	$∑r£_f_¨g
(*
s
) {

92 i‡(!
	`°rcmp
(
s
, "dump-ast"))

93 
dum∑°
 = 
åue
;

94 i‡(!
	`°rcmp
(
s
, "dump-stack"))

95 
dump°ack
 = 
åue
;

96 i‡(!
	`°rcmp
(
s
, "no-dump-source"))

97 
dumpsour˚
 = 
Ál£
;

99 
	`ußge
(1);

100 
	}
}

102 
	$∑r£_m_¨g
(*
s
) {

103 i‡(
	`°rcmp
(
s
, "64"))

104 
	`îr‹
("O∆y 64 i†Ælowed f‹ -m, buàgŸ %s", 
s
);

105 
	}
}

107 
	$∑r£›t
(
¨gc
, **
¨gv
) {

108 
˝pdefs
 = 
	`make_buf„r
();

110 
›t
 = 
	`gë›t
(
¨gc
, 
¨gv
, "I:ED:O:SU:W:acd:f:gm:o:hw");

111 i‡(
›t
 == -1)

113 
›t
) {

114 'I': 
	`add_ö˛ude_∑th
(
›èrg
); ;

115 'E': 
˝p⁄ly
 = 
åue
; ;

117 *
p
 = 
	`°rchr
(
›èrg
, '=');

118 i‡(
p
)

119 *
p
 = ' ';

120 
	`buf_¥ötf
(
˝pdefs
, "#deföê%s\n", 
›èrg
);

124 'S': 
dum∑sm
 = 
åue
; ;

126 
	`buf_¥ötf
(
˝pdefs
, "#unde‡%s\n", 
›èrg
);

128 'W': 
	`∑r£_w¨nögs_¨g
(
›èrg
); ;

129 'c': 
d⁄éök
 = 
åue
; ;

130 'f': 
	`∑r£_f_¨g
(
›èrg
); ;

131 'm': 
	`∑r£_m_¨g
(
›èrg
); ;

133 'o': 
outfûe
 = 
›èrg
; ;

134 'w': 
íabÀ_w¨nög
 = 
Ál£
; ;

136 
	`ußge
(0);

138 
	`ußge
(1);

141 i‡(
›töd
 !
¨gc
 - 1)

142 
	`ußge
(1);

144 i‡(!
dum∑°
 && !
˝p⁄ly
 && !
dum∑sm
 && !
d⁄éök
)

145 
	`îr‹
("One of -a, -c, -E or -S must be specified");

146 
öfûe
 = 
¨gv
[
›töd
];

147 
	}
}

150 *
	$gë_ba£_fûe
() {

151  
öfûe
;

152 
	}
}

154 
	$¥ïro˚ss
() {

156 
Tokí
 *
tok
 = 
	`ªad_tokí
();

157 i‡(
tok
->
köd
 =
TEOF
)

159 i‡(
tok
->
bﬁ
)

160 
	`¥ötf
("\n");

161 i‡(
tok
->
•a˚
)

162 
	`¥ötf
(" ");

163 
	`¥ötf
("%s", 
	`tok2s
(
tok
));

165 
	`¥ötf
("\n");

166 
	`exô
(0);

167 
	}
}

169 
	$maö
(
¨gc
, **
¨gv
) {

170 #ifde‡
__eú__


171 
öfûe
 = "-";

173 
	`£tbuf
(
°dout
, 
NULL
);

174 i‡(
	`©exô
(
dñëe_ãmp_fûes
))

175 
	`≥º‹
("atexit");

176 
	`∑r£›t
(
¨gc
, 
¨gv
);

178 
	`Àx_öô
(
öfûe
);

179 
	`˝p_öô
();

180 
	`∑r£_öô
();

181 #i‚de‡
__eú__


182 
	`£t_ouçut_fûe
(
	`›í_asmfûe
());

183 i‡(
	`buf_Àn
(
˝pdefs
) > 0)

184 
	`ªad_‰om_°rög
(
	`buf_body
(
˝pdefs
));

187 i‡(
˝p⁄ly
)

188 
	`¥ïro˚ss
();

190 
Ve˘‹
 *
t›Àvñs
 = 
	`ªad_t›Àvñs
();

191 
i
 = 0; i < 
	`vec_Àn
(
t›Àvñs
); i++) {

192 
Node
 *
v
 = 
	`vec_gë
(
t›Àvñs
, 
i
);

193 i‡(
dum∑°
)

194 
	`¥ötf
("%s", 
	`node2s
(
v
));

196 
	`emô_t›Àvñ
(
v
);

199 
	`˛o£_ouçut_fûe
();

201 #i‚de‡
__eú__


202 i‡(!
dum∑°
 && !
dum∑sm
) {

203 i‡(!
outfûe
)

204 
outfûe
 = 
	`ª∂a˚_suffix
(
	`ba£
(
öfûe
), 'o');

205 
pid_t
 
pid
 = 
	`f‹k
();

206 i‡(
pid
 < 0Ë
	`≥º‹
("fork");

207 i‡(
pid
 == 0) {

208 
	`exe˛p
("as", "as", "-o", 
outfûe
, "-c", 
asmfûe
, (*)
NULL
);

209 
	`≥º‹
("execl failed");

211 
°©us
;

212 
	`waôpid
(
pid
, &
°©us
, 0);

213 i‡(
°©us
 < 0)

214 
	`îr‹
("as failed");

218 
	}
}

	@8cc/map.c

5 
	~<°dlib.h
>

6 
	~<°rög.h
>

7 
	~"8cc.h
"

9 #ifde‡
__eú__


11 
M≠
 *
	$make_m≠
() {

12 
M≠
 *
r
 = 
	`mÆloc
((Map));

13 
r
->
∑ª¡
 = 
NULL
;

14 
r
->
v
 = 
	`make_ve˘‹
();

15  
r
;

16 
	}
}

18 
M≠
 *
	$make_m≠_∑ª¡
(
M≠
 *
∑ª¡
) {

19 
M≠
 *
r
 = 
	`mÆloc
((Map));

20 
r
->
∑ª¡
 =Öarent;

21 
r
->
v
 = 
	`make_ve˘‹
();

22  
r
;

23 
	}
}

25 
	$m≠_föd
(
M≠
 *
m
, *
key
) {

26 i‡(!
m
->
v
) {

27 
m
->
v
 = 
	`make_ve˘‹
();

30 
i
 = 0; i < 
	`vec_Àn
(
m
->
v
); i += 2) {

31 i‡(!
	`°rcmp
(
	`vec_gë
(
m
->
v
, 
i
), 
key
))

32  
i
;

35 
	}
}

37 *
	$m≠_gë
(
M≠
 *
m
, *
key
) {

38 
i
 = 
	`m≠_föd
(
m
, 
key
);

39 i‡(
i
 != -1)

40  
	`vec_gë
(
m
->
v
, 
i
 + 1);

41 i‡(
m
->
∑ª¡
)

42  
	`m≠_gë
(
m
->
∑ª¡
, 
key
);

43  
NULL
;

44 
	}
}

46 
	$m≠_put
(
M≠
 *
m
, *
key
, *
vÆ
) {

47 
i
 = 
	`m≠_föd
(
m
, 
key
);

48 i‡(
i
 != -1) {

49 
	`vec_£t
(
m
->
v
, 
i
 + 1, 
vÆ
);

51 
	`vec_push
(
m
->
v
, 
key
);

52 
	`vec_push
(
m
->
v
, 
vÆ
);

54 
	}
}

56 
	$m≠_ªmove
(
M≠
 *
m
, *
key
) {

57 
i
 = 
	`m≠_föd
(
m
, 
key
);

58 i‡(
i
 != -1) {

59 
	`vec_£t
(
m
->
v
, 
i
, "");

61 
	}
}

63 
size_t
 
	$m≠_Àn
(
M≠
 *
m
) {

64 i‡(!
m
->
v
)

66  
	`vec_Àn
(
m
->
v
) / 2;

67 
	}
}

71 
	#INIT_SIZE
 16

	)

72 
	#TOMBSTONE
 ((*)-1)

	)

74 
uöt32_t
 
	$hash
(*
p
) {

76 
uöt32_t
 
r
 = 2166136261;

77 ; *
p
;Ö++) {

78 
r
 ^*
p
;

79 
r
 *= 16777619;

81  
r
;

82 
	}
}

84 
M≠
 *
	$do_make_m≠
(
M≠
 *
∑ª¡
, 
size
) {

85 
M≠
 *
r
 = 
	`mÆloc
((Map));

86 
r
->
∑ª¡
 =Öarent;

87 
r
->
key
 = 
	`ˇŒoc
(
size
, (*));

88 
r
->
vÆ
 = 
	`ˇŒoc
(
size
, (*));

89 
r
->
size
 = size;

90 
r
->
√Àm
 = 0;

91 
r
->
nu£d
 = 0;

92  
r
;

93 
	}
}

95 
	$maybe_ªhash
(
M≠
 *
m
) {

96 i‡(!
m
->
key
) {

97 
m
->
key
 = 
	`ˇŒoc
(
INIT_SIZE
, (*));

98 
m
->
vÆ
 = 
	`ˇŒoc
(
INIT_SIZE
, (*));

99 
m
->
size
 = 
INIT_SIZE
;

102 i‡(
m
->
nu£d
 < m->
size
 * 7 / 10)

104 
√wsize
 = (
m
->
√Àm
 < m->
size
 * 35 / 100) ? m->size : m->size * 2;

105 **
k
 = 
	`ˇŒoc
(
√wsize
, (*));

106 **
v
 = 
	`ˇŒoc
(
√wsize
, (*));

107 
mask
 = 
√wsize
 - 1;

108 
i
 = 0; i < 
m
->
size
; i++) {

109 i‡(
m
->
key
[
i
] =
NULL
 || m->key[i] =
TOMBSTONE
)

111 
j
 = 
	`hash
(
m
->
key
[
i
]Ë& 
mask
;

112 ;; 
j
 = (j + 1Ë& 
mask
) {

113 i‡(
k
[
j
] !
NULL
)

115 
k
[
j
] = 
m
->
key
[
i
];

116 
v
[
j
] = 
m
->
vÆ
[
i
];

120 
m
->
key
 = 
k
;

121 
m
->
vÆ
 = 
v
;

122 
m
->
size
 = 
√wsize
;

123 
m
->
nu£d
 = m->
√Àm
;

124 
	}
}

126 
M≠
 *
	$make_m≠
() {

127  
	`do_make_m≠
(
NULL
, 
INIT_SIZE
);

128 
	}
}

130 
M≠
 *
	$make_m≠_∑ª¡
(
M≠
 *
∑ª¡
) {

131  
	`do_make_m≠
(
∑ª¡
, 
INIT_SIZE
);

132 
	}
}

134 *
	$m≠_gë_no°ack
(
M≠
 *
m
, *
key
) {

135 i‡(!
m
->
key
)

136  
NULL
;

137 
mask
 = 
m
->
size
 - 1;

138 
i
 = 
	`hash
(
key
Ë& 
mask
;

139 ; 
m
->
key
[
i
] !
NULL
; i = (ò+ 1Ë& 
mask
)

140 i‡(
m
->
key
[
i
] !
TOMBSTONE
 && !
	`°rcmp
(m->key[i], key))

141  
m
->
vÆ
[
i
];

142  
NULL
;

143 
	}
}

145 *
	$m≠_gë
(
M≠
 *
m
, *
key
) {

146 *
r
 = 
	`m≠_gë_no°ack
(
m
, 
key
);

147 i‡(
r
)

148  
r
;

151 i‡(
m
->
∑ª¡
)

152  
	`m≠_gë
(
m
->
∑ª¡
, 
key
);

153  
NULL
;

154 
	}
}

156 
	$m≠_put
(
M≠
 *
m
, *
key
, *
vÆ
) {

157 
	`maybe_ªhash
(
m
);

158 
mask
 = 
m
->
size
 - 1;

159 
i
 = 
	`hash
(
key
Ë& 
mask
;

160 ;; 
i
 = (ò+ 1Ë& 
mask
) {

161 *
k
 = 
m
->
key
[
i
];

162 i‡(
k
 =
NULL
 || k =
TOMBSTONE
) {

163 
m
->
key
[
i
] = key;

164 
m
->
vÆ
[
i
] = val;

165 
m
->
√Àm
++;

166 i‡(
k
 =
NULL
)

167 
m
->
nu£d
++;

170 i‡(!
	`°rcmp
(
k
, 
key
)) {

171 
m
->
vÆ
[
i
] = val;

175 
	}
}

177 
	$m≠_ªmove
(
M≠
 *
m
, *
key
) {

178 i‡(!
m
->
key
)

180 
mask
 = 
m
->
size
 - 1;

181 
i
 = 
	`hash
(
key
Ë& 
mask
;

182 ; 
m
->
key
[
i
] !
NULL
; i = (ò+ 1Ë& 
mask
) {

183 i‡(
m
->
key
[
i
] =
TOMBSTONE
 || 
	`°rcmp
(m->key[i], key))

185 
m
->
key
[
i
] = 
TOMBSTONE
;

186 
m
->
vÆ
[
i
] = 
NULL
;

187 
m
->
√Àm
--;

190 
	}
}

192 
size_t
 
	$m≠_Àn
(
M≠
 *
m
) {

193  
m
->
√Àm
;

194 
	}
}

	@8cc/parse.c

7 
	~<˘y≥.h
>

8 
	~<î∫o.h
>

9 
	~<limôs.h
>

10 
	~<°dlib.h
>

11 
	~<°rög.h
>

12 
	~<°rögs.h
>

13 
	~"8cc.h
"

18 
	#MAX_ALIGN
 16

	)

20 
	#MAX
(
a
, 
b
Ë(◊Ë> (bË? (aË: (b))

	)

21 
	#MIN
(
a
, 
b
Ë(◊Ë< (bË? (aË: (b))

	)

25 
Sour˚Loc
 *
	gsour˚_loc
;

30 
M≠
 *
	gglobÆív
 = &
EMPTY_MAP
;

31 
M≠
 *
	gloˇÀnv
;

32 
M≠
 *
	gègs
 = &
EMPTY_MAP
;

33 
M≠
 *
	gœbñs
;

35 
Ve˘‹
 *
	gt›Àvñs
;

36 
Ve˘‹
 *
	gloˇlv¨s
;

37 
Ve˘‹
 *
	ggŸos
;

38 
Ve˘‹
 *
	gˇ£s
;

39 
Ty≥
 *
	gcuºít_func_ty≥
;

41 *
	gdeÁu…ˇ£
;

42 *
	glbªak
;

43 *
	glc⁄töue
;

48 
Ty≥
 *
	gty≥_void
 = &(Ty≥){ 
KIND_VOID
, 0, 0, 
Ál£
 };

49 
Ty≥
 *
	gty≥_boﬁ
 = &(Ty≥){ 
KIND_BOOL
, 1, 1, 
åue
 };

50 
Ty≥
 *
	gty≥_ch¨
 = &(Ty≥){ 
KIND_CHAR
, 1, 1, 
Ál£
 };

51 
Ty≥
 *
	gty≥_sh‹t
 = &(Ty≥){ 
KIND_SHORT
, 1, 1, 
Ál£
 };

52 
Ty≥
 *
	gty≥_öt
 = &(Ty≥){ 
KIND_INT
, 1, 1, 
Ál£
 };

53 
Ty≥
 *
	gty≥_l⁄g
 = &(Ty≥){ 
KIND_LONG
, 1, 1, 
Ál£
 };

54 
Ty≥
 *
	gty≥_Œ⁄g
 = &(Ty≥){ 
KIND_LLONG
, 1, 1, 
Ál£
 };

55 
Ty≥
 *
	gty≥_uch¨
 = &(Ty≥){ 
KIND_CHAR
, 1, 1, 
åue
 };

56 
Ty≥
 *
	gty≥_ush‹t
 = &(Ty≥){ 
KIND_SHORT
, 1, 1, 
åue
 };

57 
Ty≥
 *
	gty≥_uöt
 = &(Ty≥){ 
KIND_INT
, 1, 1, 
åue
 };

58 
Ty≥
 *
	gty≥_ul⁄g
 = &(Ty≥){ 
KIND_LONG
, 1, 1, 
åue
 };

59 
Ty≥
 *
	gty≥_uŒ⁄g
 = &(Ty≥){ 
KIND_LLONG
, 1, 1, 
åue
 };

60 
Ty≥
 *
	gty≥_Êﬂt
 = &(Ty≥){ 
KIND_INT
, 1, 1, 
Ál£
 };

61 
Ty≥
 *
	gty≥_doubÀ
 = &(Ty≥){ 
KIND_INT
, 1, 1, 
Ál£
 };

62 
Ty≥
 *
	gty≥_ldoubÀ
 = &(Ty≥){ 
KIND_INT
, 1, 1, 
Ál£
 };

63 
Ty≥
 *
	gty≥_íum
 = &(Ty≥){ 
KIND_ENUM
, 1, 1, 
Ál£
 };

65 
Ty≥
* 
make_±r_ty≥
(Ty≥ *
ty
);

66 
Ty≥
* 
make_¨øy_ty≥
(Ty≥ *
ty
, 
size
);

67 
Node
 *
ªad_compound_°mt
();

68 
ªad_de˛_‹_°mt
(
Ve˘‹
 *
li°
);

69 
Node
 *
c⁄v
(Nodê*
node
);

70 
Node
 *
ªad_°mt
();

71 
boﬁ
 
is_ty≥
(
Tokí
 *
tok
);

72 
Node
 *
ªad_u«ry_ex¥
();

73 
ªad_de˛
(
Ve˘‹
 *
t›Àvñ
, 
boﬁ
 
isglobÆ
);

74 
Ty≥
 *
ªad_de˛¨©‹_èû
(Ty≥ *
ba£ty≥
, 
Ve˘‹
 *
∑øms
);

75 
Ty≥
 *
ªad_de˛¨©‹
(**
«me
, Ty≥ *
ba£ty≥
, 
Ve˘‹
 *
∑øms
, 
˘x
);

76 
Ty≥
 *
ªad_ab°ø˘_de˛¨©‹
(Ty≥ *
ba£ty≥
);

77 
Ty≥
 *
ªad_de˛_•ec
(*
s˛ass
);

78 
Node
 *
ªad_°ru˘_fõld
(Nodê*
°ruc
);

79 
ªad_öôülizî_li°
(
Ve˘‹
 *
öôs
, 
Ty≥
 *
ty
, 
off
, 
boﬁ
 
desig«ãd
);

80 
Ty≥
 *
ªad_ˇ°_ty≥
();

81 
Ve˘‹
 *
ªad_de˛_öô
(
Ty≥
 *
ty
);

82 
Node
 *
ªad_boﬁón_ex¥
();

83 
Node
 *
ªad_ex¥_›t
();

84 
Node
 *
ªad_c⁄dôi⁄Æ_ex¥
();

85 
Node
 *
ªad_assignmít_ex¥
();

86 
Node
 *
ªad_ˇ°_ex¥
();

87 
Node
 *
ªad_comma_ex¥
();

88 
Tokí
 *
gë
();

89 
Tokí
 *
≥ek
();

92 
	mbeg
;

93 
	míd
;

94 *
	mœbñ
;

95 } 
	tCa£
;

98 
	mS_TYPEDEF
 = 1,

99 
	mS_EXTERN
,

100 
	mS_STATIC
,

101 
	mS_AUTO
,

102 
	mS_REGISTER
,

106 
	mDECL_BODY
 = 1,

107 
	mDECL_PARAM
,

108 
	mDECL_PARAM_TYPEONLY
,

109 
	mDECL_CAST
,

116 
	$m¨k_loˇti⁄
() {

117 
Tokí
 *
tok
 = 
	`≥ek
();

118 
sour˚_loc
 = 
	`mÆloc
((
Sour˚Loc
));

119 
sour˚_loc
->
fûe
 = 
tok
->fûe->
«me
;

120 
sour˚_loc
->
löe
 = 
tok
->line;

121 
	}
}

128 *
	$make_ãm≤ame
() {

129 
c
 = 0;

130  
	`f‹m©
(".T%d", 
c
++);

131 
	}
}

133 *
	$make_œbñ
() {

134 
c
 = 0;

135  
	`f‹m©
(".L%d", 
c
++);

136 
	}
}

138 *
	$make_°©ic_œbñ
(*
«me
) {

139 
c
 = 0;

140  
	`f‹m©
(".S%d.%s", 
c
++, 
«me
);

141 
	}
}

143 
Ca£
 *
	$make_ˇ£
(
beg
, 
íd
, *
œbñ
) {

144 
Ca£
 *
r
 = 
	`mÆloc
((Case));

145 
r
->
beg
 = beg;

146 
r
->
íd
 =Énd;

147 
r
->
œbñ
 =Üabel;

148  
r
;

149 
	}
}

151 
M≠
 *
	$ív
() {

152  
loˇÀnv
 ?ÜoˇÀnv : 
globÆív
;

153 
	}
}

155 
Node
 *
	$make_a°
(
Node
 *
tm∂
) {

156 
Node
 *
r
 = 
	`mÆloc
((Node));

157 *
r
 = *
tm∂
;

158 
r
->
sour˚Loc
 = 
sour˚_loc
;

159  
r
;

160 
	}
}

162 
Node
 *
	$a°_u›
(
köd
, 
Ty≥
 *
ty
, 
Node
 *
›î™d
) {

163  
	`make_a°
(&(
Node
){ 
köd
, 
ty
, .
›î™d
 = operand });

164 
	}
}

166 
Node
 *
	$a°_bö›
(
Ty≥
 *
ty
, 
köd
, 
Node
 *
À·
, Nodê*
right
) {

167 
Node
 *
r
 = 
	`make_a°
(&(Node){ 
köd
, 
ty
 });

168 
r
->
À·
 =Üeft;

169 
r
->
right
 =Ñight;

170  
r
;

171 
	}
}

173 
Node
 *
	$a°_öây≥
(
Ty≥
 *
ty
, 
vÆ
) {

174  
	`make_a°
(&(
Node
){ 
AST_LITERAL
, 
ty
, .
ivÆ
 = 
vÆ
 });

175 
	}
}

177 
Node
 *
	$a°_Êﬂây≥
(
Ty≥
 *
ty
, 
vÆ
) {

178  
	`make_a°
(&(
Node
){ 
AST_LITERAL
, 
ty
, .
fvÆ
 = 
vÆ
 });

179 
	}
}

181 
Node
 *
	$a°_lv¨
(
Ty≥
 *
ty
, *
«me
) {

182 
Node
 *
r
 = 
	`make_a°
(&(Node){ 
AST_LVAR
, 
ty
, .
v¨«me
 = 
«me
 });

183 i‡(
loˇÀnv
)

184 
	`m≠_put
(
loˇÀnv
, 
«me
, 
r
);

185 i‡(
loˇlv¨s
)

186 
	`vec_push
(
loˇlv¨s
, 
r
);

187  
r
;

188 
	}
}

190 
Node
 *
	$a°_gv¨
(
Ty≥
 *
ty
, *
«me
) {

191 
Node
 *
r
 = 
	`make_a°
(&(Node){ 
AST_GVAR
, 
ty
, .
v¨«me
 = 
«me
, .
gœbñ
 =Çame });

192 
	`m≠_put
(
globÆív
, 
«me
, 
r
);

193  
r
;

194 
	}
}

196 
Node
 *
	$a°_°©ic_lv¨
(
Ty≥
 *
ty
, *
«me
) {

197 
Node
 *
r
 = 
	`make_a°
(&(Node){

198 .
köd
 = 
AST_GVAR
,

199 .
ty
 =Åy,

200 .
v¨«me
 = 
«me
,

201 .
gœbñ
 = 
	`make_°©ic_œbñ
(
«me
) });

202 
	`as£π
(
loˇÀnv
);

203 
	`m≠_put
(
loˇÀnv
, 
«me
, 
r
);

204  
r
;

205 
	}
}

207 
Node
 *
	$a°_ty≥def
(
Ty≥
 *
ty
, *
«me
) {

208 
Node
 *
r
 = 
	`make_a°
(&(Node){ 
AST_TYPEDEF
, 
ty
 });

209 
	`m≠_put
(
	`ív
(), 
«me
, 
r
);

210  
r
;

211 
	}
}

213 
Node
 *
	$a°_°rög
(
íc
, *
°r
, 
Àn
) {

214 
Ty≥
 *
ty
;

215 *
body
;

217 
íc
) {

218 
ENC_NONE
:

219 
ENC_UTF8
:

220 
ty
 = 
	`make_¨øy_ty≥
(
ty≥_ch¨
, 
Àn
);

221 
body
 = 
°r
;

223 
ENC_CHAR16
: {

224 
Buf„r
 *
b
 = 
	`to_utf16
(
°r
, 
Àn
);

225 
ty
 = 
	`make_¨øy_ty≥
(
ty≥_ush‹t
, 
	`buf_Àn
(
b
Ë/Åy≥_ush‹t->
size
);

226 
body
 = 
	`buf_body
(
b
);

229 
ENC_CHAR32
:

230 
ENC_WCHAR
: {

231 
Buf„r
 *
b
 = 
	`to_utf32
(
°r
, 
Àn
);

232 
ty
 = 
	`make_¨øy_ty≥
(
ty≥_uöt
, 
	`buf_Àn
(
b
Ë/Åy≥_uöt->
size
);

233 
body
 = 
	`buf_body
(
b
);

237  
	`make_a°
(&(
Node
){ 
AST_LITERAL
, .
ty
 =Åy, .
svÆ
 = 
body
 });

238 
	}
}

240 
Node
 *
	$a°_funˇŒ
(
Ty≥
 *
·y≥
, *
‚ame
, 
Ve˘‹
 *
¨gs
) {

241  
	`make_a°
(&(
Node
){

242 .
köd
 = 
AST_FUNCALL
,

243 .
ty
 = 
·y≥
->
ªây≥
,

244 .
‚ame
 = fname,

245 .
¨gs
 =árgs,

246 .
·y≥
 = ftype });

247 
	}
}

249 
Node
 *
	$a°_funcdesg
(
Ty≥
 *
ty
, *
‚ame
) {

250  
	`make_a°
(&(
Node
){ 
AST_FUNCDESG
, 
ty
, .
‚ame
 = fname });

251 
	}
}

253 
Node
 *
	$a°_fun˝å_ˇŒ
(
Node
 *
Âå
, 
Ve˘‹
 *
¨gs
) {

254 
	`as£π
(
Âå
->
ty
->
köd
 =
KIND_PTR
);

255 
	`as£π
(
Âå
->
ty
->
±r
->
köd
 =
KIND_FUNC
);

256  
	`make_a°
(&(
Node
){

257 .
köd
 = 
AST_FUNCPTR_CALL
,

258 .
ty
 = 
Âå
->ty->
±r
->
ªây≥
,

259 .
Âå
 = fptr,

260 .
¨gs
 =árgs });

261 
	}
}

263 
Node
 *
	$a°_func
(
Ty≥
 *
ty
, *
‚ame
, 
Ve˘‹
 *
∑øms
, 
Node
 *
body
, Ve˘‹ *
loˇlv¨s
) {

264  
	`make_a°
(&(
Node
){

265 .
köd
 = 
AST_FUNC
,

266 .
ty
 =Åy,

267 .
‚ame
 = fname,

268 .
∑øms
 =Öarams,

269 .
loˇlv¨s
 =Üocalvars,

270 .
body
 = body});

271 
	}
}

273 
Node
 *
	$a°_de˛
(
Node
 *
v¨
, 
Ve˘‹
 *
öô
) {

274  
	`make_a°
(&(
Node
){ 
AST_DECL
, .
de˛v¨
 = 
v¨
, .
de˛öô
 = 
öô
 });

275 
	}
}

277 
Node
 *
	$a°_öô
(
Node
 *
vÆ
, 
Ty≥
 *
tŸy≥
, 
off
) {

278  
	`make_a°
(&(
Node
){ 
AST_INIT
, .
öôvÆ
 = 
vÆ
, .
öôoff
 = 
off
, .
tŸy≥
 =Åotype });

279 
	}
}

281 
Node
 *
	$a°_c⁄v
(
Ty≥
 *
tŸy≥
, 
Node
 *
vÆ
) {

282  
	`make_a°
(&(
Node
){ 
AST_CONV
, 
tŸy≥
, .
›î™d
 = 
vÆ
 });

283 
	}
}

285 
Node
 *
	$a°_if
(
Node
 *
c⁄d
, Nodê*
thí
, Nodê*
ñs
) {

286  
	`make_a°
(&(
Node
){ 
AST_IF
, .
c⁄d
 = c⁄d, .
thí
 =Åhí, .
ñs
 =Éls });

287 
	}
}

289 
Node
 *
	$a°_ã∫¨y
(
Ty≥
 *
ty
, 
Node
 *
c⁄d
, Nodê*
thí
, Nodê*
ñs
) {

290  
	`make_a°
(&(
Node
){ 
AST_TERNARY
, 
ty
, .
c⁄d
 = c⁄d, .
thí
 =Åhí, .
ñs
 =Éls });

291 
	}
}

293 
Node
 *
	$a°_ªtu∫
(
Node
 *
ªtvÆ
) {

294  
	`make_a°
(&(
Node
){ 
AST_RETURN
, .
ªtvÆ
 =Ñetval });

295 
	}
}

297 
Node
 *
	$a°_compound_°mt
(
Ve˘‹
 *
°mts
) {

298  
	`make_a°
(&(
Node
){ 
AST_COMPOUND_STMT
, .
°mts
 = stmts });

299 
	}
}

301 
Node
 *
	$a°_°ru˘_ªf
(
Ty≥
 *
ty
, 
Node
 *
°ruc
, *
«me
) {

302  
	`make_a°
(&(
Node
){ 
AST_STRUCT_REF
, 
ty
, .
°ruc
 = såuc, .
fõld
 = 
«me
 });

303 
	}
}

305 
Node
 *
	$a°_gŸo
(*
œbñ
) {

306  
	`make_a°
(&(
Node
){ 
AST_GOTO
, .
œbñ
 =Üabel });

307 
	}
}

309 
Node
 *
	$a°_jump
(*
œbñ
) {

310  
	`make_a°
(&(
Node
){ 
AST_GOTO
, .
œbñ
 =Üabñ, .
√wœbñ
 =Üabel });

311 
	}
}

313 
Node
 *
	$a°_compuãd_gŸo
(
Node
 *
ex¥
) {

314  
	`make_a°
(&(
Node
){ 
AST_COMPUTED_GOTO
, .
›î™d
 = 
ex¥
 });

315 
	}
}

317 
Node
 *
	$a°_œbñ
(*
œbñ
) {

318  
	`make_a°
(&(
Node
){ 
AST_LABEL
, .
œbñ
 =Üabel });

319 
	}
}

321 
Node
 *
	$a°_de°
(*
œbñ
) {

322  
	`make_a°
(&(
Node
){ 
AST_LABEL
, .
œbñ
 =Üabñ, .
√wœbñ
 =Üabel });

323 
	}
}

325 
Node
 *
	$a°_œbñ_addr
(*
œbñ
) {

326  
	`make_a°
(&(
Node
){ 
OP_LABEL_ADDR
, 
	`make_±r_ty≥
(
ty≥_void
), .
œbñ
 =Üabel });

327 
	}
}

329 
Ty≥
 *
	$make_ty≥
(
Ty≥
 *
tm∂
) {

330 
Ty≥
 *
r
 = 
	`mÆloc
((Type));

331 *
r
 = *
tm∂
;

332  
r
;

333 
	}
}

335 
Ty≥
 *
	$c›y_ty≥
(
Ty≥
 *
ty
) {

336 
Ty≥
 *
r
 = 
	`mÆloc
((Type));

337 
	`mem˝y
(
r
, 
ty
, (
Ty≥
));

338  
r
;

339 
	}
}

341 
Ty≥
 *
	$make_numty≥
(
köd
, 
boﬁ
 
usig
) {

342 
Ty≥
 *
r
 = 
	`ˇŒoc
(1, (Type));

343 
r
->
köd
 = kind;

344 
r
->
usig
 = usig;

345 i‡(
köd
 =
KIND_VOID
Ë
r
->
size
 =Ñ->
Æign
 = 0;

346 i‡(
köd
 =
KIND_BOOL
Ë
r
->
size
 =Ñ->
Æign
 = 1;

347 i‡(
köd
 =
KIND_CHAR
Ë
r
->
size
 =Ñ->
Æign
 = 1;

348 i‡(
köd
 =
KIND_SHORT
Ë
r
->
size
 =Ñ->
Æign
 = 1;

349 i‡(
köd
 =
KIND_INT
Ë
r
->
size
 =Ñ->
Æign
 = 1;

350 i‡(
köd
 =
KIND_LONG
Ë
r
->
size
 =Ñ->
Æign
 = 1;

351 i‡(
köd
 =
KIND_LLONG
Ë
r
->
size
 =Ñ->
Æign
 = 1;

352 i‡(
köd
 =
KIND_FLOAT
Ë
r
->
size
 =Ñ->
Æign
 = 4, 
	`îr‹
("float");

353 i‡(
köd
 =
KIND_DOUBLE
Ë
r
->
size
 =Ñ->
Æign
 = 8, 
	`îr‹
("float");

354 i‡(
köd
 =
KIND_LDOUBLE
Ë
r
->
size
 =Ñ->
Æign
 = 8, 
	`îr‹
("float");

355 
	`îr‹
("internalÉrror");

356  
r
;

357 
	}
}

359 
Ty≥
* 
	$make_±r_ty≥
(
Ty≥
 *
ty
) {

360  
	`make_ty≥
(&(
Ty≥
){ 
KIND_PTR
, .
±r
 = 
ty
, .
size
 = 1, .
Æign
 = 1 });

361 
	}
}

363 
Ty≥
* 
	$make_¨øy_ty≥
(
Ty≥
 *
ty
, 
Àn
) {

364 
size
;

365 i‡(
Àn
 == -1)

366 
size
 = -1;

368 
size
 = 
ty
->sizê* 
Àn
;

369  
	`make_ty≥
(&(
Ty≥
){

370 
KIND_ARRAY
,

371 .
±r
 = 
ty
,

372 .
size
 = size,

373 .
Àn
 =Üen,

374 .
Æign
 = 
ty
->align });

375 
	}
}

377 
Ty≥
* 
	$make_ª˘y≥
(
boﬁ
 
is_°ru˘
) {

378  
	`make_ty≥
(&(
Ty≥
){ 
KIND_STRUCT
, .
is_°ru˘
 = is_struct });

379 
	}
}

381 
Ty≥
* 
	$make_func_ty≥
(
Ty≥
 *
ªây≥
, 
Ve˘‹
 *
∑ømty≥s
, 
boﬁ
 
has_v¨¨gs
, boﬁ 
ﬁd°yÀ
) {

382  
	`make_ty≥
(&(
Ty≥
){

383 
KIND_FUNC
,

384 .
ªây≥
 =Ñettype,

385 .
∑øms
 = 
∑ømty≥s
,

386 .
hasva
 = 
has_v¨¨gs
,

387 .
ﬁd°yÀ
 = oldstyle });

388 
	}
}

390 
Ty≥
 *
	$make_°ub_ty≥
() {

391  
	`make_ty≥
(&(
Ty≥
){ 
KIND_STUB
 });

392 
	}
}

398 
boﬁ
 
	$is_öây≥
(
Ty≥
 *
ty
) {

399 
ty
->
köd
) {

400 
KIND_BOOL
: 
KIND_CHAR
: 
KIND_SHORT
: 
KIND_INT
:

401 
KIND_LONG
: 
KIND_LLONG
:

402  
åue
;

404  
Ál£
;

406 
	}
}

408 
boﬁ
 
	$is_ÊŸy≥
(
Ty≥
 *
ty
) {

409 
ty
->
köd
) {

410 
KIND_FLOAT
: 
KIND_DOUBLE
: 
KIND_LDOUBLE
:

411  
åue
;

413  
Ál£
;

415 
	}
}

417 
boﬁ
 
	$is_¨ôhty≥
(
Ty≥
 *
ty
) {

418  
	`is_öây≥
(
ty
Ë|| 
	`is_ÊŸy≥
(ty);

419 
	}
}

421 
boﬁ
 
	$is_°rög
(
Ty≥
 *
ty
) {

422  
ty
->
köd
 =
KIND_ARRAY
 &&Åy->
±r
->köd =
KIND_CHAR
;

423 
	}
}

425 
	$ísuª_lvÆue
(
Node
 *
node
) {

426 
node
->
köd
) {

427 
AST_LVAR
: 
AST_GVAR
: 
AST_DEREF
: 
AST_STRUCT_REF
:

430 
	`îr‹
("lvÆuêex≥˘ed, buàgŸ %s", 
	`node2s
(
node
));

432 
	}
}

434 
	$ísuª_öây≥
(
Node
 *
node
) {

435 i‡(!
	`is_öây≥
(
node
->
ty
))

436 
	`îr‹
("öãgîÅy≥Éx≥˘ed, buàgŸ %s", 
	`node2s
(
node
));

437 
	}
}

439 
	$ísuª_¨ôhty≥
(
Node
 *
node
) {

440 i‡(!
	`is_¨ôhty≥
(
node
->
ty
))

441 
	`îr‹
("¨ôhmëi¯ty≥Éx≥˘ed, buàgŸ %s", 
	`node2s
(
node
));

442 
	}
}

444 
	$ísuª_nŸ_void
(
Ty≥
 *
ty
) {

445 i‡(
ty
->
köd
 =
KIND_VOID
)

446 
	`îr‹
("void isÇotállowed");

447 
	}
}

449 
	$ex≥˘
(
id
) {

450 
Tokí
 *
tok
 = 
	`gë
();

451 i‡(!
	`is_keyw‹d
(
tok
, 
id
))

452 
	`îr‹t
(
tok
, "'%c'Éx≥˘ed, buàgŸ %s", 
id
, 
	`tok2s
(tok));

453 
	}
}

455 
Ty≥
 *
	$c›y_öcom∂ëe_ty≥
(
Ty≥
 *
ty
) {

456 i‡(!
ty
Ë 
NULL
;

457  (
ty
->
Àn
 =-1Ë? 
	`c›y_ty≥
(ty) :Åy;

458 
	}
}

460 
Ty≥
 *
	$gë_ty≥def
(*
«me
) {

461 
Node
 *
node
 = 
	`m≠_gë
(
	`ív
(), 
«me
);

462  (
node
 &&Çode->
köd
 =
AST_TYPEDEF
Ë?Çode->
ty
 : 
NULL
;

463 
	}
}

465 
boﬁ
 
	$is_ty≥
(
Tokí
 *
tok
) {

466 i‡(
tok
->
köd
 =
TIDENT
)

467  
	`gë_ty≥def
(
tok
->
svÆ
);

468 i‡(
tok
->
köd
 !
TKEYWORD
)

469  
Ál£
;

470 
tok
->
id
) {

471 
	#›
(
x
, 
y
)

	)

472 
	#keyw‹d
(
id
, 
_
, 
i°y≥
Ëid:  i°y≥;

	)

473 
	~"keyw‹d.öc
"

474 #unde‡
keyw‹d


475 #unde‡
›


477  
Ál£
;

479 
	}
}

481 
boﬁ
 
	$√xt_tokí
(
köd
) {

482 
Tokí
 *
tok
 = 
	`gë
();

483 i‡(
	`is_keyw‹d
(
tok
, 
köd
))

484  
åue
;

485 
	`ungë_tokí
(
tok
);

486  
Ál£
;

487 
	}
}

489 *
	$make_∑ú
(*
fú°
, *
£c⁄d
) {

490 **
r
 = 
	`mÆloc
((*) * 2);

491 
r
[0] = 
fú°
;

492 
r
[1] = 
£c⁄d
;

493  
r
;

494 
	}
}

500 
Node
 *
	$c⁄v
(
Node
 *
node
) {

501 i‡(!
node
)

502  
NULL
;

503 
Ty≥
 *
ty
 = 
node
->ty;

504 
ty
->
köd
) {

505 
KIND_ARRAY
:

507  
	`a°_u›
(
AST_CONV
, 
	`make_±r_ty≥
(
ty
->
±r
), 
node
);

508 
KIND_FUNC
:

510  
	`a°_u›
(
AST_ADDR
, 
	`make_±r_ty≥
(
ty
), 
node
);

511 
KIND_SHORT
: 
KIND_CHAR
: 
KIND_BOOL
:

513  
	`a°_c⁄v
(
ty≥_öt
, 
node
);

514 
KIND_INT
:

515 i‡(
ty
->
bôsize
 > 0 &&Åy->bitsize != -1)

516  
	`a°_c⁄v
(
ty≥_öt
, 
node
);

518  
node
;

519 
	}
}

521 
boﬁ
 
	$ßme_¨ôh_ty≥
(
Ty≥
 *
t
, Ty≥ *
u
) {

522  
t
->
köd
 =
u
->köd &&Å->
usig
 == u->usig;

523 
	}
}

525 
Node
 *
	$wøp
(
Ty≥
 *
t
, 
Node
 *
node
) {

526 i‡(
	`ßme_¨ôh_ty≥
(
t
, 
node
->
ty
))

527  
node
;

528  
	`a°_u›
(
AST_CONV
, 
t
, 
node
);

529 
	}
}

532 
Ty≥
 *
	$usuÆ_¨ôh_c⁄v
(
Ty≥
 *
t
, Ty≥ *
u
) {

533 
	`as£π
(
	`is_¨ôhty≥
(
t
));

534 
	`as£π
(
	`is_¨ôhty≥
(
u
));

535 i‡(
t
->
köd
 < 
u
->kind) {

537 
Ty≥
 *
tmp
 = 
t
;

538 
t
 = 
u
;

539 
u
 = 
tmp
;

541 i‡(
	`is_ÊŸy≥
(
t
))

542  
t
;

543 
	`as£π
(
	`is_öây≥
(
t
Ë&&Å->
size
 >
ty≥_öt
->size);

544 
	`as£π
(
	`is_öây≥
(
u
Ë&& u->
size
 >
ty≥_öt
->size);

545 i‡(
t
->
size
 > 
u
->size)

546  
t
;

547 
	`as£π
(
t
->
size
 =
u
->size);

548 i‡(
t
->
usig
 =
u
->usig)

549  
t
;

550 
Ty≥
 *
r
 = 
	`c›y_ty≥
(
t
);

551 
r
->
usig
 = 
åue
;

552  
r
;

553 
	}
}

555 
boﬁ
 
	$vÆid_poöãr_bö›
(
›
) {

556 
›
) {

557 '-': '<': '>': 
OP_EQ
:

558 
OP_NE
: 
OP_GE
: 
OP_LE
:

559  
åue
;

561  
Ál£
;

563 
	}
}

565 
Node
 *
	$bö›
(
›
, 
Node
 *
lhs
, Nodê*
rhs
) {

566 i‡(
lhs
->
ty
->
köd
 =
KIND_PTR
 && 
rhs
->ty->kind == KIND_PTR) {

567 i‡(!
	`vÆid_poöãr_bö›
(
›
))

568 
	`îr‹
("invalidÖointerárith");

570 i‡(
›
 == '-')

571  
	`a°_bö›
(
ty≥_l⁄g
, 
›
, 
lhs
, 
rhs
);

573  
	`a°_bö›
(
ty≥_öt
, 
›
, 
lhs
, 
rhs
);

575 i‡(
lhs
->
ty
->
köd
 =
KIND_PTR
)

576  
	`a°_bö›
(
lhs
->
ty
, 
›
,Ühs, 
rhs
);

577 i‡(
rhs
->
ty
->
köd
 =
KIND_PTR
)

578  
	`a°_bö›
(
rhs
->
ty
, 
›
,Ñhs, 
lhs
);

579 
	`as£π
(
	`is_¨ôhty≥
(
lhs
->
ty
));

580 
	`as£π
(
	`is_¨ôhty≥
(
rhs
->
ty
));

581 
Ty≥
 *
r
 = 
	`usuÆ_¨ôh_c⁄v
(
lhs
->
ty
, 
rhs
->ty);

582  
	`a°_bö›
(
r
, 
›
, 
	`wøp
‘, 
lhs
), wøp‘, 
rhs
));

583 
	}
}

585 
boﬁ
 
	$is_ßme_°ru˘
(
Ty≥
 *
a
, Ty≥ *
b
) {

586 i‡(
a
->
köd
 !
b
->kind)

587  
Ál£
;

588 
a
->
köd
) {

589 
KIND_ARRAY
:

590  
a
->
Àn
 =
b
->len &&

591 
	`is_ßme_°ru˘
(
a
->
±r
, 
b
->ptr);

592 
KIND_PTR
:

593  
	`is_ßme_°ru˘
(
a
->
±r
, 
b
->ptr);

594 
KIND_STRUCT
: {

595 i‡(
a
->
is_°ru˘
 !
b
->is_struct)

596  
Ál£
;

597 
Ve˘‹
 *
ka
 = 
	`di˘_keys
(
a
->
fõlds
);

598 
Ve˘‹
 *
kb
 = 
	`di˘_keys
(
b
->
fõlds
);

599 i‡(
	`vec_Àn
(
ka
Ë!vec_Àn(
kb
))

600  
Ál£
;

601 
i
 = 0; i < 
	`vec_Àn
(
ka
); i++)

602 i‡(!
	`is_ßme_°ru˘
(
	`vec_gë
(
ka
, 
i
), vec_gë(
kb
, i)))

603  
Ál£
;

604  
åue
;

607  
åue
;

609 
	}
}

611 
	$ísuª_assig«bÀ
(
Ty≥
 *
tŸy≥
, Ty≥ *
‰omty≥
) {

612 i‡((
	`is_¨ôhty≥
(
tŸy≥
Ë||ÅŸy≥->
köd
 =
KIND_PTR
) &&

613 (
	`is_¨ôhty≥
(
‰omty≥
Ë|| fromty≥->
köd
 =
KIND_PTR
))

615 i‡(
	`is_ßme_°ru˘
(
tŸy≥
, 
‰omty≥
))

617 
	`îr‹
("öcom∑tibÀ köd: <%s> <%s>", 
	`ty2s
(
tŸy≥
),Åy2s(
‰omty≥
));

618 
	}
}

624 
	$evÆ_°ru˘_ªf
(
Node
 *
node
, 
off£t
) {

625 i‡(
node
->
köd
 =
AST_STRUCT_REF
)

626  
	`evÆ_°ru˘_ªf
(
node
->
°ruc
,Çode->
ty
->
off£t
 + offset);

627  
	`evÆ_öãx¥
(
node
, 
NULL
Ë+ 
off£t
;

628 
	}
}

630 
	$evÆ_öãx¥
(
Node
 *
node
, Nodê**
addr
) {

631 
node
->
köd
) {

632 
AST_LITERAL
:

633 i‡(
	`is_öây≥
(
node
->
ty
))

634  
node
->
ivÆ
;

635 
	`îr‹
("I¡egîÉx¥essi⁄Éx≥˘ed, buàgŸ %s", 
	`node2s
(
node
));

636 '!':  !
	`evÆ_öãx¥
(
node
->
›î™d
, 
addr
);

637 '~':  ~
	`evÆ_öãx¥
(
node
->
›î™d
, 
addr
);

638 
OP_CAST
:  
	`evÆ_öãx¥
(
node
->
›î™d
, 
addr
);

639 
AST_CONV
:  
	`evÆ_öãx¥
(
node
->
›î™d
, 
addr
);

640 
AST_ADDR
:

641 i‡(
node
->
›î™d
->
köd
 =
AST_STRUCT_REF
)

642  
	`evÆ_°ru˘_ªf
(
node
->
›î™d
, 0);

644 
AST_GVAR
:

645 i‡(
addr
) {

646 *
addr
 = 
	`c⁄v
(
node
);

649 
îr‹
;

650 
îr‹
;

651 
AST_DEREF
:

652 i‡(
node
->
›î™d
->
ty
->
köd
 =
KIND_PTR
)

653  
	`evÆ_öãx¥
(
node
->
›î™d
, 
addr
);

654 
îr‹
;

655 
AST_TERNARY
: {

656 
c⁄d
 = 
	`evÆ_öãx¥
(
node
->c⁄d, 
addr
);

657 i‡(
c⁄d
)

658  
node
->
thí
 ? 
	`evÆ_öãx¥
“ode->thí, 
addr
Ë: 
c⁄d
;

659  
	`evÆ_öãx¥
(
node
->
ñs
, 
addr
);

661 
	#L
 (
	`evÆ_öãx¥
(
node
->
À·
, 
addr
))

	)

662 
	#R
 (
	`evÆ_öãx¥
(
node
->
right
, 
addr
))

	)

663 '+':  
L
 + 
R
;

664 '-':  
L
 - 
R
;

665 '*':  
L
 * 
R
;

666 '/':  
L
 / 
R
;

667 '<':  
L
 < 
R
;

668 '^':  
L
 ^ 
R
;

669 '&':  
L
 & 
R
;

670 '|':  
L
 | 
R
;

671 '%':  
L
 % 
R
;

672 
OP_EQ
:  
L
 =
R
;

673 
OP_LE
:  
L
 <
R
;

674 
OP_NE
:  
L
 !
R
;

675 
OP_SAL
:  
L
 << 
R
;

676 
OP_SAR
:  
L
 >> 
R
;

677 
OP_SHR
:  (()
L
Ë>> 
R
;

678 
OP_LOGAND
:  
L
 && 
R
;

679 
OP_LOGOR
:  
L
 || 
R
;

680 #unde‡
L


681 #unde‡
R


683 
îr‹
:

684 
	`îr‹
("I¡egîÉx¥essi⁄Éx≥˘ed, buàgŸ %s", 
	`node2s
(
node
));

686 
	}
}

688 
	$ªad_öãx¥
() {

689  
	`evÆ_öãx¥
(
	`ªad_c⁄dôi⁄Æ_ex¥
(), 
NULL
);

690 
	}
}

696 
Ty≥
 *
	$ªad_öt_suffix
(*
s
) {

697 i‡(!
	`°rˇ£cmp
(
s
, "u"))

698  
ty≥_uöt
;

699 i‡(!
	`°rˇ£cmp
(
s
, "l"))

700  
ty≥_l⁄g
;

701 i‡(!
	`°rˇ£cmp
(
s
, "ul") || !strcasecmp(s, "lu"))

702  
ty≥_ul⁄g
;

703 i‡(!
	`°rˇ£cmp
(
s
, "ll"))

704  
ty≥_Œ⁄g
;

705 i‡(!
	`°rˇ£cmp
(
s
, "ull") || !strcasecmp(s, "llu"))

706  
ty≥_uŒ⁄g
;

707  
NULL
;

708 
	}
}

710 
Node
 *
	$ªad_öt
(
Tokí
 *
tok
) {

711 *
s
 = 
tok
->
svÆ
;

712 *
íd
;

713 
v
 = !
	`°∫ˇ£cmp
(
s
, "0b", 2)

714 ? 
	`°πoul
(
s
 + 2, &
íd
, 2) : strtoul(s, &end, 0);

715 
Ty≥
 *
ty
 = 
	`ªad_öt_suffix
(
íd
);

716 i‡(
ty
)

717  
	`a°_öây≥
(
ty
, 
v
);

718 i‡(*
íd
 != '\0')

719 
	`îr‹t
(
tok
, "övÆid ch¨a˘î '%c': %s", *
íd
, 
s
);

723 
boﬁ
 
ba£10
 = (*
s
 != '0');

724 i‡(
ba£10
) {

725 
ty
 = !(
v
 & ~()
INT_MAX
Ë? 
ty≥_öt
 : 
ty≥_l⁄g
;

726  
	`a°_öây≥
(
ty
, 
v
);

729 
ty
 = !(
v
 & ~()
INT_MAX
Ë? 
ty≥_öt


730 : !(
v
 & ~()
UINT_MAX
Ë? 
ty≥_uöt


731 : !(
v
 & ~()
LONG_MAX
Ë? 
ty≥_l⁄g


732 : 
ty≥_ul⁄g
;

733  
	`a°_öây≥
(
ty
, 
v
);

734 
	}
}

736 
Node
 *
	$ªad_Êﬂt
(
Tokí
 *
tok
) {

737 *
s
 = 
tok
->
svÆ
;

738 *
íd
;

739 #ifde‡
__eú__


740 
v
 = 
	`°πﬁ
(
s
, &
íd
, 10);

742 
v
 = 
	`°πod
(
s
, &
íd
);

745 i‡(!
	`°rˇ£cmp
(
íd
, "l"))

746  
	`a°_Êﬂây≥
(
ty≥_ldoubÀ
, 
v
);

747 i‡(!
	`°rˇ£cmp
(
íd
, "f"))

748  
	`a°_Êﬂây≥
(
ty≥_Êﬂt
, 
v
);

749 i‡(*
íd
 != '\0')

750 
	`îr‹t
(
tok
, "övÆid ch¨a˘î '%c': %s", *
íd
, 
s
);

751  
	`a°_Êﬂây≥
(
ty≥_doubÀ
, 
v
);

752 
	}
}

754 
Node
 *
	$ªad_numbî
(
Tokí
 *
tok
) {

755 *
s
 = 
tok
->
svÆ
;

756 
boﬁ
 
isÊﬂt
 = 
	`°Ωbrk
(
s
, ".pP"Ë|| (
	`°∫ˇ£cmp
(s, "0x", 2) && strpbrk(s, "eE"));

757  
isÊﬂt
 ? 
	`ªad_Êﬂt
(
tok
Ë: 
	`ªad_öt
(tok);

758 
	}
}

764 
Ty≥
 *
	$ªad_sizeof_›î™d_sub
() {

765 
Tokí
 *
tok
 = 
	`gë
();

766 i‡(
	`is_keyw‹d
(
tok
, '('Ë&& 
	`is_ty≥
(
	`≥ek
())) {

767 
Ty≥
 *
r
 = 
	`ªad_ˇ°_ty≥
();

768 
	`ex≥˘
(')');

769  
r
;

771 
	`ungë_tokí
(
tok
);

772  
	`ªad_u«ry_ex¥
()->
ty
;

773 
	}
}

775 
Node
 *
	$ªad_sizeof_›î™d
() {

776 
Ty≥
 *
ty
 = 
	`ªad_sizeof_›î™d_sub
();

778 
size
 = (
ty
->
köd
 =
KIND_VOID
 ||Åy->köd =
KIND_FUNC
) ? 1 :Åy->size;

779 
	`as£π
(0 <
size
);

780  
	`a°_öây≥
(
ty≥_ul⁄g
, 
size
);

781 
	}
}

787 
Node
 *
	$ªad_Æignof_›î™d
() {

788 
	`ex≥˘
('(');

789 
Ty≥
 *
ty
 = 
	`ªad_ˇ°_ty≥
();

790 
	`ex≥˘
(')');

791  
	`a°_öây≥
(
ty≥_ul⁄g
, 
ty
->
Æign
);

792 
	}
}

798 
Ve˘‹
 *
	$ªad_func_¨gs
(
Ve˘‹
 *
∑øms
) {

799 
Ve˘‹
 *
¨gs
 = 
	`make_ve˘‹
();

800 
i
 = 0;

802 i‡(
	`√xt_tokí
(')')) ;

803 
Node
 *
¨g
 = 
	`c⁄v
(
	`ªad_assignmít_ex¥
());

804 
Ty≥
 *
∑ømty≥
;

805 i‡(
i
 < 
	`vec_Àn
(
∑øms
)) {

806 
∑ømty≥
 = 
	`vec_gë
(
∑øms
, 
i
++);

808 
∑ømty≥
 = 
	`is_ÊŸy≥
(
¨g
->
ty
Ë? 
ty≥_doubÀ
 :

809 
	`is_öây≥
(
¨g
->
ty
Ë? 
ty≥_öt
 :

810 
¨g
->
ty
;

812 
	`ísuª_assig«bÀ
(
∑ømty≥
, 
¨g
->
ty
);

813 i‡(
∑ømty≥
->
köd
 !
¨g
->
ty
->kind)

814 
¨g
 = 
	`a°_c⁄v
(
∑ømty≥
,árg);

815 
	`vec_push
(
¨gs
, 
¨g
);

816 
Tokí
 *
tok
 = 
	`gë
();

817 i‡(
	`is_keyw‹d
(
tok
, ')')) ;

818 i‡(!
	`is_keyw‹d
(
tok
, ','))

819 
	`îr‹t
(
tok
, "u√x≥˘edÅokí: '%s'", 
	`tok2s
(tok));

821  
¨gs
;

822 
	}
}

824 
Node
 *
	$ªad_funˇŒ
(
Node
 *
Â
) {

825 i‡(
Â
->
köd
 =
AST_ADDR
 && fp->
›î™d
->köd =
AST_FUNCDESG
) {

826 
Node
 *
desg
 = 
Â
->
›î™d
;

827 
Ve˘‹
 *
¨gs
 = 
	`ªad_func_¨gs
(
desg
->
ty
->
∑øms
);

828  
	`a°_funˇŒ
(
desg
->
ty
, desg->
‚ame
, 
¨gs
);

830 
Ve˘‹
 *
¨gs
 = 
	`ªad_func_¨gs
(
Â
->
ty
->
±r
->
∑øms
);

831  
	`a°_fun˝å_ˇŒ
(
Â
, 
¨gs
);

832 
	}
}

838 
boﬁ
 
	$ty≥_com∑tibÀ
(
Ty≥
 *
a
, Ty≥ *
b
) {

839 i‡(
a
->
köd
 =
KIND_STRUCT
)

840  
	`is_ßme_°ru˘
(
a
, 
b
);

841 i‡(
a
->
köd
 !
b
->kind)

842  
Ál£
;

843 i‡(
a
->
±r
 && 
b
->ptr)

844  
	`ty≥_com∑tibÀ
(
a
->
±r
, 
b
->ptr);

845 i‡(
	`is_¨ôhty≥
(
a
Ë&& is_¨ôhty≥(
b
))

846  
	`ßme_¨ôh_ty≥
(
a
, 
b
);

847  
åue
;

848 
	}
}

850 
Ve˘‹
 *
	$ªad_gíîic_li°
(
Node
 **
deÁu…ex¥
) {

851 
Ve˘‹
 *
r
 = 
	`make_ve˘‹
();

853 i‡(
	`√xt_tokí
(')'))

854  
r
;

855 
Tokí
 *
tok
 = 
	`≥ek
();

856 i‡(
	`√xt_tokí
(
KDEFAULT
)) {

857 i‡(*
deÁu…ex¥
)

858 
	`îr‹t
(
tok
, "defaultÉxpression specifiedÅwice");

859 
	`ex≥˘
(':');

860 *
deÁu…ex¥
 = 
	`ªad_assignmít_ex¥
();

862 
Ty≥
 *
ty
 = 
	`ªad_ˇ°_ty≥
();

863 
	`ex≥˘
(':');

864 
Node
 *
ex¥
 = 
	`ªad_assignmít_ex¥
();

865 
	`vec_push
(
r
, 
	`make_∑ú
(
ty
, 
ex¥
));

867 
	`√xt_tokí
(',');

869 
	}
}

871 
Node
 *
	$ªad_gíîic
() {

872 
	`ex≥˘
('(');

873 
Tokí
 *
tok
 = 
	`≥ek
();

874 
Node
 *
c⁄ãx¥
 = 
	`ªad_assignmít_ex¥
();

875 
	`ex≥˘
(',');

876 
Node
 *
deÁu…ex¥
 = 
NULL
;

877 
Ve˘‹
 *
li°
 = 
	`ªad_gíîic_li°
(&
deÁu…ex¥
);

878 
i
 = 0; i < 
	`vec_Àn
(
li°
); i++) {

879 **
∑ú
 = 
	`vec_gë
(
li°
, 
i
);

880 
Ty≥
 *
ty
 = 
∑ú
[0];

881 
Node
 *
ex¥
 = 
∑ú
[1];

882 i‡(
	`ty≥_com∑tibÀ
(
c⁄ãx¥
->
ty
,Åy))

883  
ex¥
;

885 i‡(!
deÁu…ex¥
)

886 
	`îr‹t
(
tok
, "nÿm©chög gíîi¯£À˘i⁄ f‹ %s: %s", 
	`node2s
(
c⁄ãx¥
), 
	`ty2s
(c⁄ãx¥->
ty
));

887  
deÁu…ex¥
;

888 
	}
}

894 
	$ªad_°©ic_as£π
() {

895 
	`ex≥˘
('(');

896 
vÆ
 = 
	`ªad_öãx¥
();

897 
	`ex≥˘
(',');

898 
Tokí
 *
tok
 = 
	`gë
();

899 i‡(
tok
->
köd
 !
TSTRING
)

900 
	`îr‹t
(
tok
, "°rögÉx≥˘edá†thê£c⁄dárgumíàf‹ _Sètic_as£π, buàgŸ %s", 
	`tok2s
(tok));

901 
	`ex≥˘
(')');

902 
	`ex≥˘
(';');

903 i‡(!
vÆ
)

904 
	`îr‹t
(
tok
, "_Sètic_as£π faûuª: %s",Åok->
svÆ
);

905 
	}
}

911 
Node
 *
	$ªad_v¨_‹_func
(*
«me
) {

912 
Node
 *
v
 = 
	`m≠_gë
(
	`ív
(), 
«me
);

913 i‡(!
v
) {

914 
Tokí
 *
tok
 = 
	`≥ek
();

915 i‡(!
	`is_keyw‹d
(
tok
, '('))

916 
	`îr‹t
(
tok
, "undeföed v¨übÀ: %s", 
«me
);

917 
Ty≥
 *
ty
 = 
	`make_func_ty≥
(
ty≥_öt
, 
	`make_ve˘‹
(), 
åue
, 
Ál£
);

918 
	`w¨¡
(
tok
, "assumêªtu∫ög i¡: %s()", 
«me
);

919  
	`a°_funcdesg
(
ty
, 
«me
);

921 i‡(
v
->
ty
->
köd
 =
KIND_FUNC
)

922  
	`a°_funcdesg
(
v
->
ty
, 
«me
);

923  
v
;

924 
	}
}

926 
	$gë_compound_assign_›
(
Tokí
 *
tok
) {

927 i‡(
tok
->
köd
 !
TKEYWORD
)

929 
tok
->
id
) {

930 
OP_A_ADD
:  '+';

931 
OP_A_SUB
:  '-';

932 
OP_A_MUL
:  '*';

933 
OP_A_DIV
:  '/';

934 
OP_A_MOD
:  '%';

935 
OP_A_AND
:  '&';

936 
OP_A_OR
:  '|';

937 
OP_A_XOR
:  '^';

938 
OP_A_SAL
:  
OP_SAL
;

939 
OP_A_SAR
:  
OP_SAR
;

940 
OP_A_SHR
:  
OP_SHR
;

943 
	}
}

945 
Node
 *
	$ªad_°mt_ex¥
() {

946 
Node
 *
r
 = 
	`ªad_compound_°mt
();

947 
	`ex≥˘
(')');

948 
Ty≥
 *
πy≥
 = 
ty≥_void
;

949 i‡(
	`vec_Àn
(
r
->
°mts
) > 0) {

950 
Node
 *
œ°ex¥
 = 
	`vec_èû
(
r
->
°mts
);

951 i‡(
œ°ex¥
->
ty
)

952 
πy≥
 = 
œ°ex¥
->
ty
;

954 
r
->
ty
 = 
πy≥
;

955  
r
;

956 
	}
}

958 
Ty≥
 *
	$ch¨_ty≥
(
íc
) {

959 
íc
) {

960 
ENC_NONE
:

961 
ENC_WCHAR
:

962  
ty≥_öt
;

963 
ENC_CHAR16
:

964  
ty≥_ush‹t
;

965 
ENC_CHAR32
:

966  
ty≥_uöt
;

968 
	`îr‹
("internalÉrror");

969 
	}
}

971 
Node
 *
	$ªad_¥im¨y_ex¥
() {

972 
Tokí
 *
tok
 = 
	`gë
();

973 i‡(!
tok
Ë 
NULL
;

974 i‡(
	`is_keyw‹d
(
tok
, '(')) {

975 i‡(
	`√xt_tokí
('{'))

976  
	`ªad_°mt_ex¥
();

977 
Node
 *
r
 = 
	`ªad_ex¥
();

978 
	`ex≥˘
(')');

979  
r
;

981 i‡(
	`is_keyw‹d
(
tok
, 
KGENERIC
)) {

982  
	`ªad_gíîic
();

984 
tok
->
köd
) {

985 
TIDENT
:

986  
	`ªad_v¨_‹_func
(
tok
->
svÆ
);

987 
TNUMBER
:

988  
	`ªad_numbî
(
tok
);

989 
TCHAR
:

990  
	`a°_öây≥
(
	`ch¨_ty≥
(
tok
->
íc
),Åok->
c
);

991 
TSTRING
:

992  
	`a°_°rög
(
tok
->
íc
,Åok->
svÆ
,Åok->
¶í
);

993 
TKEYWORD
:

994 
	`ungë_tokí
(
tok
);

995  
NULL
;

997 
	`îr‹
("öã∫ÆÉº‹: unknow¿tokí köd: %d", 
tok
->
köd
);

999 
	}
}

1001 
Node
 *
	$ªad_subs¸ùt_ex¥
(
Node
 *
node
) {

1002 
Tokí
 *
tok
 = 
	`≥ek
();

1003 
Node
 *
sub
 = 
	`ªad_ex¥
();

1004 i‡(!
sub
)

1005 
	`îr‹t
(
tok
, "subscriptionÉxpected");

1006 
	`ex≥˘
(']');

1007 
Node
 *
t
 = 
	`bö›
('+', 
	`c⁄v
(
node
), c⁄v(
sub
));

1008  
	`a°_u›
(
AST_DEREF
, 
t
->
ty
->
±r
,Å);

1009 
	}
}

1011 
Node
 *
	$ªad_po°fix_ex¥_èû
(
Node
 *
node
) {

1012 i‡(!
node
Ë 
NULL
;

1014 i‡(
	`√xt_tokí
('(')) {

1015 
Tokí
 *
tok
 = 
	`≥ek
();

1016 
node
 = 
	`c⁄v
(node);

1017 
Ty≥
 *
t
 = 
node
->
ty
;

1018 i‡(
t
->
köd
 !
KIND_PTR
 ||Å->
±r
->köd !
KIND_FUNC
)

1019 
	`îr‹t
(
tok
, "fun˘i⁄Éx≥˘ed, buàgŸ %s", 
	`node2s
(
node
));

1020 
node
 = 
	`ªad_funˇŒ
(node);

1023 i‡(
	`√xt_tokí
('[')) {

1024 
node
 = 
	`ªad_subs¸ùt_ex¥
(node);

1027 i‡(
	`√xt_tokí
('.')) {

1028 
node
 = 
	`ªad_°ru˘_fõld
(node);

1031 i‡(
	`√xt_tokí
(
OP_ARROW
)) {

1032 i‡(
node
->
ty
->
köd
 !
KIND_PTR
)

1033 
	`îr‹
("pointerÅypeÉxpected, but got %s %s",

1034 
	`ty2s
(
node
->
ty
), 
	`node2s
(node));

1035 
node
 = 
	`a°_u›
(
AST_DEREF
,Çode->
ty
->
±r
,Çode);

1036 
node
 = 
	`ªad_°ru˘_fõld
(node);

1039 
Tokí
 *
tok
 = 
	`≥ek
();

1040 i‡(
	`√xt_tokí
(
OP_INC
Ë||Çext_tokí(
OP_DEC
)) {

1041 
	`ísuª_lvÆue
(
node
);

1042 
›
 = 
	`is_keyw‹d
(
tok
, 
OP_INC
Ë? 
OP_POST_INC
 : 
OP_POST_DEC
;

1043  
	`a°_u›
(
›
, 
node
->
ty
,Çode);

1045  
node
;

1047 
	}
}

1049 
Node
 *
	$ªad_po°fix_ex¥
() {

1050 
Node
 *
node
 = 
	`ªad_¥im¨y_ex¥
();

1051  
	`ªad_po°fix_ex¥_èû
(
node
);

1052 
	}
}

1054 
Node
 *
	$ªad_u«ry_öcdec
(
›
) {

1055 
Node
 *
›î™d
 = 
	`ªad_u«ry_ex¥
();

1056 
›î™d
 = 
	`c⁄v
(operand);

1057 
	`ísuª_lvÆue
(
›î™d
);

1058  
	`a°_u›
(
›
, 
›î™d
->
ty
, operand);

1059 
	}
}

1061 
Node
 *
	$ªad_œbñ_addr
(
Tokí
 *
tok
) {

1064 
Tokí
 *
tok2
 = 
	`gë
();

1065 i‡(
tok2
->
köd
 !
TIDENT
)

1066 
	`îr‹t
(
tok
, "œbñÇamêex≥˘edá·î &&, buàgŸ %s", 
	`tok2s
(
tok2
));

1067 
Node
 *
r
 = 
	`a°_œbñ_addr
(
tok2
->
svÆ
);

1068 
	`vec_push
(
gŸos
, 
r
);

1069  
r
;

1070 
	}
}

1072 
Node
 *
	$ªad_u«ry_addr
() {

1073 
Node
 *
›î™d
 = 
	`ªad_ˇ°_ex¥
();

1074 i‡(
›î™d
->
köd
 =
AST_FUNCDESG
)

1075  
	`c⁄v
(
›î™d
);

1076 
	`ísuª_lvÆue
(
›î™d
);

1077  
	`a°_u›
(
AST_ADDR
, 
	`make_±r_ty≥
(
›î™d
->
ty
), operand);

1078 
	}
}

1080 
Node
 *
	$ªad_u«ry_dîef
(
Tokí
 *
tok
) {

1081 
Node
 *
›î™d
 = 
	`c⁄v
(
	`ªad_ˇ°_ex¥
());

1082 i‡(
›î™d
->
ty
->
köd
 !
KIND_PTR
)

1083 
	`îr‹t
(
tok
, "poöã∏ty≥Éx≥˘ed, buàgŸ %s", 
	`node2s
(
›î™d
));

1084 i‡(
›î™d
->
ty
->
±r
->
köd
 =
KIND_FUNC
)

1085  
›î™d
;

1086  
	`a°_u›
(
AST_DEREF
, 
›î™d
->
ty
->
±r
, operand);

1087 
	}
}

1089 
Node
 *
	$ªad_u«ry_möus
() {

1090 
Node
 *
ex¥
 = 
	`ªad_ˇ°_ex¥
();

1091 
	`ísuª_¨ôhty≥
(
ex¥
);

1092 i‡(
	`is_öây≥
(
ex¥
->
ty
))

1093  
	`bö›
('-', 
	`c⁄v
(
	`a°_öây≥
(
ex¥
->
ty
, 0)), conv(expr));

1094  
	`bö›
('-', 
	`a°_Êﬂây≥
(
ex¥
->
ty
, 0),Éxpr);

1095 
	}
}

1097 
Node
 *
	$ªad_u«ry_bônŸ
(
Tokí
 *
tok
) {

1098 
Node
 *
ex¥
 = 
	`ªad_ˇ°_ex¥
();

1099 
ex¥
 = 
	`c⁄v
(expr);

1100 i‡(!
	`is_öây≥
(
ex¥
->
ty
))

1101 
	`îr‹t
(
tok
, "övÆid u£ o‡~: %s", 
	`node2s
(
ex¥
));

1102  
	`a°_u›
('~', 
ex¥
->
ty
,Éxpr);

1103 
	}
}

1105 
Node
 *
	$ªad_u«ry_lognŸ
() {

1106 
Node
 *
›î™d
 = 
	`ªad_ˇ°_ex¥
();

1107 
›î™d
 = 
	`c⁄v
(operand);

1108  
	`a°_u›
('!', 
ty≥_öt
, 
›î™d
);

1109 
	}
}

1111 
Node
 *
	$ªad_u«ry_ex¥
() {

1112 
Tokí
 *
tok
 = 
	`gë
();

1113 i‡(
tok
->
köd
 =
TKEYWORD
) {

1114 
tok
->
id
) {

1115 
KSIZEOF
:  
	`ªad_sizeof_›î™d
();

1116 
KALIGNOF
:  
	`ªad_Æignof_›î™d
();

1117 
OP_INC
:  
	`ªad_u«ry_öcdec
(
OP_PRE_INC
);

1118 
OP_DEC
:  
	`ªad_u«ry_öcdec
(
OP_PRE_DEC
);

1119 
OP_LOGAND
:  
	`ªad_œbñ_addr
(
tok
);

1120 '&':  
	`ªad_u«ry_addr
();

1121 '*':  
	`ªad_u«ry_dîef
(
tok
);

1122 '+':  
	`ªad_ˇ°_ex¥
();

1123 '-':  
	`ªad_u«ry_möus
();

1124 '~':  
	`ªad_u«ry_bônŸ
(
tok
);

1125 '!':  
	`ªad_u«ry_lognŸ
();

1128 
	`ungë_tokí
(
tok
);

1129  
	`ªad_po°fix_ex¥
();

1130 
	}
}

1132 
Node
 *
	$ªad_compound_lôîÆ
(
Ty≥
 *
ty
) {

1133 *
«me
 = 
	`make_œbñ
();

1134 
Ve˘‹
 *
öô
 = 
	`ªad_de˛_öô
(
ty
);

1135 
Node
 *
r
 = 
	`a°_lv¨
(
ty
, 
«me
);

1136 
r
->
lv¨öô
 = 
öô
;

1137  
r
;

1138 
	}
}

1140 
Ty≥
 *
	$ªad_ˇ°_ty≥
() {

1141  
	`ªad_ab°ø˘_de˛¨©‹
(
	`ªad_de˛_•ec
(
NULL
));

1142 
	}
}

1144 
Node
 *
	$ªad_ˇ°_ex¥
() {

1145 
Tokí
 *
tok
 = 
	`gë
();

1146 i‡(
	`is_keyw‹d
(
tok
, '('Ë&& 
	`is_ty≥
(
	`≥ek
())) {

1147 
Ty≥
 *
ty
 = 
	`ªad_ˇ°_ty≥
();

1148 
	`ex≥˘
(')');

1149 i‡(
	`is_keyw‹d
(
	`≥ek
(), '{')) {

1150 
Node
 *
node
 = 
	`ªad_compound_lôîÆ
(
ty
);

1151  
	`ªad_po°fix_ex¥_èû
(
node
);

1153  
	`a°_u›
(
OP_CAST
, 
ty
, 
	`ªad_ˇ°_ex¥
());

1155 
	`ungë_tokí
(
tok
);

1156  
	`ªad_u«ry_ex¥
();

1157 
	}
}

1159 
Node
 *
	$ªad_mu…ùliˇtive_ex¥
() {

1160 
Node
 *
node
 = 
	`ªad_ˇ°_ex¥
();

1162 i‡(
	`√xt_tokí
('*')Ë
node
 = 
	`bö›
('*', 
	`c⁄v
“ode), c⁄v(
	`ªad_ˇ°_ex¥
()));

1163 i‡(
	`√xt_tokí
('/')Ë
node
 = 
	`bö›
('/', 
	`c⁄v
“ode), c⁄v(
	`ªad_ˇ°_ex¥
()));

1164 i‡(
	`√xt_tokí
('%')Ë
node
 = 
	`bö›
('%', 
	`c⁄v
“ode), c⁄v(
	`ªad_ˇ°_ex¥
()));

1165  
node
;

1167 
	}
}

1169 
Node
 *
	$ªad_addôive_ex¥
() {

1170 
Node
 *
node
 = 
	`ªad_mu…ùliˇtive_ex¥
();

1172 i‡(
	`√xt_tokí
('+')Ë
node
 = 
	`bö›
('+', 
	`c⁄v
“ode), c⁄v(
	`ªad_mu…ùliˇtive_ex¥
()));

1173 i‡(
	`√xt_tokí
('-')Ë
node
 = 
	`bö›
('-', 
	`c⁄v
“ode), c⁄v(
	`ªad_mu…ùliˇtive_ex¥
()));

1174  
node
;

1176 
	}
}

1178 
Node
 *
	$ªad_shi·_ex¥
() {

1179 
Node
 *
node
 = 
	`ªad_addôive_ex¥
();

1181 
›
;

1182 i‡(
	`√xt_tokí
(
OP_SAL
))

1183 
›
 = 
OP_SAL
;

1184 i‡(
	`√xt_tokí
(
OP_SAR
))

1185 
›
 = 
node
->
ty
->
usig
 ? 
OP_SHR
 : 
OP_SAR
;

1188 
Node
 *
right
 = 
	`ªad_addôive_ex¥
();

1189 
	`ísuª_öây≥
(
node
);

1190 
	`ísuª_öây≥
(
right
);

1191 
node
 = 
	`a°_bö›
“ode->
ty
, 
›
, 
	`c⁄v
“ode), c⁄v(
right
));

1193  
node
;

1194 
	}
}

1196 
Node
 *
	$ªad_ªœti⁄Æ_ex¥
() {

1197 
Node
 *
node
 = 
	`ªad_shi·_ex¥
();

1199 i‡(
	`√xt_tokí
('<')Ë
node
 = 
	`bö›
('<', 
	`c⁄v
“ode), c⁄v(
	`ªad_shi·_ex¥
()));

1200 i‡(
	`√xt_tokí
('>')Ë
node
 = 
	`bö›
('<', 
	`c⁄v
(
	`ªad_shi·_ex¥
()), conv(node));

1201 i‡(
	`√xt_tokí
(
OP_LE
)Ë
node
 = 
	`bö›
(OP_LE, 
	`c⁄v
“ode), c⁄v(
	`ªad_shi·_ex¥
()));

1202 i‡(
	`√xt_tokí
(
OP_GE
)Ë
node
 = 
	`bö›
(
OP_LE
, 
	`c⁄v
(
	`ªad_shi·_ex¥
()), conv(node));

1203  
node
;

1204 
node
->
ty
 = 
ty≥_öt
;

1206 
	}
}

1208 
Node
 *
	$ªad_equÆôy_ex¥
() {

1209 
Node
 *
node
 = 
	`ªad_ªœti⁄Æ_ex¥
();

1210 
Node
 *
r
;

1211 i‡(
	`√xt_tokí
(
OP_EQ
)) {

1212 
r
 = 
	`bö›
(
OP_EQ
, 
	`c⁄v
(
node
), c⁄v(
	`ªad_equÆôy_ex¥
()));

1213 } i‡(
	`√xt_tokí
(
OP_NE
)) {

1214 
r
 = 
	`bö›
(
OP_NE
, 
	`c⁄v
(
node
), c⁄v(
	`ªad_equÆôy_ex¥
()));

1216  
node
;

1218 
r
->
ty
 = 
ty≥_öt
;

1219  
r
;

1220 
	}
}

1222 
Node
 *
	$ªad_bô™d_ex¥
() {

1223 
Node
 *
node
 = 
	`ªad_equÆôy_ex¥
();

1224 
	`√xt_tokí
('&'))

1225 
node
 = 
	`bö›
('&', 
	`c⁄v
“ode), c⁄v(
	`ªad_equÆôy_ex¥
()));

1226  
node
;

1227 
	}
}

1229 
Node
 *
	$ªad_bôx‹_ex¥
() {

1230 
Node
 *
node
 = 
	`ªad_bô™d_ex¥
();

1231 
	`√xt_tokí
('^'))

1232 
node
 = 
	`bö›
('^', 
	`c⁄v
“ode), c⁄v(
	`ªad_bô™d_ex¥
()));

1233  
node
;

1234 
	}
}

1236 
Node
 *
	$ªad_bô‹_ex¥
() {

1237 
Node
 *
node
 = 
	`ªad_bôx‹_ex¥
();

1238 
	`√xt_tokí
('|'))

1239 
node
 = 
	`bö›
('|', 
	`c⁄v
“ode), c⁄v(
	`ªad_bôx‹_ex¥
()));

1240  
node
;

1241 
	}
}

1243 
Node
 *
	$ªad_log™d_ex¥
() {

1244 
Node
 *
node
 = 
	`ªad_bô‹_ex¥
();

1245 
	`√xt_tokí
(
OP_LOGAND
))

1246 
node
 = 
	`a°_bö›
(
ty≥_öt
, 
OP_LOGAND
,Çode, 
	`ªad_bô‹_ex¥
());

1247  
node
;

1248 
	}
}

1250 
Node
 *
	$ªad_log‹_ex¥
() {

1251 
Node
 *
node
 = 
	`ªad_log™d_ex¥
();

1252 
	`√xt_tokí
(
OP_LOGOR
))

1253 
node
 = 
	`a°_bö›
(
ty≥_öt
, 
OP_LOGOR
,Çode, 
	`ªad_log™d_ex¥
());

1254  
node
;

1255 
	}
}

1257 
Node
 *
	$do_ªad_c⁄dôi⁄Æ_ex¥
(
Node
 *
c⁄d
) {

1258 
Node
 *
thí
 = 
	`c⁄v
(
	`ªad_comma_ex¥
());

1259 
	`ex≥˘
(':');

1260 
Node
 *
ñs
 = 
	`c⁄v
(
	`ªad_c⁄dôi⁄Æ_ex¥
());

1262 
Ty≥
 *
t
 = 
thí
 ?Åhí->
ty
 : 
c⁄d
->ty;

1263 
Ty≥
 *
u
 = 
ñs
->
ty
;

1266 i‡(
	`is_¨ôhty≥
(
t
Ë&& is_¨ôhty≥(
u
)) {

1267 
Ty≥
 *
r
 = 
	`usuÆ_¨ôh_c⁄v
(
t
, 
u
);

1268  
	`a°_ã∫¨y
(
r
, 
c⁄d
, (
thí
 ? 
	`wøp
‘,ÅhíË: 
NULL
), wøp‘, 
ñs
));

1270  
	`a°_ã∫¨y
(
u
, 
c⁄d
, 
thí
, 
ñs
);

1271 
	}
}

1273 
Node
 *
	$ªad_c⁄dôi⁄Æ_ex¥
() {

1274 
Node
 *
c⁄d
 = 
	`ªad_log‹_ex¥
();

1275 i‡(!
	`√xt_tokí
('?'))

1276  
c⁄d
;

1277  
	`do_ªad_c⁄dôi⁄Æ_ex¥
(
c⁄d
);

1278 
	}
}

1280 
Node
 *
	$ªad_assignmít_ex¥
() {

1281 
Node
 *
node
 = 
	`ªad_log‹_ex¥
();

1282 
Tokí
 *
tok
 = 
	`gë
();

1283 i‡(!
tok
)

1284  
node
;

1285 i‡(
	`is_keyw‹d
(
tok
, '?'))

1286  
	`do_ªad_c⁄dôi⁄Æ_ex¥
(
node
);

1287 
c›
 = 
	`gë_compound_assign_›
(
tok
);

1288 i‡(
	`is_keyw‹d
(
tok
, '='Ë|| 
c›
) {

1289 
Node
 *
vÆue
 = 
	`c⁄v
(
	`ªad_assignmít_ex¥
());

1290 i‡(
	`is_keyw‹d
(
tok
, '='Ë|| 
c›
)

1291 
	`ísuª_lvÆue
(
node
);

1292 
Node
 *
right
 = 
c›
 ? 
	`bö›
(c›, 
	`c⁄v
(
node
), 
vÆue
) : value;

1293 i‡(
	`is_¨ôhty≥
(
node
->
ty
Ë&&Çode->ty->
köd
 !
right
->ty->kind)

1294 
right
 = 
	`a°_c⁄v
(
node
->
ty
,Ñight);

1295  
	`a°_bö›
(
node
->
ty
, '=',Çode, 
right
);

1297 
	`ungë_tokí
(
tok
);

1298  
node
;

1299 
	}
}

1301 
Node
 *
	$ªad_comma_ex¥
() {

1302 
Node
 *
node
 = 
	`ªad_assignmít_ex¥
();

1303 
	`√xt_tokí
(',')) {

1304 
Node
 *
ex¥
 = 
	`ªad_assignmít_ex¥
();

1305 
node
 = 
	`a°_bö›
(
ex¥
->
ty
, ',',Çode,Éxpr);

1307  
node
;

1308 
	}
}

1310 
Node
 *
	$ªad_ex¥
() {

1311 
Tokí
 *
tok
 = 
	`≥ek
();

1312 
Node
 *
r
 = 
	`ªad_comma_ex¥
();

1313 i‡(!
r
)

1314 
	`îr‹t
(
tok
, "expressionÉxpected");

1315  
r
;

1316 
	}
}

1318 
Node
 *
	$ªad_ex¥_›t
() {

1319  
	`ªad_comma_ex¥
();

1320 
	}
}

1326 
Node
 *
	$ªad_°ru˘_fõld
(
Node
 *
°ruc
) {

1327 i‡(
°ruc
->
ty
->
köd
 !
KIND_STRUCT
)

1328 
	`îr‹
("°ru˘Éx≥˘ed, buàgŸ %s", 
	`node2s
(
°ruc
));

1329 
Tokí
 *
«me
 = 
	`gë
();

1330 i‡(
«me
->
köd
 !
TIDENT
)

1331 
	`îr‹
("fõldÇamêex≥˘ed, buàgŸ %s", 
	`tok2s
(
«me
));

1332 
Ty≥
 *
fõld
 = 
	`di˘_gë
(
°ruc
->
ty
->
fõlds
, 
«me
->
svÆ
);

1333 i‡(!
fõld
)

1334 
	`îr‹
("°ru˘ ha†nÿsuch fõld: %s", 
	`tok2s
(
«me
));

1335  
	`a°_°ru˘_ªf
(
fõld
, 
°ruc
, 
«me
->
svÆ
);

1336 
	}
}

1338 *
	$ªad_ª˘y≥_èg
() {

1339 
Tokí
 *
tok
 = 
	`gë
();

1340 i‡(
tok
->
köd
 =
TIDENT
)

1341  
tok
->
svÆ
;

1342 
	`ungë_tokí
(
tok
);

1343  
NULL
;

1344 
	}
}

1346 
	$compuã_∑ddög
(
off£t
, 
Æign
) {

1347  (
off£t
 % 
Æign
 == 0) ? 0 :álign - offset %álign;

1348 
	}
}

1350 
	$squash_u¬amed_°ru˘
(
Di˘
 *
di˘
, 
Ty≥
 *
u¬amed
, 
off£t
) {

1351 
Ve˘‹
 *
keys
 = 
	`di˘_keys
(
u¬amed
->
fõlds
);

1352 
i
 = 0; i < 
	`vec_Àn
(
keys
); i++) {

1353 *
«me
 = 
	`vec_gë
(
keys
, 
i
);

1354 
Ty≥
 *
t
 = 
	`c›y_ty≥
(
	`di˘_gë
(
u¬amed
->
fõlds
, 
«me
));

1355 
t
->
off£t
 += offset;

1356 
	`di˘_put
(
di˘
, 
«me
, 
t
);

1358 
	}
}

1360 
	$ªad_bôsize
(*
«me
, 
Ty≥
 *
ty
) {

1361 i‡(!
	`is_öây≥
(
ty
))

1362 
	`îr‹
("n⁄-öãgîÅy≥ c™nŸ bê®bôfõld: %s", 
	`ty2s
(
ty
));

1363 
	`îr‹
("bôfõld i†nŸ im∂emíãd: %s", 
	`ty2s
(
ty
));

1364 
Tokí
 *
tok
 = 
	`≥ek
();

1365 
r
 = 
	`ªad_öãx¥
();

1366 
maxsize
 = 
ty
->
köd
 =
KIND_BOOL
 ? 1 :Åy->
size
 * 8;

1367 i‡(
r
 < 0 || 
maxsize
 <Ñ)

1368 
	`îr‹t
(
tok
, "övÆid bôfõld sizêf‹ %s: %d", 
	`ty2s
(
ty
), 
r
);

1369 i‡(
r
 =0 && 
«me
 !
NULL
)

1370 
	`îr‹t
(
tok
, "zîo-width bôfõldÇìd†tÿbêu¬amed: %s", 
«me
);

1371  
r
;

1372 
	}
}

1374 
Ve˘‹
 *
	$ªad_ª˘y≥_fõlds_sub
() {

1375 
Ve˘‹
 *
r
 = 
	`make_ve˘‹
();

1377 i‡(
	`√xt_tokí
(
KSTATIC_ASSERT
)) {

1378 
	`ªad_°©ic_as£π
();

1381 i‡(!
	`is_ty≥
(
	`≥ek
()))

1383 
Ty≥
 *
ba£ty≥
 = 
	`ªad_de˛_•ec
(
NULL
);

1384 i‡(
ba£ty≥
->
köd
 =
KIND_STRUCT
 && 
	`√xt_tokí
(';')) {

1385 
	`vec_push
(
r
, 
	`make_∑ú
(
NULL
, 
ba£ty≥
));

1389 *
«me
 = 
NULL
;

1390 
Ty≥
 *
fõldty≥
 = 
	`ªad_de˛¨©‹
(&
«me
, 
ba£ty≥
, 
NULL
, 
DECL_PARAM_TYPEONLY
);

1391 
	`ísuª_nŸ_void
(
fõldty≥
);

1392 
fõldty≥
 = 
	`c›y_ty≥
(fieldtype);

1393 
fõldty≥
->
bôsize
 = 
	`√xt_tokí
(':'Ë? 
	`ªad_bôsize
(
«me
, fieldtype) : -1;

1394 
	`vec_push
(
r
, 
	`make_∑ú
(
«me
, 
fõldty≥
));

1395 i‡(
	`√xt_tokí
(','))

1397 i‡(
	`is_keyw‹d
(
	`≥ek
(), '}'))

1398 
	`w¨¡
(
	`≥ek
(), "missing ';'átÅheÉnd of fieldÜist");

1400 
	`ex≥˘
(';');

1404 
	`ex≥˘
('}');

1405  
r
;

1406 
	}
}

1408 
	$fix_ª˘y≥_ÊexibÀ_membî
(
Ve˘‹
 *
fõlds
) {

1409 
i
 = 0; i < 
	`vec_Àn
(
fõlds
); i++) {

1410 **
∑ú
 = 
	`vec_gë
(
fõlds
, 
i
);

1411 *
«me
 = 
∑ú
[0];

1412 
Ty≥
 *
ty
 = 
∑ú
[1];

1413 i‡(
ty
->
köd
 !
KIND_ARRAY
)

1415 i‡(
ty
->
Àn
 == -1) {

1416 i‡(
i
 !
	`vec_Àn
(
fõlds
) - 1)

1417 
	`îr‹
("ÊexibÀ membî may o∆yáµó∏a†thêœ° membî: %†%s", 
	`ty2s
(
ty
), 
«me
);

1418 i‡(
	`vec_Àn
(
fõlds
) == 1)

1419 
	`îr‹
("ÊexibÀ membî wôhÇÿŸhî fõlds: %†%s", 
	`ty2s
(
ty
), 
«me
);

1420 
ty
->
Àn
 = 0;

1421 
ty
->
size
 = 0;

1424 
	}
}

1426 
	$föish_bôfõld
(*
off
, *
bôoff
) {

1427 *
off
 +(*
bôoff
 + 7) / 8;

1428 *
bôoff
 = 0;

1429 
	}
}

1431 
Di˘
 *
	$upd©e_°ru˘_off£t
(*
rsize
, *
Æign
, 
Ve˘‹
 *
fõlds
) {

1432 
off
 = 0, 
bôoff
 = 0;

1433 
Di˘
 *
r
 = 
	`make_di˘
();

1434 
i
 = 0; i < 
	`vec_Àn
(
fõlds
); i++) {

1435 **
∑ú
 = 
	`vec_gë
(
fõlds
, 
i
);

1436 *
«me
 = 
∑ú
[0];

1437 
Ty≥
 *
fõldty≥
 = 
∑ú
[1];

1442 i‡(
«me
)

1443 *
Æign
 = 
	`MAX
(*Æign, 
fõldty≥
->align);

1445 i‡(
«me
 =
NULL
 && 
fõldty≥
->
köd
 =
KIND_STRUCT
) {

1447 
	`föish_bôfõld
(&
off
, &
bôoff
);

1448 
off
 +
	`compuã_∑ddög
(off, 
fõldty≥
->
Æign
);

1449 
	`squash_u¬amed_°ru˘
(
r
, 
fõldty≥
, 
off
);

1450 
off
 +
fõldty≥
->
size
;

1453 i‡(
fõldty≥
->
bôsize
 == 0) {

1456 
	`föish_bôfõld
(&
off
, &
bôoff
);

1457 
off
 +
	`compuã_∑ddög
(off, 
fõldty≥
->
Æign
);

1458 
bôoff
 = 0;

1461 i‡(
fõldty≥
->
bôsize
 > 0 && fieldtype->bitsize != -1) {

1462 
bô
 = 
fõldty≥
->
size
 * 8;

1463 
room
 = 
bô
 - (
off
 * 8 + 
bôoff
) % bit;

1464 i‡(
fõldty≥
->
bôsize
 <
room
) {

1465 
fõldty≥
->
off£t
 = 
off
;

1466 
fõldty≥
->
bôoff
 = bitoff;

1468 
	`föish_bôfõld
(&
off
, &
bôoff
);

1469 
off
 +
	`compuã_∑ddög
(off, 
fõldty≥
->
Æign
);

1470 
fõldty≥
->
off£t
 = 
off
;

1471 
fõldty≥
->
bôoff
 = 0;

1473 
bôoff
 +
fõldty≥
->
bôsize
;

1475 
	`föish_bôfõld
(&
off
, &
bôoff
);

1476 
off
 +
	`compuã_∑ddög
(off, 
fõldty≥
->
Æign
);

1477 
fõldty≥
->
off£t
 = 
off
;

1478 
off
 +
fõldty≥
->
size
;

1480 i‡(
«me
)

1481 
	`di˘_put
(
r
, 
«me
, 
fõldty≥
);

1483 
	`föish_bôfõld
(&
off
, &
bôoff
);

1484 *
rsize
 = 
off
 + 
	`compuã_∑ddög
(off, *
Æign
);

1485  
r
;

1486 
	}
}

1488 
Di˘
 *
	$upd©e_uni⁄_off£t
(*
rsize
, *
Æign
, 
Ve˘‹
 *
fõlds
) {

1489 
maxsize
 = 0;

1490 
Di˘
 *
r
 = 
	`make_di˘
();

1491 
i
 = 0; i < 
	`vec_Àn
(
fõlds
); i++) {

1492 **
∑ú
 = 
	`vec_gë
(
fõlds
, 
i
);

1493 *
«me
 = 
∑ú
[0];

1494 
Ty≥
 *
fõldty≥
 = 
∑ú
[1];

1495 
maxsize
 = 
	`MAX
(maxsize, 
fõldty≥
->
size
);

1496 *
Æign
 = 
	`MAX
(*Æign, 
fõldty≥
->align);

1497 i‡(
«me
 =
NULL
 && 
fõldty≥
->
köd
 =
KIND_STRUCT
) {

1498 
	`squash_u¬amed_°ru˘
(
r
, 
fõldty≥
, 0);

1501 
fõldty≥
->
off£t
 = 0;

1502 i‡(
fõldty≥
->
bôsize
 >= 0)

1503 
fõldty≥
->
bôoff
 = 0;

1504 i‡(
«me
)

1505 
	`di˘_put
(
r
, 
«me
, 
fõldty≥
);

1507 *
rsize
 = 
maxsize
 + 
	`compuã_∑ddög
(maxsize, *
Æign
);

1508  
r
;

1509 
	}
}

1511 
Di˘
 *
	$ªad_ª˘y≥_fõlds
(*
rsize
, *
Æign
, 
boﬁ
 
is_°ru˘
) {

1512 i‡(!
	`√xt_tokí
('{'))

1513  
NULL
;

1514 
Ve˘‹
 *
fõlds
 = 
	`ªad_ª˘y≥_fõlds_sub
();

1515 
	`fix_ª˘y≥_ÊexibÀ_membî
(
fõlds
);

1516 i‡(
is_°ru˘
)

1517  
	`upd©e_°ru˘_off£t
(
rsize
, 
Æign
, 
fõlds
);

1518  
	`upd©e_uni⁄_off£t
(
rsize
, 
Æign
, 
fõlds
);

1519 
	}
}

1521 
Ty≥
 *
	$ªad_ª˘y≥_def
(
boﬁ
 
is_°ru˘
) {

1522 *
èg
 = 
	`ªad_ª˘y≥_èg
();

1523 
Ty≥
 *
r
;

1524 i‡(
èg
) {

1525 
r
 = 
	`m≠_gë
(
ègs
, 
èg
);

1526 i‡(
r
 && (r->
köd
 =
KIND_ENUM
 ||Ñ->
is_°ru˘
 != is_struct))

1527 
	`îr‹
("de˛¨©i⁄†o‡%†d€†nŸ m©ch", 
èg
);

1528 i‡(!
r
) {

1529 
r
 = 
	`make_ª˘y≥
(
is_°ru˘
);

1530 
	`m≠_put
(
ègs
, 
èg
, 
r
);

1533 
r
 = 
	`make_ª˘y≥
(
is_°ru˘
);

1535 
size
 = 0, 
Æign
 = 1;

1536 
Di˘
 *
fõlds
 = 
	`ªad_ª˘y≥_fõlds
(&
size
, &
Æign
, 
is_°ru˘
);

1537 
r
->
Æign
 =álign;

1538 i‡(
fõlds
) {

1539 
r
->
fõlds
 = fields;

1540 
r
->
size
 = size;

1542  
r
;

1543 
	}
}

1545 
Ty≥
 *
	$ªad_°ru˘_def
() {

1546  
	`ªad_ª˘y≥_def
(
åue
);

1547 
	}
}

1549 
Ty≥
 *
	$ªad_uni⁄_def
() {

1550  
	`ªad_ª˘y≥_def
(
Ál£
);

1551 
	}
}

1557 
Ty≥
 *
	$ªad_íum_def
() {

1558 *
èg
 = 
NULL
;

1559 
Tokí
 *
tok
 = 
	`gë
();

1563 i‡(
tok
->
köd
 =
TIDENT
) {

1564 
èg
 = 
tok
->
svÆ
;

1565 
tok
 = 
	`gë
();

1567 i‡(
èg
) {

1568 
Ty≥
 *
ty
 = 
	`m≠_gë
(
ègs
, 
èg
);

1569 i‡(
ty
 &&Åy->
köd
 !
KIND_ENUM
)

1570 
	`îr‹t
(
tok
, "de˛¨©i⁄†o‡%†d€†nŸ m©ch", 
èg
);

1572 i‡(!
	`is_keyw‹d
(
tok
, '{')) {

1573 i‡(!
èg
 || !
	`m≠_gë
(
ègs
,Åag))

1574 
	`îr‹t
(
tok
, "íumÅag %†i†nŸ deföed", 
èg
);

1575 
	`ungë_tokí
(
tok
);

1576  
ty≥_öt
;

1578 i‡(
èg
)

1579 
	`m≠_put
(
ègs
, 
èg
, 
ty≥_íum
);

1581 
vÆ
 = 0;

1583 
tok
 = 
	`gë
();

1584 i‡(
	`is_keyw‹d
(
tok
, '}'))

1586 i‡(
tok
->
köd
 !
TIDENT
)

1587 
	`îr‹t
(
tok
, "idítifõ∏ex≥˘ed, buàgŸ %s", 
	`tok2s
(tok));

1588 *
«me
 = 
tok
->
svÆ
;

1590 i‡(
	`√xt_tokí
('='))

1591 
vÆ
 = 
	`ªad_öãx¥
();

1592 
Node
 *
c⁄°vÆ
 = 
	`a°_öây≥
(
ty≥_öt
, 
vÆ
++);

1593 
	`m≠_put
(
	`ív
(), 
«me
, 
c⁄°vÆ
);

1594 i‡(
	`√xt_tokí
(','))

1596 i‡(
	`√xt_tokí
('}'))

1598 
	`îr‹t
(
	`≥ek
(), "',' o∏'}'Éx≥˘ed, buàgŸ %s", 
	`tok2s
(peek()));

1600  
ty≥_öt
;

1601 
	}
}

1607 
	$assign_°rög
(
Ve˘‹
 *
öôs
, 
Ty≥
 *
ty
, *
p
, 
off
) {

1608 i‡(
ty
->
Àn
 == -1)

1609 
ty
->
Àn
 =Åy->
size
 = 
	`°æí
(
p
) + 1;

1610 
i
 = 0;

1611 ; 
i
 < 
ty
->
Àn
 && *
p
; i++)

1612 
	`vec_push
(
öôs
, 
	`a°_öô
(
	`a°_öây≥
(
ty≥_ch¨
, *
p
++),Åy≥_ch¨, 
off
 + 
i
));

1613 ; 
i
 < 
ty
->
Àn
; i++)

1614 
	`vec_push
(
öôs
, 
	`a°_öô
(
	`a°_öây≥
(
ty≥_ch¨
, 0),Åy≥_ch¨, 
off
 + 
i
));

1615 
	}
}

1617 
boﬁ
 
	$maybe_ªad_bø˚
() {

1618  
	`√xt_tokí
('{');

1619 
	}
}

1621 
	$maybe_skù_comma
() {

1622 
	`√xt_tokí
(',');

1623 
	}
}

1625 
	$skù_to_bø˚
() {

1627 i‡(
	`√xt_tokí
('}'))

1629 i‡(
	`√xt_tokí
('.')) {

1630 
	`gë
();

1631 
	`ex≥˘
('=');

1633 
Tokí
 *
tok
 = 
	`≥ek
();

1634 
Node
 *
ign‹e
 = 
	`ªad_assignmít_ex¥
();

1635 i‡(!
ign‹e
)

1637 
	`w¨¡
(
tok
, "ex˚ssivêöôülizî: %s", 
	`node2s
(
ign‹e
));

1638 
	`maybe_skù_comma
();

1640 
	}
}

1642 
	$ªad_öôülizî_ñem
(
Ve˘‹
 *
öôs
, 
Ty≥
 *
ty
, 
off
, 
boﬁ
 
desig«ãd
) {

1643 
	`√xt_tokí
('=');

1644 i‡(
ty
->
köd
 =
KIND_ARRAY
 ||Åy->köd =
KIND_STRUCT
) {

1645 
	`ªad_öôülizî_li°
(
öôs
, 
ty
, 
off
, 
desig«ãd
);

1646 } i‡(
	`√xt_tokí
('{')) {

1647 
	`ªad_öôülizî_ñem
(
öôs
, 
ty
, 
off
, 
åue
);

1648 
	`ex≥˘
('}');

1650 
Node
 *
ex¥
 = 
	`c⁄v
(
	`ªad_assignmít_ex¥
());

1651 
	`ísuª_assig«bÀ
(
ty
, 
ex¥
->ty);

1652 
	`vec_push
(
öôs
, 
	`a°_öô
(
ex¥
, 
ty
, 
off
));

1654 
	}
}

1656 
	$comp_öô
(c⁄° *
p
, c⁄° *
q
) {

1657 
x
 = (*(
Node
 **)
p
)->
öôoff
;

1658 
y
 = (*(
Node
 **)
q
)->
öôoff
;

1659 i‡(
x
 < 
y
)  -1;

1660 i‡(
x
 > 
y
)  1;

1662 
	}
}

1664 
	$s‹t_öôs
(
Ve˘‹
 *
öôs
) {

1665 
	`qs‹t
(
	`vec_body
(
öôs
), 
	`vec_Àn
(öôs), (*), 
comp_öô
);

1666 
	}
}

1668 
	$ªad_°ru˘_öôülizî_sub
(
Ve˘‹
 *
öôs
, 
Ty≥
 *
ty
, 
off
, 
boﬁ
 
desig«ãd
) {

1669 
boﬁ
 
has_bø˚
 = 
	`maybe_ªad_bø˚
();

1670 
Ve˘‹
 *
keys
 = 
	`di˘_keys
(
ty
->
fõlds
);

1671 
i
 = 0;

1673 
Tokí
 *
tok
 = 
	`gë
();

1674 i‡(
	`is_keyw‹d
(
tok
, '}')) {

1675 i‡(!
has_bø˚
)

1676 
	`ungë_tokí
(
tok
);

1679 *
fõld«me
;

1680 
Ty≥
 *
fõldty≥
;

1681 i‡((
	`is_keyw‹d
(
tok
, '.'Ë|| is_keyw‹d—ok, '[')Ë&& !
has_bø˚
 && !
desig«ãd
) {

1682 
	`ungë_tokí
(
tok
);

1685 i‡(
	`is_keyw‹d
(
tok
, '.')) {

1686 
tok
 = 
	`gë
();

1687 i‡(!
tok
 ||Åok->
köd
 !
TIDENT
)

1688 
	`îr‹t
(
tok
, "mÆf‹med desgö©ed inôülizî: %s", 
	`tok2s
(tok));

1689 
fõld«me
 = 
tok
->
svÆ
;

1690 
fõldty≥
 = 
	`di˘_gë
(
ty
->
fõlds
, 
fõld«me
);

1691 i‡(!
fõldty≥
)

1692 
	`îr‹t
(
tok
, "fõld d€†nŸÉxi°: %s", 
	`tok2s
(tok));

1693 
keys
 = 
	`di˘_keys
(
ty
->
fõlds
);

1694 
i
 = 0;

1695 
i
 < 
	`vec_Àn
(
keys
)) {

1696 *
s
 = 
	`vec_gë
(
keys
, 
i
++);

1697 i‡(
	`°rcmp
(
fõld«me
, 
s
) == 0)

1700 
desig«ãd
 = 
åue
;

1702 
	`ungë_tokí
(
tok
);

1703 i‡(
i
 =
	`vec_Àn
(
keys
))

1705 
fõld«me
 = 
	`vec_gë
(
keys
, 
i
++);

1706 
fõldty≥
 = 
	`di˘_gë
(
ty
->
fõlds
, 
fõld«me
);

1708 
	`ªad_öôülizî_ñem
(
öôs
, 
fõldty≥
, 
off
 + fõldty≥->
off£t
, 
desig«ãd
);

1709 
	`maybe_skù_comma
();

1710 
desig«ãd
 = 
Ál£
;

1711 i‡(!
ty
->
is_°ru˘
)

1714 i‡(
has_bø˚
)

1715 
	`skù_to_bø˚
();

1716 
	}
}

1718 
	$ªad_°ru˘_öôülizî
(
Ve˘‹
 *
öôs
, 
Ty≥
 *
ty
, 
off
, 
boﬁ
 
desig«ãd
) {

1719 
	`ªad_°ru˘_öôülizî_sub
(
öôs
, 
ty
, 
off
, 
desig«ãd
);

1720 
	`s‹t_öôs
(
öôs
);

1721 
	}
}

1723 
	$ªad_¨øy_öôülizî_sub
(
Ve˘‹
 *
öôs
, 
Ty≥
 *
ty
, 
off
, 
boﬁ
 
desig«ãd
) {

1724 
boﬁ
 
has_bø˚
 = 
	`maybe_ªad_bø˚
();

1725 
boﬁ
 
ÊexibÀ
 = (
ty
->
Àn
 <= 0 ||Åy->len == -1);

1726 
ñemsize
 = 
ty
->
±r
->
size
;

1727 
i
;

1728 
i
 = 0; 
ÊexibÀ
 || i < 
ty
->
Àn
; i++) {

1729 
Tokí
 *
tok
 = 
	`gë
();

1730 i‡(
	`is_keyw‹d
(
tok
, '}')) {

1731 i‡(!
has_bø˚
)

1732 
	`ungë_tokí
(
tok
);

1733 
föish
;

1735 i‡((
	`is_keyw‹d
(
tok
, '.'Ë|| is_keyw‹d—ok, '[')Ë&& !
has_bø˚
 && !
desig«ãd
) {

1736 
	`ungë_tokí
(
tok
);

1739 i‡(
	`is_keyw‹d
(
tok
, '[')) {

1740 
Tokí
 *
tok
 = 
	`≥ek
();

1741 
idx
 = 
	`ªad_öãx¥
();

1742 i‡(
idx
 < 0 || (!
ÊexibÀ
 && 
ty
->
Àn
 <= idx))

1743 
	`îr‹t
(
tok
, "¨øy desig«t‹Éx˚ed†¨øy bounds: %d", 
idx
);

1744 
i
 = 
idx
;

1745 
	`ex≥˘
(']');

1746 
desig«ãd
 = 
åue
;

1748 
	`ungë_tokí
(
tok
);

1750 
	`ªad_öôülizî_ñem
(
öôs
, 
ty
->
±r
, 
off
 + 
ñemsize
 * 
i
, 
desig«ãd
);

1751 
	`maybe_skù_comma
();

1752 
desig«ãd
 = 
Ál£
;

1754 i‡(
has_bø˚
)

1755 
	`skù_to_bø˚
();

1756 
föish
:

1757 i‡(
ty
->
Àn
 == -1) {

1758 
ty
->
Àn
 = 
i
;

1759 
ty
->
size
 = 
ñemsize
 * 
i
;

1761 
	}
}

1763 
	$ªad_¨øy_öôülizî
(
Ve˘‹
 *
öôs
, 
Ty≥
 *
ty
, 
off
, 
boﬁ
 
desig«ãd
) {

1764 
	`ªad_¨øy_öôülizî_sub
(
öôs
, 
ty
, 
off
, 
desig«ãd
);

1765 
	`s‹t_öôs
(
öôs
);

1766 
	}
}

1768 
	$ªad_öôülizî_li°
(
Ve˘‹
 *
öôs
, 
Ty≥
 *
ty
, 
off
, 
boﬁ
 
desig«ãd
) {

1769 
Tokí
 *
tok
 = 
	`gë
();

1770 i‡(
	`is_°rög
(
ty
)) {

1771 i‡(
tok
->
köd
 =
TSTRING
) {

1772 
	`assign_°rög
(
öôs
, 
ty
, 
tok
->
svÆ
, 
off
);

1775 i‡(
	`is_keyw‹d
(
tok
, '{'Ë&& 
	`≥ek
()->
köd
 =
TSTRING
) {

1776 
tok
 = 
	`gë
();

1777 
	`assign_°rög
(
öôs
, 
ty
, 
tok
->
svÆ
, 
off
);

1778 
	`ex≥˘
('}');

1782 
	`ungë_tokí
(
tok
);

1783 i‡(
ty
->
köd
 =
KIND_ARRAY
) {

1784 
	`ªad_¨øy_öôülizî
(
öôs
, 
ty
, 
off
, 
desig«ãd
);

1785 } i‡(
ty
->
köd
 =
KIND_STRUCT
) {

1786 
	`ªad_°ru˘_öôülizî
(
öôs
, 
ty
, 
off
, 
desig«ãd
);

1788 
Ty≥
 *
¨øyty≥
 = 
	`make_¨øy_ty≥
(
ty
, 1);

1789 
	`ªad_¨øy_öôülizî
(
öôs
, 
¨øyty≥
, 
off
, 
desig«ãd
);

1791 
	}
}

1793 
Ve˘‹
 *
	$ªad_de˛_öô
(
Ty≥
 *
ty
) {

1794 
Ve˘‹
 *
r
 = 
	`make_ve˘‹
();

1795 i‡(
	`is_keyw‹d
(
	`≥ek
(), '{'Ë|| 
	`is_°rög
(
ty
)) {

1796 
	`ªad_öôülizî_li°
(
r
, 
ty
, 0, 
Ál£
);

1798 
Node
 *
öô
 = 
	`c⁄v
(
	`ªad_assignmít_ex¥
());

1799 i‡(
	`is_¨ôhty≥
(
öô
->
ty
Ë&& inô->ty->
köd
 !=Åy->kind)

1800 
öô
 = 
	`a°_c⁄v
(
ty
, init);

1801 
	`vec_push
(
r
, 
	`a°_öô
(
öô
, 
ty
, 0));

1803  
r
;

1804 
	}
}

1825 
Ty≥
 *
	$ªad_func_∑øm
(**
«me
, 
boﬁ
 
›ti⁄Æ
) {

1826 
s˛ass
 = 0;

1827 
Ty≥
 *
ba£ty
 = 
ty≥_öt
;

1828 i‡(
	`is_ty≥
(
	`≥ek
())) {

1829 
ba£ty
 = 
	`ªad_de˛_•ec
(&
s˛ass
);

1830 } i‡(
›ti⁄Æ
) {

1831 
	`îr‹t
(
	`≥ek
(), "ty≥Éx≥˘ed, buàgŸ %s", 
	`tok2s
(peek()));

1833 
Ty≥
 *
ty
 = 
	`ªad_de˛¨©‹
(
«me
, 
ba£ty
, 
NULL
, 
›ti⁄Æ
 ? 
DECL_PARAM_TYPEONLY
 : 
DECL_PARAM
);

1836 i‡(
ty
->
köd
 =
KIND_ARRAY
)

1837  
	`make_±r_ty≥
(
ty
->
±r
);

1840 i‡(
ty
->
köd
 =
KIND_FUNC
)

1841  
	`make_±r_ty≥
(
ty
);

1842  
ty
;

1843 
	}
}

1846 
	$ªad_de˛¨©‹_∑øms
(
Ve˘‹
 *
ty≥s
, Ve˘‹ *
v¨s
, 
boﬁ
 *
ñlùsis
) {

1847 
boﬁ
 
ty≥⁄ly
 = !
v¨s
;

1848 *
ñlùsis
 = 
Ál£
;

1850 
Tokí
 *
tok
 = 
	`≥ek
();

1851 i‡(
	`√xt_tokí
(
KELLIPSIS
)) {

1852 i‡(
	`vec_Àn
(
ty≥s
) == 0)

1853 
	`îr‹t
(
tok
, "atÜeast oneÖarameter isÑequired before \"...\"");

1854 
	`ex≥˘
(')');

1855 *
ñlùsis
 = 
åue
;

1858 *
«me
;

1859 
Ty≥
 *
ty
 = 
	`ªad_func_∑øm
(&
«me
, 
ty≥⁄ly
);

1860 
	`ísuª_nŸ_void
(
ty
);

1861 
	`vec_push
(
ty≥s
, 
ty
);

1862 i‡(!
ty≥⁄ly
)

1863 
	`vec_push
(
v¨s
, 
	`a°_lv¨
(
ty
, 
«me
));

1864 
tok
 = 
	`gë
();

1865 i‡(
	`is_keyw‹d
(
tok
, ')'))

1867 i‡(!
	`is_keyw‹d
(
tok
, ','))

1868 
	`îr‹t
(
tok
, "comm®ex≥˘ed, buàgŸ %s", 
	`tok2s
(tok));

1870 
	}
}

1873 
	$ªad_de˛¨©‹_∑øms_ﬁd°yÀ
(
Ve˘‹
 *
v¨s
) {

1875 
Tokí
 *
tok
 = 
	`gë
();

1876 i‡(
tok
->
köd
 !
TIDENT
)

1877 
	`îr‹t
(
tok
, "idítifõ∏ex≥˘ed, buàgŸ %s", 
	`tok2s
(tok));

1878 
	`vec_push
(
v¨s
, 
	`a°_lv¨
(
ty≥_öt
, 
tok
->
svÆ
));

1879 i‡(
	`√xt_tokí
(')'))

1881 i‡(!
	`√xt_tokí
(','))

1882 
	`îr‹t
(
tok
, "comm®ex≥˘ed, buàgŸ %s", 
	`tok2s
(
	`gë
()));

1884 
	}
}

1886 
Ty≥
 *
	$ªad_func_∑øm_li°
(
Ve˘‹
 *
∑ømv¨s
, 
Ty≥
 *
ªây≥
) {

1889 
Tokí
 *
tok
 = 
	`gë
();

1890 i‡(
	`is_keyw‹d
(
tok
, 
KVOID
Ë&& 
	`√xt_tokí
(')'))

1891  
	`make_func_ty≥
(
ªây≥
, 
	`make_ve˘‹
(), 
Ál£
, false);

1897 i‡(
	`is_keyw‹d
(
tok
, ')'))

1898  
	`make_func_ty≥
(
ªây≥
, 
	`make_ve˘‹
(), 
åue
,Årue);

1899 
	`ungë_tokí
(
tok
);

1901 
Tokí
 *
tok2
 = 
	`≥ek
();

1902 i‡(
	`√xt_tokí
(
KELLIPSIS
))

1903 
	`îr‹t
(
tok2
, "atÜeast oneÖarameter isÑequired before \"...\"");

1904 i‡(
	`is_ty≥
(
	`≥ek
())) {

1905 
boﬁ
 
ñlùsis
;

1906 
Ve˘‹
 *
∑ømty≥s
 = 
	`make_ve˘‹
();

1907 
	`ªad_de˛¨©‹_∑øms
(
∑ømty≥s
, 
∑ømv¨s
, &
ñlùsis
);

1908  
	`make_func_ty≥
(
ªây≥
, 
∑ømty≥s
, 
ñlùsis
, 
Ál£
);

1910 i‡(!
∑ømv¨s
)

1911 
	`îr‹t
(
tok
, "invalid function definition");

1912 
	`ªad_de˛¨©‹_∑øms_ﬁd°yÀ
(
∑ømv¨s
);

1913 
Ve˘‹
 *
∑ømty≥s
 = 
	`make_ve˘‹
();

1914 
i
 = 0; i < 
	`vec_Àn
(
∑ømv¨s
); i++)

1915 
	`vec_push
(
∑ømty≥s
, 
ty≥_öt
);

1916  
	`make_func_ty≥
(
ªây≥
, 
∑ømty≥s
, 
Ál£
, 
åue
);

1917 
	}
}

1919 
Ty≥
 *
	$ªad_de˛¨©‹_¨øy
(
Ty≥
 *
ba£ty
) {

1920 
Àn
;

1921 i‡(
	`√xt_tokí
(']')) {

1922 
Àn
 = -1;

1924 
Àn
 = 
	`ªad_öãx¥
();

1925 
	`ex≥˘
(']');

1927 
Tokí
 *
tok
 = 
	`≥ek
();

1928 
Ty≥
 *
t
 = 
	`ªad_de˛¨©‹_èû
(
ba£ty
, 
NULL
);

1929 i‡(
t
->
köd
 =
KIND_FUNC
)

1930 
	`îr‹t
(
tok
, "array of functions");

1931  
	`make_¨øy_ty≥
(
t
, 
Àn
);

1932 
	}
}

1934 
Ty≥
 *
	$ªad_de˛¨©‹_func
(
Ty≥
 *
ba£ty
, 
Ve˘‹
 *
∑øm
) {

1935 i‡(
ba£ty
->
köd
 =
KIND_FUNC
)

1936 
	`îr‹
("functionÑeturningá function");

1937 i‡(
ba£ty
->
köd
 =
KIND_ARRAY
)

1938 
	`îr‹
("functionÑeturningánárray");

1939  
	`ªad_func_∑øm_li°
(
∑øm
, 
ba£ty
);

1940 
	}
}

1942 
Ty≥
 *
	$ªad_de˛¨©‹_èû
(
Ty≥
 *
ba£ty
, 
Ve˘‹
 *
∑øms
) {

1943 i‡(
	`√xt_tokí
('['))

1944  
	`ªad_de˛¨©‹_¨øy
(
ba£ty
);

1945 i‡(
	`√xt_tokí
('('))

1946  
	`ªad_de˛¨©‹_func
(
ba£ty
, 
∑øms
);

1947  
ba£ty
;

1948 
	}
}

1950 
	$skù_ty≥_quÆifõrs
() {

1951 
	`√xt_tokí
(
KCONST
Ë||Çext_tokí(
KVOLATILE
Ë||Çext_tokí(
KRESTRICT
));

1952 
	}
}

1955 
Ty≥
 *
	$ªad_de˛¨©‹
(**
∫ame
, 
Ty≥
 *
ba£ty
, 
Ve˘‹
 *
∑øms
, 
˘x
) {

1956 i‡(
	`√xt_tokí
('(')) {

1959 i‡(
	`is_ty≥
(
	`≥ek
()))

1960  
	`ªad_de˛¨©‹_func
(
ba£ty
, 
∑øms
);

1967 
Ty≥
 *
°ub
 = 
	`make_°ub_ty≥
();

1968 
Ty≥
 *
t
 = 
	`ªad_de˛¨©‹
(
∫ame
, 
°ub
, 
∑øms
, 
˘x
);

1969 
	`ex≥˘
(')');

1970 *
°ub
 = *
	`ªad_de˛¨©‹_èû
(
ba£ty
, 
∑øms
);

1971  
t
;

1973 i‡(
	`√xt_tokí
('*')) {

1974 
	`skù_ty≥_quÆifõrs
();

1975  
	`ªad_de˛¨©‹
(
∫ame
, 
	`make_±r_ty≥
(
ba£ty
), 
∑øms
, 
˘x
);

1977 
Tokí
 *
tok
 = 
	`gë
();

1978 i‡(
tok
->
köd
 =
TIDENT
) {

1979 i‡(
˘x
 =
DECL_CAST
)

1980 
	`îr‹t
(
tok
, "idítifõ∏i†nŸÉx≥˘ed, buàgŸ %s", 
	`tok2s
(tok));

1981 *
∫ame
 = 
tok
->
svÆ
;

1982  
	`ªad_de˛¨©‹_èû
(
ba£ty
, 
∑øms
);

1984 i‡(
˘x
 =
DECL_BODY
 || ctx =
DECL_PARAM
)

1985 
	`îr‹t
(
tok
, "idítifõr, ( o∏*áªÉx≥˘ed, buàgŸ %s", 
	`tok2s
(tok));

1986 
	`ungë_tokí
(
tok
);

1987  
	`ªad_de˛¨©‹_èû
(
ba£ty
, 
∑øms
);

1988 
	}
}

1996 
Ty≥
 *
	$ªad_ab°ø˘_de˛¨©‹
(
Ty≥
 *
ba£ty
) {

1997  
	`ªad_de˛¨©‹
(
NULL
, 
ba£ty
, NULL, 
DECL_CAST
);

1998 
	}
}

2004 
Ty≥
 *
	$ªad_ty≥of
() {

2005 
	`ex≥˘
('(');

2006 
Ty≥
 *
r
 = 
	`is_ty≥
(
	`≥ek
())

2007 ? 
	`ªad_ˇ°_ty≥
()

2008 : 
	`ªad_comma_ex¥
()->
ty
;

2009 
	`ex≥˘
(')');

2010  
r
;

2011 
	}
}

2017 
boﬁ
 
	$is_powîo·wo
(
x
) {

2019  (
x
 <0Ë? 
Ál£
 : !(x & (x - 1));

2020 
	}
}

2022 
	$ªad_Æig«s
() {

2025 
	`ex≥˘
('(');

2026 
r
 = 
	`is_ty≥
(
	`≥ek
())

2027 ? 
	`ªad_ˇ°_ty≥
()->
Æign


2028 : 
	`ªad_öãx¥
();

2029 
	`ex≥˘
(')');

2030  
r
;

2031 
	}
}

2033 
Ty≥
 *
	$ªad_de˛_•ec
(*
rs˛ass
) {

2034 
s˛ass
 = 0;

2035 
Tokí
 *
tok
 = 
	`≥ek
();

2036 i‡(!
	`is_ty≥
(
tok
))

2037 
	`îr‹t
(
tok
, "ty≥Çamêex≥˘ed, buàgŸ %s", 
	`tok2s
(tok));

2039 
Ty≥
 *
u£πy≥
 = 
NULL
;

2040 íum { 
kvoid
 = 1, 
kboﬁ
, 
kch¨
, 
köt
, 
kÊﬂt
, 
kdoubÀ
 } 
köd
 = 0;

2041 íum { 
ksh‹t
 = 1, 
kl⁄g
, 
kŒ⁄g
 } 
size
 = 0;

2042 íum { 
ksig√d
 = 1, 
kunsig√d
 } 
sig
 = 0;

2043 
Æign
 = -1;

2046 
tok
 = 
	`gë
();

2047 i‡(
tok
->
köd
 =
EOF
)

2048 
	`îr‹
("prematureÉnd of input");

2049 i‡(
köd
 =0 && 
tok
->köd =
TIDENT
 && !
u£πy≥
) {

2050 
Ty≥
 *
def
 = 
	`gë_ty≥def
(
tok
->
svÆ
);

2051 i‡(
def
) {

2052 i‡(
u£πy≥
Ë
îr
;

2053 
u£πy≥
 = 
def
;

2054 
îrcheck
;

2057 i‡(
tok
->
köd
 !
TKEYWORD
) {

2058 
	`ungë_tokí
(
tok
);

2061 
tok
->
id
) {

2062 
KTYPEDEF
: i‡(
s˛ass
Ë
îr
; s˛as†
S_TYPEDEF
; ;

2063 
KEXTERN
: i‡(
s˛ass
Ë
îr
; s˛as†
S_EXTERN
; ;

2064 
KSTATIC
: i‡(
s˛ass
Ë
îr
; s˛as†
S_STATIC
; ;

2065 
KAUTO
: i‡(
s˛ass
Ë
îr
; s˛as†
S_AUTO
; ;

2066 
KREGISTER
: i‡(
s˛ass
Ë
îr
; s˛as†
S_REGISTER
; ;

2067 
KCONST
: ;

2068 
KVOLATILE
: ;

2069 
KINLINE
: ;

2070 
KNORETURN
: ;

2071 
KVOID
: i‡(
köd
Ë
îr
; köd = 
kvoid
; ;

2072 
KBOOL
: i‡(
köd
Ë
îr
; köd = 
kboﬁ
; ;

2073 
KCHAR
: i‡(
köd
Ë
îr
; köd = 
kch¨
; ;

2074 
KINT
: i‡(
köd
Ë
îr
; köd = 
köt
; ;

2075 
KFLOAT
: i‡(
köd
Ë
îr
; köd = 
kÊﬂt
; ;

2076 
KDOUBLE
: i‡(
köd
Ë
îr
; köd = 
kdoubÀ
; ;

2077 
KSIGNED
: i‡(
sig
Ë
îr
; sig = 
ksig√d
; ;

2078 
KUNSIGNED
: i‡(
sig
Ë
îr
; sig = 
kunsig√d
; ;

2079 
KSHORT
: i‡(
size
Ë
îr
; sizê
ksh‹t
; ;

2080 
KSTRUCT
: i‡(
u£πy≥
Ë
îr
; u£πy≥ = 
	`ªad_°ru˘_def
(); ;

2081 
KUNION
: i‡(
u£πy≥
Ë
îr
; u£πy≥ = 
	`ªad_uni⁄_def
(); ;

2082 
KENUM
: i‡(
u£πy≥
Ë
îr
; u£πy≥ = 
	`ªad_íum_def
(); ;

2083 
KALIGNAS
: {

2084 
vÆ
 = 
	`ªad_Æig«s
();

2085 i‡(
vÆ
 < 0)

2086 
	`îr‹t
(
tok
, "√g©ivêÆignmít: %d", 
vÆ
);

2088 i‡(
vÆ
 == 0)

2090 i‡(
Æign
 =-1 || 
vÆ
 <álign)

2091 
Æign
 = 
vÆ
;

2094 
KLONG
: {

2095 i‡(
size
 =0Ësizê
kl⁄g
;

2096 i‡(
size
 =
kl⁄g
Ësizê
kŒ⁄g
;

2097 
îr
;

2100 
KTYPEOF
: {

2101 i‡(
u£πy≥
Ë
îr
;

2102 
u£πy≥
 = 
	`ªad_ty≥of
();

2106 
	`ungë_tokí
(
tok
);

2107 
d⁄e
;

2109 
îrcheck
:

2110 i‡(
köd
 =
kboﬁ
 && (
size
 !0 && 
sig
 != 0))

2111 
îr
;

2112 i‡(
size
 =
ksh‹t
 && (
köd
 !0 && köd !
köt
))

2113 
îr
;

2114 i‡(
size
 =
kl⁄g
 && (
köd
 !0 && köd !
köt
 && köd !
kdoubÀ
))

2115 
îr
;

2116 i‡(
sig
 !0 && (
köd
 =
kvoid
 || köd =
kÊﬂt
 || köd =
kdoubÀ
))

2117 
îr
;

2118 i‡(
u£πy≥
 && (
köd
 !0 || 
size
 !0 || 
sig
 != 0))

2119 
îr
;

2121 
d⁄e
:

2122 i‡(
rs˛ass
)

2123 *
rs˛ass
 = 
s˛ass
;

2124 i‡(
u£πy≥
)

2125  
u£πy≥
;

2126 i‡(
Æign
 !-1 && !
	`is_powîo·wo
(align))

2127 
	`îr‹t
(
tok
, "Æignmíàmu° bêpowî o‡2, buàgŸ %d", 
Æign
);

2128 
Ty≥
 *
ty
;

2129 
köd
) {

2130 
kvoid
: 
ty
 = 
ty≥_void
; 
íd
;

2131 
kboﬁ
: 
ty
 = 
	`make_numty≥
(
KIND_BOOL
, 
Ál£
); 
íd
;

2132 
kch¨
: 
ty
 = 
	`make_numty≥
(
KIND_CHAR
, 
sig
 =
kunsig√d
); 
íd
;

2134 
kÊﬂt
: 
ty
 = 
	`make_numty≥
(
KIND_FLOAT
, 
Ál£
); 
íd
;

2135 
kdoubÀ
: 
ty
 = 
	`make_numty≥
(
size
 =
kl⁄g
 ? 
KIND_LDOUBLE
 : 
KIND_DOUBLE
, 
Ál£
); 
íd
;

2137 
kÊﬂt
: 
ty
 = 
	`make_numty≥
(
KIND_INT
, 
Ál£
); 
íd
;

2138 
kdoubÀ
: 
ty
 = 
	`make_numty≥
(
KIND_INT
, 
Ál£
); 
íd
;

2142 
size
) {

2143 
ksh‹t
: 
ty
 = 
	`make_numty≥
(
KIND_SHORT
, 
sig
 =
kunsig√d
); 
íd
;

2144 
kl⁄g
: 
ty
 = 
	`make_numty≥
(
KIND_LONG
, 
sig
 =
kunsig√d
); 
íd
;

2145 
kŒ⁄g
: 
ty
 = 
	`make_numty≥
(
KIND_LLONG
, 
sig
 =
kunsig√d
); 
íd
;

2146 : 
ty
 = 
	`make_numty≥
(
KIND_INT
, 
sig
 =
kunsig√d
); 
íd
;

2148 
	`îr‹
("öã∫ÆÉº‹: köd: %d, size: %d", 
köd
, 
size
);

2149 
íd
:

2150 i‡(
Æign
 != -1)

2151 
ty
->
Æign
 =álign;

2152  
ty
;

2153 
îr
:

2154 
	`îr‹t
(
tok
, "ty≥ mism©ch: %s", 
	`tok2s
(tok));

2155 
	}
}

2161 
	$ªad_°©ic_loˇl_v¨
(
Ty≥
 *
ty
, *
«me
) {

2162 
Node
 *
v¨
 = 
	`a°_°©ic_lv¨
(
ty
, 
«me
);

2163 
Ve˘‹
 *
öô
 = 
NULL
;

2164 i‡(
	`√xt_tokí
('=')) {

2165 
M≠
 *
‹ig
 = 
loˇÀnv
;

2166 
loˇÀnv
 = 
NULL
;

2167 
öô
 = 
	`ªad_de˛_öô
(
ty
);

2168 
loˇÀnv
 = 
‹ig
;

2170 
	`vec_push
(
t›Àvñs
, 
	`a°_de˛
(
v¨
, 
öô
));

2171 
	}
}

2173 
Ty≥
 *
	$ªad_de˛_•ec_›t
(*
s˛ass
) {

2174 i‡(
	`is_ty≥
(
	`≥ek
()))

2175  
	`ªad_de˛_•ec
(
s˛ass
);

2176 
	`w¨¡
(
	`≥ek
(), "type specifier missing,ássuming int");

2177  
ty≥_öt
;

2178 
	}
}

2180 
	$ªad_de˛
(
Ve˘‹
 *
block
, 
boﬁ
 
isglobÆ
) {

2181 
s˛ass
 = 0;

2182 
Ty≥
 *
ba£ty≥
 = 
	`ªad_de˛_•ec_›t
(&
s˛ass
);

2183 i‡(
	`√xt_tokí
(';'))

2186 *
«me
 = 
NULL
;

2187 
Ty≥
 *
ty
 = 
	`ªad_de˛¨©‹
(&
«me
, 
	`c›y_öcom∂ëe_ty≥
(
ba£ty≥
), 
NULL
, 
DECL_BODY
);

2188 
ty
->
is°©ic
 = (
s˛ass
 =
S_STATIC
);

2189 i‡(
s˛ass
 =
S_TYPEDEF
) {

2190 
	`a°_ty≥def
(
ty
, 
«me
);

2191 } i‡(
ty
->
is°©ic
 && !
isglobÆ
) {

2192 
	`ísuª_nŸ_void
(
ty
);

2193 
	`ªad_°©ic_loˇl_v¨
(
ty
, 
«me
);

2195 
	`ísuª_nŸ_void
(
ty
);

2196 
Node
 *
v¨
 = (
isglobÆ
 ? 
a°_gv¨
 : 
a°_lv¨
)(
ty
, 
«me
);

2197 i‡(
	`√xt_tokí
('=')) {

2198 
	`vec_push
(
block
, 
	`a°_de˛
(
v¨
, 
	`ªad_de˛_öô
(
ty
)));

2199 } i‡(
s˛ass
 !
S_EXTERN
 && 
ty
->
köd
 !
KIND_FUNC
) {

2200 
	`vec_push
(
block
, 
	`a°_de˛
(
v¨
, 
NULL
));

2203 i‡(
	`√xt_tokí
(';'))

2205 i‡(!
	`√xt_tokí
(','))

2206 
	`îr‹t
(
	`≥ek
(), "';' o∏','áªÉx≥˘ed, buàgŸ %s", 
	`tok2s
(peek()));

2208 
	}
}

2214 
Ve˘‹
 *
	$ªad_ﬁd°yÀ_∑øm_¨gs
() {

2215 
M≠
 *
‹ig
 = 
loˇÀnv
;

2216 
loˇÀnv
 = 
NULL
;

2217 
Ve˘‹
 *
r
 = 
	`make_ve˘‹
();

2219 i‡(
	`is_keyw‹d
(
	`≥ek
(), '{'))

2221 i‡(!
	`is_ty≥
(
	`≥ek
()))

2222 
	`îr‹t
(
	`≥ek
(), "K&R-°yÀ de˛¨©‹Éx≥˘ed, buàgŸ %s", 
	`tok2s
(peek()));

2223 
	`ªad_de˛
(
r
, 
Ál£
);

2225 
loˇÀnv
 = 
‹ig
;

2226  
r
;

2227 
	}
}

2229 
	$upd©e_ﬁd°yÀ_∑øm_ty≥
(
Ve˘‹
 *
∑øms
, Ve˘‹ *
v¨s
) {

2230 
i
 = 0; i < 
	`vec_Àn
(
v¨s
); i++) {

2231 
Node
 *
de˛
 = 
	`vec_gë
(
v¨s
, 
i
);

2232 
	`as£π
(
de˛
->
köd
 =
AST_DECL
);

2233 
Node
 *
v¨
 = 
de˛
->
de˛v¨
;

2234 
	`as£π
(
v¨
->
köd
 =
AST_LVAR
);

2235 
j
 = 0; j < 
	`vec_Àn
(
∑øms
); j++) {

2236 
Node
 *
∑øm
 = 
	`vec_gë
(
∑øms
, 
j
);

2237 
	`as£π
(
∑øm
->
köd
 =
AST_LVAR
);

2238 i‡(
	`°rcmp
(
∑øm
->
v¨«me
, 
v¨
->varname))

2240 
∑øm
->
ty
 = 
v¨
->ty;

2241 
found
;

2243 
	`îr‹
("missögÖ¨amëî: %s", 
v¨
->
v¨«me
);

2244 
found
:;

2246 
	}
}

2248 
	$ªad_ﬁd°yÀ_∑øm_ty≥
(
Ve˘‹
 *
∑øms
) {

2249 
Ve˘‹
 *
v¨s
 = 
	`ªad_ﬁd°yÀ_∑øm_¨gs
();

2250 
	`upd©e_ﬁd°yÀ_∑øm_ty≥
(
∑øms
, 
v¨s
);

2251 
	}
}

2253 
Ve˘‹
 *
	$∑øm_ty≥s
(
Ve˘‹
 *
∑øms
) {

2254 
Ve˘‹
 *
r
 = 
	`make_ve˘‹
();

2255 
i
 = 0; i < 
	`vec_Àn
(
∑øms
); i++) {

2256 
Node
 *
∑øm
 = 
	`vec_gë
(
∑øms
, 
i
);

2257 
	`vec_push
(
r
, 
∑øm
->
ty
);

2259  
r
;

2260 
	}
}

2266 
Node
 *
	$ªad_func_body
(
Ty≥
 *
fun˘y≥
, *
‚ame
, 
Ve˘‹
 *
∑øms
) {

2267 
loˇÀnv
 = 
	`make_m≠_∑ª¡
(localenv);

2268 
loˇlv¨s
 = 
	`make_ve˘‹
();

2269 
cuºít_func_ty≥
 = 
fun˘y≥
;

2270 
Node
 *
fun˙ame
 = 
	`a°_°rög
(
ENC_NONE
, 
‚ame
, 
	`°æí
(fname) + 1);

2271 
	`m≠_put
(
loˇÀnv
, "__func__", 
fun˙ame
);

2272 
	`m≠_put
(
loˇÀnv
, "__FUNCTION__", 
fun˙ame
);

2273 
Node
 *
body
 = 
	`ªad_compound_°mt
();

2274 
Node
 *
r
 = 
	`a°_func
(
fun˘y≥
, 
‚ame
, 
∑øms
, 
body
, 
loˇlv¨s
);

2275 
cuºít_func_ty≥
 = 
NULL
;

2276 
loˇÀnv
 = 
NULL
;

2277 
loˇlv¨s
 = 
NULL
;

2278  
r
;

2279 
	}
}

2281 
	$skù_∑ª¡he£s
(
Ve˘‹
 *
buf
) {

2283 
Tokí
 *
tok
 = 
	`gë
();

2284 i‡(
tok
->
köd
 =
TEOF
)

2285 
	`îr‹
("prematureÉnd of input");

2286 
	`vec_push
(
buf
, 
tok
);

2287 i‡(
	`is_keyw‹d
(
tok
, ')'))

2289 i‡(
	`is_keyw‹d
(
tok
, '('))

2290 
	`skù_∑ª¡he£s
(
buf
);

2292 
	}
}

2299 
boﬁ
 
	$is_funcdef
() {

2300 
Ve˘‹
 *
buf
 = 
	`make_ve˘‹
();

2301 
boﬁ
 
r
 = 
Ál£
;

2303 
Tokí
 *
tok
 = 
	`gë
();

2304 
	`vec_push
(
buf
, 
tok
);

2305 i‡(
tok
->
köd
 =
TEOF
)

2306 
	`îr‹
("prematureÉnd of input");

2307 i‡(
	`is_keyw‹d
(
tok
, ';'))

2309 i‡(
	`is_ty≥
(
tok
))

2311 i‡(
	`is_keyw‹d
(
tok
, '(')) {

2312 
	`skù_∑ª¡he£s
(
buf
);

2315 i‡(
tok
->
köd
 !
TIDENT
)

2317 i‡(!
	`is_keyw‹d
(
	`≥ek
(), '('))

2319 
	`vec_push
(
buf
, 
	`gë
());

2320 
	`skù_∑ª¡he£s
(
buf
);

2321 
r
 = (
	`is_keyw‹d
(
	`≥ek
(), '{'Ë|| 
	`is_ty≥
(peek()));

2324 
	`vec_Àn
(
buf
) > 0)

2325 
	`ungë_tokí
(
	`vec_p›
(
buf
));

2326  
r
;

2327 
	}
}

2329 
	$backfûl_œbñs
() {

2330 
i
 = 0; i < 
	`vec_Àn
(
gŸos
); i++) {

2331 
Node
 *
§c
 = 
	`vec_gë
(
gŸos
, 
i
);

2332 *
œbñ
 = 
§c
->label;

2333 
Node
 *
d°
 = 
	`m≠_gë
(
œbñs
, 
œbñ
);

2334 i‡(!
d°
)

2335 
	`îr‹
("°øy %s: %s", 
§c
->
köd
 =
AST_GOTO
 ? "gŸo" : "u«ry &&", 
œbñ
);

2336 i‡(
d°
->
√wœbñ
)

2337 
§c
->
√wœbñ
 = 
d°
->newlabel;

2339 
§c
->
√wœbñ
 = 
d°
->√wœbñ = 
	`make_œbñ
();

2341 
	}
}

2343 
Node
 *
	$ªad_funcdef
() {

2344 
s˛ass
 = 0;

2345 
Ty≥
 *
ba£ty≥
 = 
	`ªad_de˛_•ec_›t
(&
s˛ass
);

2346 
loˇÀnv
 = 
	`make_m≠_∑ª¡
(
globÆív
);

2347 
gŸos
 = 
	`make_ve˘‹
();

2348 
œbñs
 = 
	`make_m≠
();

2349 *
«me
;

2350 
Ve˘‹
 *
∑øms
 = 
	`make_ve˘‹
();

2351 
Ty≥
 *
fun˘y≥
 = 
	`ªad_de˛¨©‹
(&
«me
, 
ba£ty≥
, 
∑øms
, 
DECL_BODY
);

2352 i‡(
fun˘y≥
->
ﬁd°yÀ
) {

2353 i‡(
	`vec_Àn
(
∑øms
) == 0)

2354 
fun˘y≥
->
hasva
 = 
Ál£
;

2355 
	`ªad_ﬁd°yÀ_∑øm_ty≥
(
∑øms
);

2356 
fun˘y≥
->
∑øms
 = 
	`∑øm_ty≥s
(params);

2358 
fun˘y≥
->
is°©ic
 = (
s˛ass
 =
S_STATIC
);

2359 
	`a°_gv¨
(
fun˘y≥
, 
«me
);

2360 
	`ex≥˘
('{');

2361 
Node
 *
r
 = 
	`ªad_func_body
(
fun˘y≥
, 
«me
, 
∑øms
);

2362 
	`backfûl_œbñs
();

2363 
loˇÀnv
 = 
NULL
;

2364  
r
;

2365 
	}
}

2371 
Node
 *
	$ªad_boﬁón_ex¥
() {

2372 
Node
 *
c⁄d
 = 
	`ªad_ex¥
();

2373  
	`is_ÊŸy≥
(
c⁄d
->
ty
Ë? 
	`a°_c⁄v
(
ty≥_boﬁ
, cond) : cond;

2374 
	}
}

2376 
Node
 *
	$ªad_if_°mt
() {

2377 
	`ex≥˘
('(');

2378 
Node
 *
c⁄d
 = 
	`ªad_boﬁón_ex¥
();

2379 
	`ex≥˘
(')');

2380 
Node
 *
thí
 = 
	`ªad_°mt
();

2381 i‡(!
	`√xt_tokí
(
KELSE
))

2382  
	`a°_if
(
c⁄d
, 
thí
, 
NULL
);

2383 
Node
 *
ñs
 = 
	`ªad_°mt
();

2384  
	`a°_if
(
c⁄d
, 
thí
, 
ñs
);

2385 
	}
}

2391 
Node
 *
	$ªad_›t_de˛_‹_°mt
() {

2392 i‡(
	`√xt_tokí
(';'))

2393  
NULL
;

2394 
Ve˘‹
 *
li°
 = 
	`make_ve˘‹
();

2395 
	`ªad_de˛_‹_°mt
(
li°
);

2396  
	`a°_compound_°mt
(
li°
);

2397 
	}
}

2399 
	#SET_JUMP_LABELS
(
c⁄t
, 
brk
) \

2400 *
oc⁄töue
 = 
lc⁄töue
; \

2401 *
obªak
 = 
lbªak
; \

2402 
lc⁄töue
 = 
c⁄t
; \

2403 
lbªak
 = 
brk


	)

2405 
	#RESTORE_JUMP_LABELS
() \

2406 
lc⁄töue
 = 
oc⁄töue
; \

2407 
lbªak
 = 
obªak


	)

2409 
Node
 *
	$ªad_f‹_°mt
() {

2410 
	`ex≥˘
('(');

2411 *
beg
 = 
	`make_œbñ
();

2412 *
mid
 = 
	`make_œbñ
();

2413 *
íd
 = 
	`make_œbñ
();

2414 
M≠
 *
‹ig
 = 
loˇÀnv
;

2415 
loˇÀnv
 = 
	`make_m≠_∑ª¡
(localenv);

2416 
Node
 *
öô
 = 
	`ªad_›t_de˛_‹_°mt
();

2417 
Node
 *
c⁄d
 = 
	`ªad_ex¥_›t
();

2418 i‡(
c⁄d
 && 
	`is_ÊŸy≥
(c⁄d->
ty
))

2419 
c⁄d
 = 
	`a°_c⁄v
(
ty≥_boﬁ
, cond);

2420 
	`ex≥˘
(';');

2421 
Node
 *
°ï
 = 
	`ªad_ex¥_›t
();

2422 
	`ex≥˘
(')');

2423 
	`SET_JUMP_LABELS
(
mid
, 
íd
);

2424 
Node
 *
body
 = 
	`ªad_°mt
();

2425 
	`RESTORE_JUMP_LABELS
();

2426 
loˇÀnv
 = 
‹ig
;

2428 
Ve˘‹
 *
v
 = 
	`make_ve˘‹
();

2429 i‡(
öô
)

2430 
	`vec_push
(
v
, 
öô
);

2431 
	`vec_push
(
v
, 
	`a°_de°
(
beg
));

2432 i‡(
c⁄d
)

2433 
	`vec_push
(
v
, 
	`a°_if
(
c⁄d
, 
NULL
, 
	`a°_jump
(
íd
)));

2434 i‡(
body
)

2435 
	`vec_push
(
v
, 
body
);

2436 
	`vec_push
(
v
, 
	`a°_de°
(
mid
));

2437 i‡(
°ï
)

2438 
	`vec_push
(
v
, 
°ï
);

2439 
	`vec_push
(
v
, 
	`a°_jump
(
beg
));

2440 
	`vec_push
(
v
, 
	`a°_de°
(
íd
));

2441  
	`a°_compound_°mt
(
v
);

2442 
	}
}

2448 
Node
 *
	$ªad_whûe_°mt
() {

2449 
	`ex≥˘
('(');

2450 
Node
 *
c⁄d
 = 
	`ªad_boﬁón_ex¥
();

2451 
	`ex≥˘
(')');

2453 *
beg
 = 
	`make_œbñ
();

2454 *
íd
 = 
	`make_œbñ
();

2455 
	`SET_JUMP_LABELS
(
beg
, 
íd
);

2456 
Node
 *
body
 = 
	`ªad_°mt
();

2457 
	`RESTORE_JUMP_LABELS
();

2459 
Ve˘‹
 *
v
 = 
	`make_ve˘‹
();

2460 
	`vec_push
(
v
, 
	`a°_de°
(
beg
));

2461 
	`vec_push
(
v
, 
	`a°_if
(
c⁄d
, 
body
, 
	`a°_jump
(
íd
)));

2462 
	`vec_push
(
v
, 
	`a°_jump
(
beg
));

2463 
	`vec_push
(
v
, 
	`a°_de°
(
íd
));

2464  
	`a°_compound_°mt
(
v
);

2465 
	}
}

2471 
Node
 *
	$ªad_do_°mt
() {

2472 *
beg
 = 
	`make_œbñ
();

2473 *
íd
 = 
	`make_œbñ
();

2474 
	`SET_JUMP_LABELS
(
beg
, 
íd
);

2475 
Node
 *
body
 = 
	`ªad_°mt
();

2476 
	`RESTORE_JUMP_LABELS
();

2477 
Tokí
 *
tok
 = 
	`gë
();

2478 i‡(!
	`is_keyw‹d
(
tok
, 
KWHILE
))

2479 
	`îr‹t
(
tok
, "'whûe' i†ex≥˘ed, buàgŸ %s", 
	`tok2s
(tok));

2480 
	`ex≥˘
('(');

2481 
Node
 *
c⁄d
 = 
	`ªad_boﬁón_ex¥
();

2482 
	`ex≥˘
(')');

2483 
	`ex≥˘
(';');

2485 
Ve˘‹
 *
v
 = 
	`make_ve˘‹
();

2486 
	`vec_push
(
v
, 
	`a°_de°
(
beg
));

2487 i‡(
body
)

2488 
	`vec_push
(
v
, 
body
);

2489 
	`vec_push
(
v
, 
	`a°_if
(
c⁄d
, 
	`a°_jump
(
beg
), 
NULL
));

2490 
	`vec_push
(
v
, 
	`a°_de°
(
íd
));

2491  
	`a°_compound_°mt
(
v
);

2492 
	}
}

2498 
Node
 *
	$make_swôch_jump
(
Node
 *
v¨
, 
Ca£
 *
c
) {

2499 
Node
 *
c⁄d
;

2500 i‡(
c
->
beg
 =c->
íd
) {

2501 
c⁄d
 = 
	`a°_bö›
(
ty≥_öt
, 
OP_EQ
, 
v¨
, 
	`a°_öây≥
—y≥_öt, 
c
->
beg
));

2504 
Node
 *
x
 = 
	`a°_bö›
(
ty≥_öt
, 
OP_LE
, 
	`a°_öây≥
—y≥_öt, 
c
->
beg
), 
v¨
);

2505 
Node
 *
y
 = 
	`a°_bö›
(
ty≥_öt
, 
OP_LE
, 
v¨
, 
	`a°_öây≥
—y≥_öt, 
c
->
íd
));

2506 
c⁄d
 = 
	`a°_bö›
(
ty≥_öt
, 
OP_LOGAND
, 
x
, 
y
);

2508  
	`a°_if
(
c⁄d
, 
	`a°_jump
(
c
->
œbñ
), 
NULL
);

2509 
	}
}

2512 
	$check_ˇ£_du∂iˇãs
(
Ve˘‹
 *
ˇ£s
) {

2513 
Àn
 = 
	`vec_Àn
(
ˇ£s
);

2514 
Ca£
 *
x
 = 
	`vec_gë
(
ˇ£s
, 
Àn
 - 1);

2515 
i
 = 0; i < 
Àn
 - 1; i++) {

2516 
Ca£
 *
y
 = 
	`vec_gë
(
ˇ£s
, 
i
);

2517 i‡(
x
->
íd
 < 
y
->
beg
 || y->end < x->beg)

2519 i‡(
x
->
beg
 =x->
íd
)

2520 
	`îr‹
("du∂iˇã ca£ vÆue: %d", 
x
->
beg
);

2521 
	`îr‹
("du∂iˇã ca£ vÆue: %d ... %d", 
x
->
beg
, x->
íd
);

2523 
	}
}

2525 
	#SET_SWITCH_CONTEXT
(
brk
) \

2526 
Ve˘‹
 *
oˇ£s
 = 
ˇ£s
; \

2527 *
odeÁu…ˇ£
 = 
deÁu…ˇ£
; \

2528 *
obªak
 = 
lbªak
; \

2529 
ˇ£s
 = 
	`make_ve˘‹
(); \

2530 
deÁu…ˇ£
 = 
NULL
; \

2531 
lbªak
 = 
brk


	)

2533 
	#RESTORE_SWITCH_CONTEXT
() \

2534 
ˇ£s
 = 
oˇ£s
; \

2535 
deÁu…ˇ£
 = 
odeÁu…ˇ£
; \

2536 
lbªak
 = 
obªak


	)

2538 
Node
 *
	$ªad_swôch_°mt
() {

2539 
	`ex≥˘
('(');

2540 
Node
 *
ex¥
 = 
	`c⁄v
(
	`ªad_ex¥
());

2541 
	`ísuª_öây≥
(
ex¥
);

2542 
	`ex≥˘
(')');

2544 *
íd
 = 
	`make_œbñ
();

2545 
	`SET_SWITCH_CONTEXT
(
íd
);

2546 
Node
 *
body
 = 
	`ªad_°mt
();

2547 
Ve˘‹
 *
v
 = 
	`make_ve˘‹
();

2548 
Node
 *
v¨
 = 
	`a°_lv¨
(
ex¥
->
ty
, 
	`make_ãm≤ame
());

2549 
	`vec_push
(
v
, 
	`a°_bö›
(
ex¥
->
ty
, '=', 
v¨
,Éxpr));

2550 
i
 = 0; i < 
	`vec_Àn
(
ˇ£s
); i++)

2551 
	`vec_push
(
v
, 
	`make_swôch_jump
(
v¨
, 
	`vec_gë
(
ˇ£s
, 
i
)));

2552 
	`vec_push
(
v
, 
	`a°_jump
(
deÁu…ˇ£
 ? deÁu…ˇ£ : 
íd
));

2553 i‡(
body
)

2554 
	`vec_push
(
v
, 
body
);

2555 
	`vec_push
(
v
, 
	`a°_de°
(
íd
));

2556 
	`RESTORE_SWITCH_CONTEXT
();

2557  
	`a°_compound_°mt
(
v
);

2558 
	}
}

2560 
Node
 *
	$ªad_œbñ_èû
(
Node
 *
œbñ
) {

2561 
Node
 *
°mt
 = 
	`ªad_°mt
();

2562 
Ve˘‹
 *
v
 = 
	`make_ve˘‹
();

2563 
	`vec_push
(
v
, 
œbñ
);

2564 i‡(
°mt
)

2565 
	`vec_push
(
v
, 
°mt
);

2566  
	`a°_compound_°mt
(
v
);

2567 
	}
}

2569 
Node
 *
	$ªad_ˇ£_œbñ
(
Tokí
 *
tok
) {

2570 i‡(!
ˇ£s
)

2571 
	`îr‹t
(
tok
, "stray caseÜabel");

2572 *
œbñ
 = 
	`make_œbñ
();

2573 
beg
 = 
	`ªad_öãx¥
();

2574 i‡(
	`√xt_tokí
(
KELLIPSIS
)) {

2575 
íd
 = 
	`ªad_öãx¥
();

2576 
	`ex≥˘
(':');

2577 i‡(
beg
 > 
íd
)

2578 
	`îr‹t
(
tok
, "ˇ£Ñegi⁄ i†nŸ i¿c‹ª˘ ordî: %d ... %d", 
beg
, 
íd
);

2579 
	`vec_push
(
ˇ£s
, 
	`make_ˇ£
(
beg
, 
íd
, 
œbñ
));

2581 
	`ex≥˘
(':');

2582 
	`vec_push
(
ˇ£s
, 
	`make_ˇ£
(
beg
, beg, 
œbñ
));

2584 
	`check_ˇ£_du∂iˇãs
(
ˇ£s
);

2585  
	`ªad_œbñ_èû
(
	`a°_de°
(
œbñ
));

2586 
	}
}

2588 
Node
 *
	$ªad_deÁu…_œbñ
(
Tokí
 *
tok
) {

2589 
	`ex≥˘
(':');

2590 i‡(
deÁu…ˇ£
)

2591 
	`îr‹t
(
tok
, "duplicate default");

2592 
deÁu…ˇ£
 = 
	`make_œbñ
();

2593  
	`ªad_œbñ_èû
(
	`a°_de°
(
deÁu…ˇ£
));

2594 
	}
}

2600 
Node
 *
	$ªad_bªak_°mt
(
Tokí
 *
tok
) {

2601 
	`ex≥˘
(';');

2602 i‡(!
lbªak
)

2603 
	`îr‹t
(
tok
, "stray break statement");

2604  
	`a°_jump
(
lbªak
);

2605 
	}
}

2607 
Node
 *
	$ªad_c⁄töue_°mt
(
Tokí
 *
tok
) {

2608 
	`ex≥˘
(';');

2609 i‡(!
lc⁄töue
)

2610 
	`îr‹t
(
tok
, "stray continue statement");

2611  
	`a°_jump
(
lc⁄töue
);

2612 
	}
}

2614 
Node
 *
	$ªad_ªtu∫_°mt
() {

2615 
Node
 *
ªtvÆ
 = 
	`ªad_ex¥_›t
();

2616 
	`ex≥˘
(';');

2617 i‡(
ªtvÆ
)

2618  
	`a°_ªtu∫
(
	`a°_c⁄v
(
cuºít_func_ty≥
->
ªây≥
, 
ªtvÆ
));

2619  
	`a°_ªtu∫
(
NULL
);

2620 
	}
}

2622 
Node
 *
	$ªad_gŸo_°mt
() {

2623 i‡(
	`√xt_tokí
('*')) {

2625 
Tokí
 *
tok
 = 
	`≥ek
();

2626 
Node
 *
ex¥
 = 
	`ªad_ˇ°_ex¥
();

2627 i‡(
ex¥
->
ty
->
köd
 !
KIND_PTR
)

2628 
	`îr‹t
(
tok
, "poöã∏ex≥˘ed f‹ compuãd gŸo, buàgŸ %s", 
	`node2s
(
ex¥
));

2629  
	`a°_compuãd_gŸo
(
ex¥
);

2631 
Tokí
 *
tok
 = 
	`gë
();

2632 i‡(!
tok
 ||Åok->
köd
 !
TIDENT
)

2633 
	`îr‹t
(
tok
, "idítifõ∏ex≥˘ed, buàgŸ %s", 
	`tok2s
(tok));

2634 
	`ex≥˘
(';');

2635 
Node
 *
r
 = 
	`a°_gŸo
(
tok
->
svÆ
);

2636 
	`vec_push
(
gŸos
, 
r
);

2637  
r
;

2638 
	}
}

2640 
Node
 *
	$ªad_œbñ
(
Tokí
 *
tok
) {

2641 *
œbñ
 = 
tok
->
svÆ
;

2642 i‡(
	`m≠_gë
(
œbñs
, 
œbñ
))

2643 
	`îr‹t
(
tok
, "du∂iˇãÜabñ: %s", 
	`tok2s
(tok));

2644 
Node
 *
r
 = 
	`a°_œbñ
(
œbñ
);

2645 
	`m≠_put
(
œbñs
, 
œbñ
, 
r
);

2646  
	`ªad_œbñ_èû
(
r
);

2647 
	}
}

2653 
Node
 *
	$ªad_°mt
() {

2654 
Tokí
 *
tok
 = 
	`gë
();

2655 i‡(
tok
->
köd
 =
TKEYWORD
) {

2656 
tok
->
id
) {

2657 '{':  
	`ªad_compound_°mt
();

2658 
KIF
:  
	`ªad_if_°mt
();

2659 
KFOR
:  
	`ªad_f‹_°mt
();

2660 
KWHILE
:  
	`ªad_whûe_°mt
();

2661 
KDO
:  
	`ªad_do_°mt
();

2662 
KRETURN
:  
	`ªad_ªtu∫_°mt
();

2663 
KSWITCH
:  
	`ªad_swôch_°mt
();

2664 
KCASE
:  
	`ªad_ˇ£_œbñ
(
tok
);

2665 
KDEFAULT
:  
	`ªad_deÁu…_œbñ
(
tok
);

2666 
KBREAK
:  
	`ªad_bªak_°mt
(
tok
);

2667 
KCONTINUE
:  
	`ªad_c⁄töue_°mt
(
tok
);

2668 
KGOTO
:  
	`ªad_gŸo_°mt
();

2671 i‡(
tok
->
köd
 =
TIDENT
 && 
	`√xt_tokí
(':'))

2672  
	`ªad_œbñ
(
tok
);

2673 
	`ungë_tokí
(
tok
);

2674 
Node
 *
r
 = 
	`ªad_ex¥_›t
();

2675 
	`ex≥˘
(';');

2676  
r
;

2677 
	}
}

2679 
Node
 *
	$ªad_compound_°mt
() {

2680 
M≠
 *
‹ig
 = 
loˇÀnv
;

2681 
loˇÀnv
 = 
	`make_m≠_∑ª¡
(localenv);

2682 
Ve˘‹
 *
li°
 = 
	`make_ve˘‹
();

2684 i‡(
	`√xt_tokí
('}'))

2686 
	`ªad_de˛_‹_°mt
(
li°
);

2688 
loˇÀnv
 = 
‹ig
;

2689  
	`a°_compound_°mt
(
li°
);

2690 
	}
}

2692 
	$ªad_de˛_‹_°mt
(
Ve˘‹
 *
li°
) {

2693 
Tokí
 *
tok
 = 
	`≥ek
();

2694 i‡(
tok
->
köd
 =
TEOF
)

2695 
	`îr‹
("prematureÉnd of input");

2696 
	`m¨k_loˇti⁄
();

2697 i‡(
	`is_ty≥
(
tok
)) {

2698 
	`ªad_de˛
(
li°
, 
Ál£
);

2699 } i‡(
	`√xt_tokí
(
KSTATIC_ASSERT
)) {

2700 
	`ªad_°©ic_as£π
();

2702 
Node
 *
°mt
 = 
	`ªad_°mt
();

2703 i‡(
°mt
)

2704 
	`vec_push
(
li°
, 
°mt
);

2706 
	}
}

2712 
Ve˘‹
 *
	$ªad_t›Àvñs
() {

2713 
t›Àvñs
 = 
	`make_ve˘‹
();

2715 i‡(
	`≥ek
()->
köd
 =
TEOF
)

2716  
t›Àvñs
;

2717 i‡(
	`is_funcdef
())

2718 
	`vec_push
(
t›Àvñs
, 
	`ªad_funcdef
());

2720 
	`ªad_de˛
(
t›Àvñs
, 
åue
);

2722 
	}
}

2729 
	$c⁄ˇã«ã_°rög
(
Tokí
 *
tok
) {

2730 
íc
 = 
tok
->enc;

2731 
Buf„r
 *
b
 = 
	`make_buf„r
();

2732 
	`buf_≠≥nd
(
b
, 
tok
->
svÆ
,Åok->
¶í
 - 1);

2733 
	`≥ek
()->
köd
 =
TSTRING
) {

2734 
Tokí
 *
tok2
 = 
	`ªad_tokí
();

2735 
	`buf_≠≥nd
(
b
, 
tok2
->
svÆ
,Åok2->
¶í
 - 1);

2736 
íc2
 = 
tok2
->
íc
;

2737 i‡(
íc
 !
ENC_NONE
 && 
íc2
 != ENC_NONE &&Énc !=Énc2)

2738 
	`îr‹t
(
tok2
, "unsuµ‹ãdÇ⁄-°™d¨d c⁄ˇã«ti⁄ o‡°rögÜôîÆs: %s", 
	`tok2s
(tok2));

2739 i‡(
íc
 =
ENC_NONE
)

2740 
íc
 = 
íc2
;

2742 
	`buf_wrôe
(
b
, '\0');

2743 
tok
->
svÆ
 = 
	`buf_body
(
b
);

2744 
tok
->
¶í
 = 
	`buf_Àn
(
b
);

2745 
tok
->
íc
 =Énc;

2746 
	}
}

2748 
Tokí
 *
	$gë
() {

2749 
Tokí
 *
r
 = 
	`ªad_tokí
();

2750 i‡(
r
->
köd
 =
TINVALID
)

2751 
	`îr‹t
(
r
, "°øy ch¨a˘î i¿¥ogøm: '%c'",Ñ->
c
);

2752 i‡(
r
->
köd
 =
TSTRING
 && 
	`≥ek
()->kind == TSTRING)

2753 
	`c⁄ˇã«ã_°rög
(
r
);

2754  
r
;

2755 
	}
}

2757 
Tokí
 *
	$≥ek
() {

2758  
	`≥ek_tokí
();

2759 
	}
}

2765 
	$deföe_buûtö
(*
«me
, 
Ty≥
 *
ªây≥
, 
Ve˘‹
 *
∑ømty≥s
) {

2766 
	`a°_gv¨
(
	`make_func_ty≥
(
ªây≥
, 
∑ømty≥s
, 
åue
, 
Ál£
), 
«me
);

2767 
	}
}

2769 
	$∑r£_öô
() {

2770 
Ve˘‹
 *
void±r
 = 
	`make_ve˘‹1
(
	`make_±r_ty≥
(
ty≥_void
));

2771 
Ve˘‹
 *
two_void±rs
 = 
	`make_ve˘‹
();

2772 
	`vec_push
(
two_void±rs
, 
	`make_±r_ty≥
(
ty≥_void
));

2773 
	`vec_push
(
two_void±rs
, 
	`make_±r_ty≥
(
ty≥_void
));

2774 
	`deföe_buûtö
("__buûtö_ªtu∫_addªss", 
	`make_±r_ty≥
(
ty≥_void
), 
void±r
);

2775 
	`deföe_buûtö
("__buûtö_ªg_˛ass", 
ty≥_öt
, 
void±r
);

2776 
	`deföe_buûtö
("__buûtö_va_¨g", 
ty≥_void
, 
two_void±rs
);

2777 
	`deföe_buûtö
("__buûtö_va_°¨t", 
ty≥_void
, 
void±r
);

2778 
	}
}

	@8cc/path.c

3 #i‚de‡
__eú__


5 
	~<î∫o.h
>

6 
	~<limôs.h
>

7 
	~<°rög.h
>

8 
	~<uni°d.h
>

9 
	~"8cc.h
"

12 *
	$˛ón
(*
p
) {

13 
	`as£π
(*
p
 == '/');

14 
buf
[
PATH_MAX
];

15 *
q
 = 
buf
;

16 *
q
++ = '/';

18 i‡(*
p
 == '/') {

19 
p
++;

22 i‡(!
	`memcmp
("./", 
p
, 2)) {

23 
p
 += 2;

26 i‡(!
	`memcmp
("../", 
p
, 3)) {

27 
p
 += 3;

28 i‡(
q
 =
buf
 + 1)

30 
q
--; q[-1] != '/'; q--);

33 *
p
 != '/' && *p != '\0')

34 *
q
++ = *
p
++;

35 i‡(*
p
 == '/') {

36 *
q
++ = *
p
++;

39 *
q
 = '\0';

40  
	`°rdup
(
buf
);

42 
	}
}

45 *
	$fuŒ∑th
(*
∑th
) {

46 
cwd
[
PATH_MAX
];

47 i‡(
∑th
[0] == '/')

48  
	`˛ón
(
∑th
);

49 i‡(*
cwd
 ='\0' && !
	`gëcwd
(cwd, 
PATH_MAX
))

50 
	`îr‹
("gëcwd faûed: %s", 
	`°ªº‹
(
î∫o
));

51  
	`˛ón
(
	`f‹m©
("%s/%s", 
cwd
, 
∑th
));

52 
	}
}

	@8cc/set.c

16 
	~<°dlib.h
>

17 
	~<°rög.h
>

18 
	~"8cc.h
"

20 
Së
 *
	$£t_add
(
Së
 *
s
, *
v
) {

21 
Së
 *
r
 = 
	`mÆloc
((Set));

22 
r
->
√xt
 = 
s
;

23 
r
->
v
 = v;

24  
r
;

25 
	}
}

27 
boﬁ
 
	$£t_has
(
Së
 *
s
, *
v
) {

28 ; 
s
; s = s->
√xt
)

29 i‡(!
	`°rcmp
(
s
->
v
, v))

30  
åue
;

31  
Ál£
;

32 
	}
}

34 
Së
 *
	$£t_uni⁄
(
Së
 *
a
, Së *
b
) {

35 
Së
 *
r
 = 
b
;

36 ; 
a
;á =á->
√xt
)

37 i‡(!
	`£t_has
(
b
, 
a
->
v
))

38 
r
 = 
	`£t_add
‘, 
a
->
v
);

39  
r
;

40 
	}
}

42 
Së
 *
	$£t_öãr£˘i⁄
(
Së
 *
a
, Së *
b
) {

43 
Së
 *
r
 = 
NULL
;

44 ; 
a
;á =á->
√xt
)

45 i‡(
	`£t_has
(
b
, 
a
->
v
))

46 
r
 = 
	`£t_add
‘, 
a
->
v
);

47  
r
;

48 
	}
}

	@8cc/test/align.c

3 
	~"ã°.h
"

4 
	~<°dÆign.h
>

5 
	~<°ddef.h
>

7 
	$ã°_Æig«s
() {

8 
	`ex≥˘
(1, 
	`off£tof
(°ru˘ { 
x
; 
y
; }, y));

9 
	`ex≥˘
(4, 
	`off£tof
(°ru˘ { 
x
; 
	`_Alig«s
(4Ë
y
; }, y));

10 
	`ex≥˘
(4, 
	`off£tof
(°ru˘ { 
x
; 
	`_Alig«s
(Ë
y
; }, y));

11 
	`ex≥˘
(1, 
	`off£tof
(°ru˘ { 
x
; 
	`Æig«s
(0Ë
y
; }, y));

12 
	}
}

14 
	$ã°_Æignof
() {

15 
	`ex≥˘
(1, 
__Æignof_is_deföed
);

16 
	`ex≥˘
(1, 
	`_Alignof
());

17 
	`ex≥˘
(1, 
	`__Æignof__
());

18 
	`ex≥˘
(1, 
	`Æignof
());

19 
	`ex≥˘
(2, 
	`Æignof
());

20 
	`ex≥˘
(4, 
	`Æignof
());

21 
	`ex≥˘
(8, 
	`Æignof
());

22 
	`ex≥˘
(1, 
	`Æignof
([10]));

23 
	`ex≥˘
(8, 
	`Æignof
([10]));

24 
	`ex≥˘
(1, 
	`_Alignof
(struct {}));

25 
	`ex≥˘
(4, 
	`Æignof
(°ru˘ {
a
; 
b
; }));

26 #ifde‡
__8cc__


27 
	`ex≥˘
(8, 
	`Æignof
(°ru˘ {
a
; 
b
; }));

28 
	`ex≥˘
(8, 
	`Æignof
());

32 
	`ex≥˘
(1, 
	`Æignof
() - 2 > 0);

33 
	}
}

35 
	$ã°_c⁄°ex¥
() {

36 
a
[
	`Æignof
()];

37 
	`ex≥˘
(4, (
a
));

38 
	}
}

40 
	$ã°maö
() {

41 
	`¥öt
("alignment");

42 
	`ã°_Æig«s
();

43 
	`ã°_Æignof
();

44 
	`ã°_c⁄°ex¥
();

45 
	}
}

	@8cc/test/arith.c

3 
	~"ã°.h
"

5 
	$ã°_basic
() {

6 
	`ex≥˘
(0, 0);

7 
	`ex≥˘
(3, 1 + 2);

8 
	`ex≥˘
(3, 1 + 2);

9 
	`ex≥˘
(10, 1 + 2 + 3 + 4);

10 
	`ex≥˘
(11, 1 + 2 * 3 + 4);

11 
	`ex≥˘
(14, 1 * 2 + 3 * 4);

12 
	`ex≥˘
(4, 4 / 2 + 6 / 3);

13 
	`ex≥˘
(4, 24 / 2 / 3);

14 
	`ex≥˘
(3, 24 % 7);

15 
	`ex≥˘
(0, 24 % 3);

16 
	`ex≥˘
(98, 'a' + 1);

17 
a
 = 0 - 1;

18 
	`ex≥˘
(0 - 1, 
a
);

19 
	`ex≥˘
(-1, 
a
);

20 
	`ex≥˘
(0, 
a
 + 1);

21 
	`ex≥˘
(1, +1);

22 
	`ex≥˘
(1, ()4000000001 % 2);

23 
	}
}

25 
	$ã°_ªœtive
() {

26 
	`ex≥˘
(1, 1 > 0);

27 
	`ex≥˘
(1, 0 < 1);

28 
	`ex≥˘
(0, 1 < 0);

29 
	`ex≥˘
(0, 0 > 1);

30 
	`ex≥˘
(0, 1 > 1);

31 
	`ex≥˘
(0, 1 < 1);

32 
	`ex≥˘
(1, 1 >= 0);

33 
	`ex≥˘
(1, 0 <= 1);

34 
	`ex≥˘
(0, 1 <= 0);

35 
	`ex≥˘
(0, 0 >= 1);

36 
	`ex≥˘
(1, 1 >= 1);

37 
	`ex≥˘
(1, 1 <= 1);

38 
	`ex≥˘
(1, 0xFFFFFFFFU > 1);

39 
	`ex≥˘
(1, 1 < 0xFFFFFFFFU);

40 
	`ex≥˘
(1, 0xFFFFFFFFU >= 1);

41 
	`ex≥˘
(1, 1 <= 0xFFFFFFFFU);

42 
	`ex≥˘
(1, -1 > 1U);

43 
	`ex≥˘
(1, -1 >= 1U);

44 
	`ex≥˘
(0, -1L > 1U);

45 
	`ex≥˘
(0, -1L >= 1U);

46 
	`ex≥˘
(0, 1.0 < 0.0);

47 
	`ex≥˘
(1, 0.0 < 1.0);

48 
	}
}

50 
	$ã°_öc_dec
() {

51 
a
 = 15;

52 
	`ex≥˘
(15, 
a
++);

53 
	`ex≥˘
(16, 
a
);

54 
	`ex≥˘
(16, 
a
--);

55 
	`ex≥˘
(15, 
a
);

56 
	`ex≥˘
(14, --
a
);

57 
	`ex≥˘
(14, 
a
);

58 
	`ex≥˘
(15, ++
a
);

59 
	`ex≥˘
(15, 
a
);

60 
	}
}

62 
	$ã°_boﬁ
() {

63 
	`ex≥˘
(0, !1);

64 
	`ex≥˘
(1 ,!0);

65 
	}
}

67 
	$ã°_ã∫¨y
() {

68 
	`ex≥˘
(51, (1 + 2) ? 51 : 52);

69 
	`ex≥˘
(52, (1 - 1) ? 51 : 52);

70 
	`ex≥˘
(26, (1 - 1) ? 51 : 52 / 2);

71 
	`ex≥˘
(17, (1 - 0) ? 51 / 3 : 52);

73 
	`ex≥˘
(52, 0 ?: 52);

74 
	`ex≥˘
(3, (1 + 2) ?: 52);

75 
	}
}

77 
	$ã°_u«ry
() {

78 
x
 = 2;

79 
y
 = 2;

80 
z
 = 2;

81 
	`ex≥˘
(-2, -
x
);

82 
	`ex≥˘
(-2, -
y
);

83 
	`ex≥˘
(-2, -
z
);

84 
	}
}

86 
	$ã°_comma
() {

87 
	`ex≥˘
(3, (1, 3));

88 
	`ex≥˘f
(7.0, (1, 3, 5, 7.0));

89 
	}
}

91 
	$ã°maö
() {

92 
	`¥öt
("basicárithmetic");

93 
	`ã°_basic
();

94 
	`ã°_ªœtive
();

95 
	`ã°_öc_dec
();

96 
	`ã°_boﬁ
();

97 
	`ã°_u«ry
();

98 
	`ã°_ã∫¨y
();

99 
	`ã°_comma
();

100 
	}
}

	@8cc/test/array.c

3 
	~"ã°.h
"

5 
	$t1
() {

6 
a
[2][3];

7 *
p
 = 
a
;

8 *
p
 = 1;

9 
	`ex≥˘
(1, *
p
);

10 
	}
}

12 
	$t2
() {

13 
a
[2][3];

14 *
p
 = 
a
 + 1;

15 *
p
 = 1;

16 *
q
 = 
a
;

17 *
p
 = 32;

18 
	`ex≥˘
(32, *(
q
 + 3));

19 
	}
}

21 
	$t3
() {

22 
a
[4][5];

23 *
p
 = 
a
;

24 *(*(
a
 + 1) + 2) = 62;

25 
	`ex≥˘
(62, *(
p
 + 7));

26 
	}
}

28 
	$t4
() {

29 
a
[3] = { 1, 2, 3 };

30 
	`ex≥˘
(1, 
a
[0]);

31 
	`ex≥˘
(2, 
a
[1]);

32 
	`ex≥˘
(3, 
a
[2]);

33 
	}
}

35 
	$t5
() {

36 
a
[2][3];

37 
a
[0][1] = 1;

38 
a
[1][1] = 2;

39 *
p
 = 
a
;

40 
	`ex≥˘
(1, 
p
[1]);

41 
	`ex≥˘
(2, 
p
[4]);

42 
	}
}

44 
	$t6a
(
e
, 
x
[][3]) {

45 
	`ex≥˘
(
e
, *(*(
x
 + 1) + 1));

46 
	}
}

48 
	$t6
() {

49 
a
[2][3];

50 *
p
 = 
a
;

51 *(
p
 + 4) = 65;

52 
	`t6a
(65, 
a
);

53 
	}
}

55 
	$t7
() {

56 
a
[3*3];

57 
a
[8] = 68;

58 
	`ex≥˘
(68, 
a
[8]);

59 
	}
}

61 
	$ã°maö
() {

62 
	`¥öt
("array");

63 
	`t1
();

64 
	`t2
();

65 
	`t3
();

66 
	`t4
();

67 
	`t5
();

68 
	`t6
();

69 
	`t7
();

70 
	}
}

	@8cc/test/assign.c

3 
	~"ã°.h
"

5 
	$ã°maö
() {

6 
	`¥öt
("compoundássignment");

8 
a
 = 0;

9 
a
 += 5;

10 
	`ex≥˘
(5, 
a
);

11 
a
 -= 2;

12 
	`ex≥˘
(3, 
a
);

13 
a
 *= 10;

14 
	`ex≥˘
(30, 
a
);

15 
a
 /= 2;

16 
	`ex≥˘
(15, 
a
);

17 
a
 %= 6;

18 
	`ex≥˘
(3, 
a
);

20 
a
 = 14;

21 
a
 &= 7;

22 
	`ex≥˘
(6, 
a
);

23 
a
 |= 8;

24 
	`ex≥˘
(14, 
a
);

25 
a
 ^= 3;

26 
	`ex≥˘
(13, 
a
);

27 
a
 <<= 2;

28 
	`ex≥˘
(52, 
a
);

29 
a
 >>= 2;

30 
	`ex≥˘
(13, 
a
);

32 
b
 = 0;

33 
b
 += 5;

34 
	`ex≥˘
(5, 
b
);

35 
b
 -= 2;

36 
	`ex≥˘
(3, 
b
);

37 
b
 *= 10;

38 
	`ex≥˘
(30, 
b
);

39 
b
 /= 2;

40 
	`ex≥˘
(15, 
b
);

41 
b
 %= 6;

42 
	`ex≥˘
(3, 
b
);

44 
b
 = 14;

45 
b
 &= 7;

46 
	`ex≥˘
(6, 
b
);

47 
b
 |= 8;

48 
	`ex≥˘
(14, 
b
);

49 
b
 ^= 3;

50 
	`ex≥˘
(13, 
b
);

51 
b
 <<= 2;

52 
	`ex≥˘
(52, 
b
);

53 
b
 >>= 2;

54 
	`ex≥˘
(13, 
b
);

55 
	}
}

	@8cc/test/bitop.c

3 
	~"ã°.h
"

5 
	$ã°_‹
() {

6 
	`ex≥˘
(3, 1 | 2);

7 
	`ex≥˘
(7, 2 | 5);

8 
	`ex≥˘
(7, 2 | 7);

9 
	}
}

11 
	$ã°_™d
() {

12 
	`ex≥˘
(0, 1 & 2);

13 
	`ex≥˘
(2, 2 & 7);

14 
	}
}

16 
	$ã°_nŸ
() {

17 
	`ex≥˘
(-1, ~0);

18 
	`ex≥˘
(-3, ~2);

19 
	`ex≥˘
(0, ~-1);

20 
	}
}

22 
	$ã°_x‹
() {

23 
	`ex≥˘
(10, 15 ^ 5);

24 
	}
}

26 
	$ã°_shi·
() {

27 
	`ex≥˘
(16, 1 << 4);

28 
	`ex≥˘
(48, 3 << 4);

30 
	`ex≥˘
(1, 15 >> 3);

31 
	`ex≥˘
(2, 8 >> 2);

33 
	`ex≥˘
(1, (()-1) >> 31);

34 
	}
}

36 
	$ã°maö
() {

37 
	`¥öt
("bitwise operators");

38 
	`ã°_‹
();

39 
	`ã°_™d
();

40 
	`ã°_nŸ
();

41 
	`ã°_x‹
();

42 
	`ã°_shi·
();

43 
	}
}

	@8cc/test/builtin.c

6 
	~"ã°.h
"

8 #ifde‡
__8cc__


10 *
	$ã°_ªtu∫_addªss_sub2
() {

11  
	`__buûtö_ªtu∫_addªss
(1);

12 
	}
}

14 *
	$ã°_ªtu∫_addªss_sub1
() {

15 
	`ex≥˘
(()
	`__buûtö_ªtu∫_addªss
(0), ()
	`ã°_ªtu∫_addªss_sub2
());

16  
	`__buûtö_ªtu∫_addªss
(0);

17 
	}
}

19 
	$ã°_ªtu∫_addªss
() {

20 *
±r
;

21 
L1
:

22 
±r
 = 
	`ã°_ªtu∫_addªss_sub1
();

23 
L2
:

24 
	`ex≥˘
(1, &&
L1
 < 
±r
 &&Öå <&&
L2
);

25 
	}
}

28 
	$ã°_ªtu∫_addªss
(Ë{
	}
}

31 
	$ã°maö
() {

32 
	`¥öt
("builtin");

33 
	`ã°_ªtu∫_addªss
();

34 
	}
}

	@8cc/test/cast.c

3 
	~"ã°.h
"

5 
	$ã°_sig√dˇ°
() {

6 
c
 = -1;

7 
i
 = (sig√d Ë
c
;

9 
	`ex≥˘
(
i
, -1);

10 
	}
}

12 
	$ã°_unsig√dˇ°
() {

13 sig√d 
c
 = -1;

14 
i
 = (Ë
c
;

16 
	`ex≥˘
(1, 
i
 > 0);

17 
	}
}

19 
	$ã°maö
() {

20 
	`¥öt
("cast");

21 
	`ex≥˘f
(1, ()1);

22 
	`ex≥˘f
(1.0, ()1);

23 
	`ex≥˘d
(2.0, ()2);

25 
a
[3];

26 *(*)(
a
 + 2) = 5;

27 
	`ex≥˘
(5, 
a
[2]);

29 
	`ã°_sig√dˇ°
();

30 
	`ã°_unsig√dˇ°
();

31 
	}
}

	@8cc/test/comp.c

3 
	~"ã°.h
"

5 
	$ã°maö
() {

6 
	`¥öt
("comparison operators");

7 
	`ex≥˘
(1, 1 < 2);

8 
	`ex≥˘
(0, 2 < 1);

9 
	`ex≥˘
(1, 1 == 1);

10 
	`ex≥˘
(0, 1 == 2);

11 
	`ex≥˘
(0, 1 != 1);

12 
	`ex≥˘
(1, 1 != 2);

14 
	`ex≥˘
(1, 1 <= 2);

15 
	`ex≥˘
(1, 2 <= 2);

16 
	`ex≥˘
(0, 2 <= 1);

18 
	`ex≥˘
(0, 1 >= 2);

19 
	`ex≥˘
(1, 2 >= 2);

20 
	`ex≥˘
(1, 2 >= 1);

22 
i
 = -1;

23 
	`ex≥˘
(0, 
i
 >= 0);

25 
	`ex≥˘
(1, 10.0 == 10.0);

26 
	`ex≥˘
(0, 10.0 == 20.0);

27 
	`ex≥˘
(0, 10.0 != 10.0);

28 
	`ex≥˘
(1, 10.0 != 20.0);

30 
	`ex≥˘
(1, 10.0f == 10.0f);

31 
	`ex≥˘
(0, 10.0f == 20.0f);

32 
	`ex≥˘
(0, 10.0f != 10.0f);

33 
	`ex≥˘
(1, 10.0f != 20.0f);

35 
	`ex≥˘
(1, 10.0f == 10.0);

36 
	`ex≥˘
(0, 10.0f == 20.0);

37 
	`ex≥˘
(0, 10.0f != 10.0);

38 
	`ex≥˘
(1, 10.0f != 20.0);

39 
	}
}

	@8cc/test/constexpr.c

3 
	~"ã°.h
"

5 
	gx1
[] = { 1, 2, 3, 4, 5 };

6 *
	gp1
 = 
x1
;

7 *
	gq1
 = 
x1
 + 2;

9 
	gx2
 = 7;

10 *
	gp2
 = &
x2
 + 1;

12 
	$ã°maö
() {

13 
	`¥öt
("constexpr");

14 
	`ex≥˘
(1, *
p1
);

15 
	`ex≥˘
(3, *
q1
);

16 
	`ex≥˘
(7, 
p2
[-1]);

17 
	}
}

	@8cc/test/control.c

3 
	~"ã°.h
"

5 
	$ã°_if1
(Ë{ i‡(1Ë{  'a';}  0; 
	}
}

6 
	$ã°_if2
(Ë{ i‡(0Ë{  0;}  'b'; 
	}
}

7 
	$ã°_if3
(Ë{ i‡(1Ë{  'c';} {  0; }  0; 
	}
}

8 
	$ã°_if4
(Ë{ i‡(0Ë{  0;} {  'd'; }  0; 
	}
}

9 
	$ã°_if5
(Ë{ i‡(1Ë 'e';  0; 
	}
}

10 
	$ã°_if6
(Ë{ i‡(0Ë 0;  'f'; 
	}
}

11 
	$ã°_if7
(Ë{ i‡(1Ë 'g';  0;  0; 
	}
}

12 
	$ã°_if8
(Ë{ i‡(0Ë 0;  'h';  0; 
	}
}

13 
	$ã°_if9
(Ë{ i‡(0+1Ë 'i';  0; 
	}
}

14 
	$ã°_if10
(Ë{ i‡(1-1Ë 0;  'j'; 
	}
}

15 
	$ã°_if11
(Ë{ i‡(0.5Ë 'k';  0; 
	}
}

17 
	$ã°_if
() {

18 
	`ex≥˘
('a', 
	`ã°_if1
());

19 
	`ex≥˘
('b', 
	`ã°_if2
());

20 
	`ex≥˘
('c', 
	`ã°_if3
());

21 
	`ex≥˘
('d', 
	`ã°_if4
());

22 
	`ex≥˘
('e', 
	`ã°_if5
());

23 
	`ex≥˘
('f', 
	`ã°_if6
());

24 
	`ex≥˘
('g', 
	`ã°_if7
());

25 
	`ex≥˘
('h', 
	`ã°_if8
());

26 
	`ex≥˘
('i', 
	`ã°_if9
());

27 
	`ex≥˘
('j', 
	`ã°_if10
());

28 
	`ex≥˘
('k', 
	`ã°_if11
());

29 
	}
}

31 
	$ã°_f‹
() {

32 
i
;

33 
acc
 = 0;

34 
i
 = 0; i < 5; i++) {

35 
acc
 =ác¯+ 
i
;

37 
	`ex≥˘
(10, 
acc
);

39 
acc
 = 0;

40 
i
 = 0; i < 5; i++) {

41 
acc
 =ác¯+ 
i
;

43 
	`ex≥˘
(10, 
acc
);

45 
acc
 = 0;

46 
i
 = 0; i < 100; i++) {

47 i‡(
i
 < 5) ;

48 i‡(
i
 == 9) ;

49 
acc
 +
i
;

51 
	`ex≥˘
(5 + 6 + 7 + 8, 
acc
);

53 
x
 = 3, 
y
 = 5, 
z
 = 8; x < 100; x++, y++, z+=2)

54 
	`ex≥˘
(
z
, 
x
 + 
y
);

58 
i
 = 0; i < 100; i++)

61 
i
 = 0;

63 
i
 = 68;

66 
	`ex≥˘
(68, 
i
);

67 
	}
}

69 
	$ã°_whûe
() {

70 
acc
 = 0;

71 
i
 = 0;

72 
i
 <= 100)

73 
acc
 =ác¯+ 
i
++;

74 
	`ex≥˘
(5050, 
acc
);

76 
acc
 = 1;

77 
i
 = 0;

78 
i
 <= 100) {

79 
acc
 =ác¯+ 
i
++;

81 
	`ex≥˘
(5051, 
acc
);

83 
acc
 = 0;

84 
i
 = 0;

85 
i
 < 10) {

86 i‡(
i
++ < 5) ;

87 
acc
 +
i
;

88 i‡(
i
 == 9) ;

90 
	`ex≥˘
(6 + 7 + 8 + 9, 
acc
);

92 
i
 = 0;

93 
i
++ < 100)

96 
i
 = 0;

98 
i
 = 67;

101 
	`ex≥˘
(67, 
i
);

102 
	}
}

104 
	$ã°_do
() {

105 
acc
 = 0;

106 
i
 = 0;

108 
acc
 =ác¯+ 
i
++;

109 } 
i
 <= 100);

110 
	`ex≥˘
(5050, 
acc
);

112 
i
 = 0;

113 dÿ{ 
i
 = 37; } 0);

114 
	`ex≥˘
(37, 
i
);

116 
acc
 = 0;

117 
i
 = 0;

119 i‡(
i
++ < 5) ;

120 
acc
 +
i
;

121 i‡(
i
 == 9) ;

122 } 
i
 < 10);

123 
	`ex≥˘
(6 + 7 + 8 + 9, 
acc
);

125 
i
 = 0;

126 dÿ{} 
i
++ < 100);

128 
i
 = 0;

129 do; 
i
++ < 100);

131 
v
 = 1;

132 
i
 = 70;

133 dÿ
i
++; 
v
 -= 0.5);

134 
	`ex≥˘
(72, 
i
);

135 
	}
}

137 
	$ã°_swôch
() {

138 
a
 = 0;

140 0: 
	`Áû
("0");

141 3: 
a
 = 3; ;

142 1: 
	`Áû
("1");

144 
	`ex≥˘
(
a
, 3);

146 
a
 = 0;

148 0: 
a
++;

149 1: 
a
++;

150 2: 
a
++;

151 3: 
a
++;

153 
a
 = 3;

155 
a
 = 0;

157 0: 
a
++;

158 : 
a
 = 55;

160 
	`ex≥˘
(
a
, 55);

162 
a
 = 0;

164 0: 
a
++;

166 
	`ex≥˘
(
a
, 0);

168 
a
 = 5;

170 
a
++;

172 
	`ex≥˘
(
a
, 5);

175 1 ... 2: 
	`Áû
("switch");

176 3: 
	`Áû
("switch");

178 : 
	`Áû
("switch");

181 
a
 = 0;

182 
cou¡
 = 27;

183 
cou¡
 % 8) {

184 0: dÿ{ 
a
++;

185 7: 
a
++;

186 6: 
a
++;

187 5: 
a
++;

188 4: 
a
++;

189 3: 
a
++;

190 2: 
a
++;

191 1: 
a
++;

192 } (
cou¡
 -= 8) > 0);

194 
	`ex≥˘
(27, 
a
);

198 
	}
}

200 
	$ã°_gŸo
() {

201 
acc
 = 0;

202 
x
;

203 
acc
 = 5;

204 
x
: 
	`ex≥˘
(0, 
acc
);

206 
i
 = 0;

207 
acc
 = 0;

208 
y
: i‡(
i
 > 10Ë
z
;

209 
acc
 +
i
++;

210 
y
;

211 
z
: i‡(
i
 > 11Ë
a
;

212 
	`ex≥˘
(55, 
acc
);

213 
i
++;

214 
y
;

215 
a
:

217 
	}
}

219 
	$ã°_œbñ
() {

220 
x
 = 0;

222 
L1
: 
x
++;

223 
	`ex≥˘
(1, 
x
);

225 
y
 = 0;

227 
L2
: 
y
++;

228 
	`ex≥˘
(0, 
y
);

230 
z
 = 0;

233 5: 
z
 += 2;

235 7: 
z
 += 3;

237 6: 
z
 += 5;

239 
	`ex≥˘
(8, 
z
);

240 
	}
}

242 
	$ã°_compuãd_gŸo
() {

243 °ru˘ { *
x
, *
y
, *
z
, *
a
; } 
t
 = { &&x, &&y, &&z, &&a };

244 
acc
 = 0;

245 *
t
.
x
;

246 
acc
 = 5;

247 
x
: 
	`ex≥˘
(0, 
acc
);

249 
i
 = 0;

250 
acc
 = 0;

251 
y
: i‡(
i
 > 10Ë*
t
.
z
;

252 
acc
 +
i
++;

253 *
t
.
y
;

254 
z
: i‡(
i
 > 11Ë*
t
.
a
;

255 
	`ex≥˘
(55, 
acc
);

256 
i
++;

257 *
t
.
y
;

258 
a
:

260 *
p
 = &&
L
;

261 *
p
;

262 
L
:

264 
	}
}

266 
	$ã°_log‹
() {

267 
	`ex≥˘
(1, 0 || 3);

268 
	`ex≥˘
(1, 5 || 0);

269 
	`ex≥˘
(0, 0 || 0);

270 
	}
}

272 
	$ã°maö
() {

273 
	`¥öt
("control flow");

274 
	`ã°_if
();

275 
	`ã°_f‹
();

276 
	`ã°_whûe
();

277 
	`ã°_do
();

278 
	`ã°_swôch
();

279 
	`ã°_gŸo
();

280 
	`ã°_œbñ
();

281 
	`ã°_compuãd_gŸo
();

282 
	`ã°_log‹
();

283 
	}
}

	@8cc/test/conversion.c

3 
	~"ã°.h
"

5 
	$ã°_boﬁ
() {

6 
_Boﬁ
 
v
 = 3;

7 
	`ex≥˘
(1, 
v
);

8 
v
 = 5;

9 
	`ex≥˘
(1, 
v
);

10 
v
 = 0.5;

11 
	`ex≥˘
(1, 
v
);

12 
v
 = 0.0;

13 
	`ex≥˘
(0, 
v
);

14 
	}
}

16 
	$ã°_Êﬂt
() {

17 
a
 = 4.0;

18 
b
 = 
a
;

19 
	`ex≥˘f
(4, 
b
);

20 
	}
}

22 
	$ã°maö
() {

23 
	`¥öt
("type conversion");

24 
	`ã°_boﬁ
();

25 
	`ã°_Êﬂt
();

26 
	}
}

	@8cc/test/decl.c

3 
	~"ã°.h
"

5 
	$t1
() {

6 
a
 = 1;

7 
	`ex≥˘
(3, 
a
 + 2);

8 
	}
}

10 
	$t2
() {

11 
a
 = 1;

12 
b
 = 48 + 2;

13 
c
 = 
a
 + 
b
;

14 
	`ex≥˘
(102, 
c
 * 2);

15 
	}
}

17 
	$t3
() {

18 
a
[] = { 55 };

19 *
b
 = 
a
;

20 
	`ex≥˘
(55, *
b
);

21 
	}
}

23 
	$t4
() {

24 
a
[] = { 55, 67 };

25 *
b
 = 
a
 + 1;

26 
	`ex≥˘
(67, *
b
);

27 
	}
}

29 
	$t5
() {

30 
a
[] = { 20, 30, 40 };

31 *
b
 = 
a
 + 1;

32 
	`ex≥˘
(30, *
b
);

33 
	}
}

35 
	$t6
() {

36 
a
[] = { 20, 30, 40 };

37 
	`ex≥˘
(20, *
a
);

38 
	}
}

40 ((
	gt7
))();

41 ((*
	gt8
))();

42 ((*(**
	gt9
))(*(), (*), ()));

44 
	$ã°maö
() {

45 
	`¥öt
("declaration");

46 
	`t1
();

47 
	`t2
();

48 
	`t3
();

49 
	`t4
();

50 
	`t5
();

51 
	`t6
();

52 
	}
}

	@8cc/test/enum.c

3 
	~"ã°.h
"

5 íum { 
	mg1
, 
	mg2
, 
	mg3
 } 
	gglobÆ1
;

7 
	$ã°maö
() {

8 
	`¥öt
("enum");

10 
	`ex≥˘
(0, 
g1
);

11 
	`ex≥˘
(2, 
g3
);

13 íum { 
x
 } 
v
;

14 
	`ex≥˘
(0, 
x
);

16 íum { 
y
 };

17 
	`ex≥˘
(0, 
y
);

19 
	eèg
 { 
z
 };

20 
èg
 
a
 = 
z
;

21 
	`ex≥˘
(0, 
z
);

22 
	`ex≥˘
(0, 
a
);

23 
	}
}

	@8cc/test/extern.c

3 
	~"ã°.h
"

5 
exã∫v¨1
;

6 
exã∫v¨2
;

8 
	$ã°maö
() {

9 
	`¥öt
("extern");

10 
	`ex≥˘
(98, 
exã∫v¨1
);

11 
	`ex≥˘
(99, 
exã∫v¨2
);

12 
	}
}

	@8cc/test/float.c

3 
	~<Êﬂt.h
>

4 
	~<°d¨g.h
>

5 
	~<°döt.h
>

6 
	~"ã°.h
"

8 
	$tf1
(
a
Ë{ á; 
	}
}

9 
	$tf2
(
a
Ë{ á; 
	}
}

10 
	$tf3
(
a
Ë{ á; 
	}
}

12 
	$td1
(
a
Ë{ á; 
	}
}

13 
	$td2
(
a
Ë{ á; 
	}
}

14 
	$td3
(
a
Ë{ á; 
	}
}

16 
	$ªcursive
(
a
) {

17 i‡(
a
 < 10) á;

18  
	`ªcursive
(3.33);

19 
	}
}

21 *
	$fmt
(*
fmt
, ...) {

22 
buf
[128];

23 
va_li°
 
¨gs
;

24 
	`va_°¨t
(
¨gs
, 
fmt
);

25 
	`v¢¥ötf
(
buf
, (buf), 
fmt
, 
¨gs
);

26 
	`va_íd
(
¨gs
);

27  
buf
;

28 
	}
}

30 *
	$fmtöt
(
x
Ë{  
	`fmt
("%d", x); 
	}
}

31 *
	$fmtdbl
(
x
Ë{  
	`fmt
("%a", x); 
	}
}

33 
	$°d
() {

34 
	`ex≥˘_°rög
("21", 
	`fmtöt
(
DECIMAL_DIG
));

35 
	`ex≥˘_°rög
("0", 
	`fmtöt
(
FLT_EVAL_METHOD
));

36 
	`ex≥˘_°rög
("2", 
	`fmtöt
(
FLT_RADIX
));

37 
	`ex≥˘_°rög
("1", 
	`fmtöt
(
FLT_ROUNDS
));

39 
	`ex≥˘_°rög
("6", 
	`fmtöt
(
FLT_DIG
));

40 
	`ex≥˘_°rög
("0x1p-23", 
	`fmtdbl
(
FLT_EPSILON
));

41 
	`ex≥˘_°rög
("24", 
	`fmtöt
(
FLT_MANT_DIG
));

42 
	`ex≥˘_°rög
("0x1.ffff„p+127", 
	`fmtdbl
(
FLT_MAX
));

43 
	`ex≥˘_°rög
("38", 
	`fmtöt
(
FLT_MAX_10_EXP
));

44 
	`ex≥˘_°rög
("128", 
	`fmtöt
(
FLT_MAX_EXP
));

45 
	`ex≥˘_°rög
("0x1p-126", 
	`fmtdbl
(
FLT_MIN
));

46 
	`ex≥˘_°rög
("-37", 
	`fmtöt
(
FLT_MIN_10_EXP
));

47 
	`ex≥˘_°rög
("-125", 
	`fmtöt
(
FLT_MIN_EXP
));

48 
	`ex≥˘d
(*(*)&(
uöt32_t
){1}, 
FLT_TRUE_MIN
);

49 
	`ex≥˘_°rög
("0x1p-149", 
	`fmtdbl
(
FLT_TRUE_MIN
));

51 
	`ex≥˘_°rög
("15", 
	`fmtöt
(
DBL_DIG
));

52 
	`ex≥˘_°rög
("0x1p-52", 
	`fmtdbl
(
DBL_EPSILON
));

53 
	`ex≥˘_°rög
("53", 
	`fmtöt
(
DBL_MANT_DIG
));

54 
	`ex≥˘_°rög
("0x1.ffffffffffffÂ+1023", 
	`fmtdbl
(
DBL_MAX
));

55 
	`ex≥˘_°rög
("308", 
	`fmtöt
(
DBL_MAX_10_EXP
));

56 
	`ex≥˘_°rög
("1024", 
	`fmtöt
(
DBL_MAX_EXP
));

57 
	`ex≥˘_°rög
("0x1p-1022", 
	`fmtdbl
(
DBL_MIN
));

58 
	`ex≥˘_°rög
("-307", 
	`fmtöt
(
DBL_MIN_10_EXP
));

59 
	`ex≥˘_°rög
("-1021", 
	`fmtöt
(
DBL_MIN_EXP
));

60 
	`ex≥˘d
(*(*)&(
uöt64_t
){1}, 
DBL_TRUE_MIN
);

61 
	`ex≥˘_°rög
("0x0.0000000000001p-1022", 
	`fmtdbl
(
DBL_TRUE_MIN
));

63 #ifde‡
__8cc__


64 
	`ex≥˘_°rög
("15", 
	`fmtöt
(
LDBL_DIG
));

65 
	`ex≥˘_°rög
("0x1p-52", 
	`fmtdbl
(
LDBL_EPSILON
));

66 
	`ex≥˘_°rög
("53", 
	`fmtöt
(
LDBL_MANT_DIG
));

67 
	`ex≥˘_°rög
("0x1.ffffffffffffÂ+1023", 
	`fmtdbl
(
LDBL_MAX
));

68 
	`ex≥˘_°rög
("308", 
	`fmtöt
(
LDBL_MAX_10_EXP
));

69 
	`ex≥˘_°rög
("1024", 
	`fmtöt
(
LDBL_MAX_EXP
));

70 
	`ex≥˘_°rög
("0x1p-1022", 
	`fmtdbl
(
LDBL_MIN
));

71 
	`ex≥˘_°rög
("-307", 
	`fmtöt
(
LDBL_MIN_10_EXP
));

72 
	`ex≥˘_°rög
("-1021", 
	`fmtöt
(
LDBL_MIN_EXP
));

73 
	`ex≥˘d
(*(*)&(
uöt64_t
){1}, 
LDBL_TRUE_MIN
);

74 
	`ex≥˘_°rög
("0x0.0000000000001p-1022", 
	`fmtdbl
(
LDBL_TRUE_MIN
));

76 
	}
}

78 
	$ã°maö
() {

79 
	`¥öt
("float");

80 
	`°d
();

82 
	`ex≥˘
(0.7, .7);

83 
v1
 = 10.0;

84 
v2
 = 
v1
;

85 
	`ex≥˘f
(10.0, 
v1
);

86 
	`ex≥˘f
(10.0, 
v2
);

88 
v3
 = 20.0;

89 
v4
 = 
v3
;

90 
	`ex≥˘d
(20.0, 
v3
);

91 
	`ex≥˘d
(20.0, 
v4
);

93 
	`ex≥˘f
(1.0, 1.0);

94 
	`ex≥˘f
(1.5, 1.0 + 0.5);

95 
	`ex≥˘f
(0.5, 1.0 - 0.5);

96 
	`ex≥˘f
(2.0, 1.0 * 2.0);

97 
	`ex≥˘f
(0.25, 1.0 / 4.0);

99 
	`ex≥˘f
(3.0, 1.0 + 2);

100 
	`ex≥˘f
(2.5, 5 - 2.5);

101 
	`ex≥˘f
(2.0, 1.0 * 2);

102 
	`ex≥˘f
(0.25, 1.0 / 4);

104 
	`ex≥˘f
(10.5, 
	`tf1
(10.5));

105 
	`ex≥˘f
(10.0, 
	`tf1
(10));

106 
	`ex≥˘f
(10.6, 
	`tf2
(10.6));

107 
	`ex≥˘f
(10.0, 
	`tf2
(10));

108 
	`ex≥˘f
(10.0, 
	`tf3
(10.7));

109 
	`ex≥˘f
(10.0, 
	`tf3
(10));

111 
	`ex≥˘d
(1.0, 
	`tf1
(1.0));

112 
	`ex≥˘d
(10.0, 
	`tf1
(10));

113 
	`ex≥˘d
(2.0, 
	`tf2
(2.0));

114 
	`ex≥˘d
(10.0, 
	`tf2
(10));

115 
	`ex≥˘d
(11.0, 
	`tf3
(11.5));

116 
	`ex≥˘d
(10.0, 
	`tf3
(10));

118 
	`ex≥˘d
(3.33, 
	`ªcursive
(100));

119 
	}
}

	@8cc/test/funcargs.c

3 
	~"ã°.h
"

5 
	$m™y_öts
(
v1
, 
v2
, 
v3
, 
v4
, 
v5
, 
v6
, 
v7
, 
v8
, 
v9
) {

6 
	`ex≥˘
(1, 
v1
);Éx≥˘(2, 
v2
);Éx≥˘(3, 
v3
);Éx≥˘(4, 
v4
);

7 
	`ex≥˘
(5, 
v5
);Éx≥˘(6, 
v6
);Éx≥˘(7, 
v7
);Éx≥˘(8, 
v8
);

8 
	`ex≥˘
(9, 
v9
);

9 
	}
}

11 
	$m™y_Êﬂts
(
v01
, 
v02
, 
v03
, 
v04
, 
v05
,

12 
v06
, 
v07
, 
v08
, 
v09
, 
v10
,

13 
v11
, 
v12
, 
v13
, 
v14
, 
v15
,

14 
v16
, 
v17
) {

15 
	`ex≥˘f
(1, 
v01
);Éx≥˘f(2, 
v02
);Éx≥˘f(3, 
v03
);Éx≥˘f(4, 
v04
);

16 
	`ex≥˘f
(5, 
v05
);Éx≥˘f(6, 
v06
);Éx≥˘f(7, 
v07
);Éx≥˘f(8, 
v08
);

17 
	`ex≥˘f
(9, 
v09
);Éx≥˘f(10, 
v10
);Éx≥˘f(11, 
v11
);Éx≥˘f(12, 
v12
);

18 
	`ex≥˘f
(13, 
v13
);Éx≥˘f(14, 
v14
);Éx≥˘f(15, 
v15
);Éx≥˘f(16, 
v16
);

19 
	`ex≥˘f
(17, 
v17
);

20 
	}
}

22 
	$mixed
(
v01
, 
v02
, 
v03
, 
v04
, 
v05
, 
v06
, 
v07
, 
v08
,

23 
v09
, 
v10
, 
v11
, 
v12
, 
v13
, 
v14
, 
v15
, 
v16
,

24 
v17
, 
v18
, 
v19
, 
v20
, 
v21
, 
v22
, 
v23
, 
v24
,

25 
v25
, 
v26
, 
v27
, 
v28
, 
v29
, 
v30
, 
v31
, 
v32
,

26 
v33
, 
v34
, 
v35
, 
v36
, 
v37
, 
v38
, 
v39
, 
v40
) {

27 
	`ex≥˘f
(1.0, 
v01
); 
	`ex≥˘
(2, 
v02
);Éx≥˘f(3.0, 
v03
);Éx≥˘(4, 
v04
);

28 
	`ex≥˘f
(5.0, 
v05
); 
	`ex≥˘
(6, 
v06
);Éx≥˘f(7.0, 
v07
);Éx≥˘(8, 
v08
);

29 
	`ex≥˘f
(9.0, 
v09
); 
	`ex≥˘
(10, 
v10
);Éx≥˘f(11.0, 
v11
);Éx≥˘(12, 
v12
);

30 
	`ex≥˘f
(13.0, 
v13
); 
	`ex≥˘
(14, 
v14
);Éx≥˘f(15.0, 
v15
);Éx≥˘(16, 
v16
);

31 
	`ex≥˘f
(17.0, 
v17
); 
	`ex≥˘
(18, 
v18
);Éx≥˘f(19.0, 
v19
);Éx≥˘(20, 
v20
);

32 
	`ex≥˘f
(21.0, 
v21
); 
	`ex≥˘
(22, 
v22
);Éx≥˘f(23.0, 
v23
);Éx≥˘(24, 
v24
);

33 
	`ex≥˘f
(25.0, 
v25
); 
	`ex≥˘
(26, 
v26
);Éx≥˘f(27.0, 
v27
);Éx≥˘(28, 
v28
);

34 
	`ex≥˘f
(29.0, 
v29
); 
	`ex≥˘
(30, 
v30
);Éx≥˘f(31.0, 
v31
);Éx≥˘(32, 
v32
);

35 
	`ex≥˘f
(33.0, 
v33
); 
	`ex≥˘
(34, 
v34
);Éx≥˘f(35.0, 
v35
);Éx≥˘(36, 
v36
);

36 
	`ex≥˘f
(37.0, 
v37
); 
	`ex≥˘
(38, 
v38
);Éx≥˘f(39.0, 
v39
);Éx≥˘(40, 
v40
);

37 
	}
}

39 
	$ã°maö
() {

40 
	`¥öt
("functionárgument");

42 
	`m™y_öts
(1, 2, 3, 4, 5, 6, 7, 8, 9);

44 
	`m™y_Êﬂts
(1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0,

48 
	`mixed
(1.0, 2, 3.0, 4, 5.0, 6, 7.0, 8, 9.0, 10,

52 
	}
}

	@8cc/test/function.c

3 
	~"ã°.h
"

4 
	~<°dboﬁ.h
>

6 
	$t1
() {

8 
	}
}

10 
	$t2
(
a
) {

11 
	`ex≥˘
(79, 
a
);

12 
	}
}

14 
	$t3
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
) {

15 
	`ex≥˘
(1, 
a
);

16 
	`ex≥˘
(2, 
b
);

17 
	`ex≥˘
(3, 
c
);

18 
	`ex≥˘
(4, 
d
);

19 
	`ex≥˘
(5, 
e
);

20 
	`ex≥˘
(6, 
f
);

21 
	}
}

23 
	$t4a
(*
p
) {

24  *
p
;

25 
	}
}

27 
	$t4
() {

28 
a
[] = { 98 };

29 
	`ex≥˘
(98, 
	`t4a
(
a
));

30 
	}
}

32 
	$t5a
(*
p
) {

33 
	`ex≥˘
(99, *
p
);Ö=p+1;

34 
	`ex≥˘
(98, *
p
);Ö=p+1;

35 
	`ex≥˘
(97, *
p
);

36 
	}
}

38 
	$t5b
(
p
[]) {

39 
	`ex≥˘
(99, *
p
);Ö=p+1;

40 
	`ex≥˘
(98, *
p
);Ö=p+1;

41 
	`ex≥˘
(97, *
p
);

42 
	}
}

44 
	$t5
() {

45 
a
[] = {1, 2, 3};

46 *
p
 = 
a
;

47 *
p
 = 99;Ö =Ö + 1;

48 *
p
 = 98;Ö =Ö + 1;

49 *
p
 = 97;

50 
	`t5a
(
a
);

51 
	`t5b
(
a
);

52 
	}
}

54 
t6
();

55 
	$t6
() {

57 
	}
}

59 
t7
(
a
, 
b
);

60 
	$t7
(
a
, 
b
) {

61  
a
 * 
b
;

62 
	}
}

64 
	$t8
(
a
, ...) {

65 
	`ex≥˘
(23, 
a
);

66 
	}
}

68 
	$t9
() {

70 
	}
}

72 
	$t10
(
a
, 
b
) {

73  
a
 + 
b
;

74 
	}
}

76 
	$±πe°1
() {

78 
	}
}

80 
	$±πe°2
(
a
) {

81  
a
 * 2;

82 
	}
}

84 
	$±πe°3
(
a
) {

85  
a
 * 2;

86 
	}
}

88 
±πe°4
((
f
)(), 
x
) {

89  
	`f
(
x
);

90 
	}
}

92 
	$func_±r_ˇŒ
() {

93 
	`ex≥˘f
(4, 
	`±πe°3
(2));

94 (*
p1
)(Ë
±πe°1
;

95 
	`ex≥˘
(55, 
	`p1
());

96 (*
p2
)(Ë
±πe°2
;

97 
	`ex≥˘
(110, 
	`p2
(55));

98 (*
p3
)(Ë
±πe°3
;

99 
	`ex≥˘f
(4, 
	`p3
(2));

100 (*
p4
)(Ë&
±πe°1
;

101 
	`ex≥˘
(55, (**
p4
)());

102 
	`ex≥˘
(10, 
	`±πe°4
(
±πe°2
, 5));

103 
	}
}

105 
	$func_«me
() {

106 
	`ex≥˘_°rög
("func_«me", 
__func__
);

107 
	`ex≥˘_°rög
("func_«me", 
__FUNCTION__
);

108 
	}
}

110 
	$loˇl_°©ic2
() {

111 
x
 = 1;

112 
y
[] = "2";

113 
z
;

114 
z
 = 3;

115  
x
++ + (
y
[0] - '0'Ë+ 
z
;

116 
	}
}

118 
	$loˇl_°©ic3
() {

119 
x
 = 5;

120 
y
[] = "8";

121 
z
;

122 
z
 = 100;

123 
	}
}

125 
	$loˇl_°©ic
() {

126 
	`ex≥˘
(6, 
	`loˇl_°©ic2
());

127 
	`ex≥˘
(7, 
	`loˇl_°©ic2
());

128 
	`loˇl_°©ic3
();

129 
	`ex≥˘
(8, 
	`loˇl_°©ic2
());

130 
	}
}

132 
	$em±y
() {

133 
	}
}

135 
	$em±y2
() {

137 
	}
}

139 
boﬁã°1
(
x
);

141 
boﬁ
 
	$boﬁã°2
(
x
) {

142  
x
;

143 
	}
}

145 
	$ã°_boﬁ
() {

146 
	`ex≥˘
(0, 
	`boﬁã°1
(256));

147 
	`ex≥˘
(1, 
	`boﬁã°1
(257));

148 
	`ex≥˘
(1, 
	`boﬁã°2
(512));

149 
	`ex≥˘
(1, 
	`boﬁã°2
(513));

150 
	}
}

152 °ru˘ { 
	ma
, 
	mb
, 
	mc
, 
	md
; } 
	tMyTy≥
;

154 
	$sum
(
MyTy≥
 
x
) {

155  
x
.
a
 + x.
b
 + x.
c
 + x.
d
;

156 
	}
}

158 
	$ã°_°ru˘
() {

159 
	`ex≥˘
(14, 
	`sum
((
MyTy≥
){ 2, 3, 4, 5 }));

160 
	}
}

162 
	$ã°_funcdesg
() {

163 
ã°_funcdesg
;

164 
	}
}

166 (*
	tt6_t
)();

168 
t6_t
 
	$ªtfunc
() {

169  &
t6
;

170 
	}
}

172 
t6_t
 
	$ªtfunc2
() {

173  
t6
;

174 
	}
}

178 
	$_Alig«s
(32Ë
ch¨32
;

180 
	$ã°maö
() {

181 
	`¥öt
("function");

183 
	`ex≥˘
(77, 
	`t1
());

184 
	`t2
(79);

185 
	`t3
(1, 2, 3, 4, 5, 6);

186 
	`t4
();

187 
	`t5
();

188 
	`ex≥˘
(3, 
	`t6
());

189 
	`ex≥˘
(12, 
	`t7
(3, 4));

190 
	`ex≥˘
(77, (1 ? 
t1
 : 
t6
)());

191 
	`ex≥˘
(3, (0 ? 
t1
 : 
t6
)());

192 
	`t8
(23);

193 
	`t9
();

194 
	`ex≥˘
(7, 
	`t10
(3, 4.0));

195 
	`func_±r_ˇŒ
();

196 
	`func_«me
();

197 
	`loˇl_°©ic
();

198 
	`em±y
();

199 
	`em±y2
();

200 
	`ã°_boﬁ
();

201 
	`ã°_°ru˘
();

202 
	`ã°_funcdesg
();

203 
	`ex≥˘
(3, 
	`ªtfunc
()());

204 
	`ex≥˘
(3, 
	`ªtfunc2
()());

205 
	}
}

	@8cc/test/generic.c

3 
	~<°dboﬁ.h
>

4 
	~"ã°.h
"

6 #ifde‡
__8cc__


8 
	$ã°_basic
() {

9 
	`ex≥˘
(1, 
	`_Gíîic
(5, : 1, : 2));

10 
	`ex≥˘d
(3.0, 
	`_Gíîic
(5.0, : 1, : 2.0, : 3.0));

11 
	}
}

13 
	$ã°_¨ôh
() {

14 sig√d 
	tsch¨
;

15 
	tuch¨
;

16 
	tush‹t
;

17 
	tuöt
;

18 
	tul⁄g
;

19 
	tŒ⁄g
;

20 
	tuŒ⁄g
;

21 
	tldoubÀ
;

23 íum { 
B
, 
SC
, 
UC
, 
S
, 
US
, 
I
, 
U
, 
L
, 
UL
, 
LL
, 
ULL
, 
F
, 
D
, 
LD
 };

25 
	#T
(
x
) \

26 
	`_Gíîic
(
x
, 
boﬁ
:
B
, 
sch¨
:
SC
, 
uch¨
:
UC
, :
S
, 
ush‹t
:
US
, \

27 :
I
, 
uöt
:
U
, :
L
, 
ul⁄g
:
UL
, 
Œ⁄g
:
LL
, 
uŒ⁄g
:
ULL
, \

28 :
F
, :
D
, 
ldoubÀ
:
LD
)

	)

29 
	`ex≥˘
(
B
, 
	`T
((
boﬁ
)0));

30 
	`ex≥˘
(
SC
, 
	`T
((
sch¨
)0));

31 
	`ex≥˘
(
UC
, 
	`T
((
uch¨
)0));

32 
	`ex≥˘
(
I
, 
	`T
('a'));

33 
	`ex≥˘
(
US
, 
	`T
(
u
'a'));

34 
	`ex≥˘
(
U
, 
	`T
(U'a'));

35 
	`ex≥˘
(
I
, 
	`T
(0));

36 
	`ex≥˘
(
U
, 
	`T
(0U));

37 
	`ex≥˘
(
L
, 
	`T
(0L));

38 
	`ex≥˘
(
UL
, 
	`T
(0UL));

39 
	`ex≥˘
(
LL
, 
	`T
(0LL));

40 
	`ex≥˘
(
ULL
, 
	`T
(0ULL));

41 
	`ex≥˘
(
F
, 
	`T
(0.0F));

42 
	`ex≥˘
(
D
, 
	`T
(0.0));

43 
	`ex≥˘
(
LD
, 
	`T
(0.0L));

45 
	`ex≥˘
(
I
, 
	`T
((
boﬁ
)0 + (bool)0));

46 
	`ex≥˘
(
I
, 
	`T
(()0 + ()0));

47 
	`ex≥˘
(
I
, 
	`T
(()0 + (
uch¨
)0));

48 
	`ex≥˘
(
I
, 
	`T
(0 + ()0));

49 
	`ex≥˘
(
U
, 
	`T
(0 + 0U));

50 
	`ex≥˘
(
L
, 
	`T
(0 + 0L));

51 
	`ex≥˘
(
LL
, 
	`T
(0LL + 0));

52 
	`ex≥˘
(
LL
, 
	`T
(0L + 0LL));

53 
	`ex≥˘
(
LL
, 
	`T
(0LL + 0U));

54 
	`ex≥˘
(
UL
, 
	`T
(0UL + 0));

55 
	`ex≥˘
(
UL
, 
	`T
(0L + 0UL));

56 
	`ex≥˘
(
LL
, 
	`T
(0LL + 0U));

57 
	`ex≥˘
(
ULL
, 
	`T
(0LU + 0LL));

58 
	`ex≥˘
(
ULL
, 
	`T
(0ULL + 0U));

59 
	`ex≥˘
(
ULL
, 
	`T
(0ULL + 0U));

60 
	`ex≥˘
(
D
, 
	`T
(0 + 0.0));

61 
	`ex≥˘
(
LD
, 
	`T
(0.0L + 0));

63 
	`ex≥˘
(
I
, 
	`T
(0 << 0L));

64 
	`ex≥˘
(
I
, 
	`T
(0 << 0LL));

65 
	`ex≥˘
(
UL
, 
	`T
(0UL << 0));

66 
	`ex≥˘
(
LL
, 
	`T
(0LL << 0));

67 
	`ex≥˘
(
LL
, 
	`T
(0 ? 0LL : 0L));

68 
	`ex≥˘
(
LL
, 
	`T
(0 ? 0L : 0LL));

70 
	`ex≥˘
(
L
, 
	`T
(4000000000));

71 
	`ex≥˘
(
L
, 
	`T
(1000000000000000000));

72 
	`ex≥˘
(
I
, 
	`T
(0x7FFFFFFF));

73 
	`ex≥˘
(
U
, 
	`T
(0x80000000));

74 
	`ex≥˘
(
U
, 
	`T
(0xFFFFFFFF));

75 
	`ex≥˘
(
L
, 
	`T
(0x100000000));

76 
	`ex≥˘
(
L
, 
	`T
(0x7FFFFFFFFFFFFFFF));

77 
	`ex≥˘
(
UL
, 
	`T
(0x8000000000000000));

78 
	`ex≥˘
(
UL
, 
	`T
(0xFFFFFFFFFFFFFFFF));

79 
	`ex≥˘
(
I
, 
	`T
(017777777777));

80 
	`ex≥˘
(
U
, 
	`T
(020000000000));

81 
	`ex≥˘
(
U
, 
	`T
(037777777777));

82 
	`ex≥˘
(
L
, 
	`T
(040000000000));

83 
	`ex≥˘
(
L
, 
	`T
(0777777777777777777777));

84 
	`ex≥˘
(
UL
, 
	`T
(01000000000000000000000));

85 
	`ex≥˘
(
UL
, 
	`T
(01777777777777777777777));

86 #unde‡
T


87 
	}
}

89 
	$ã°_deÁu…
() {

90 
	`ex≥˘
(1, 
	`_Gíîic
(5, : 1, : 2));

91 
	`ex≥˘d
(3.0, 
	`_Gíîic
(5.0, : 1, : 2.0, : 3.0));

92 
	}
}

94 
	$ã°_°ru˘
() {

95 
	st1
 { 
x
, 
y
; } 
v1
;

96 
	st2
 { 
x
, 
y
, 
z
; } 
v2
;

97 
	`ex≥˘
(10, 
	`_Gíîic
(
v1
, 
t1
: 10, 
t2
: 11, : 12));

98 
	`ex≥˘
(11, 
	`_Gíîic
(
v2
, 
t1
: 10, 
t2
: 11, : 12));

99 
	`ex≥˘
(12, 
	`_Gíîic
(99, 
t1
: 10, 
t2
: 11, : 12));

100 
	}
}

102 
	$ã°_¨øy
() {

103 
	`ex≥˘
(20, 
	`_Gíîic
("abc", [4]: 20, : 21));

104 
	`ex≥˘
(22, 
	`_Gíîic
((*)
NULL
, *: 22, : 23));

105 
	`ex≥˘
(23, 
	`_Gíîic
((*)
NULL
, [1]: 22, : 23));

106 
	}
}

108 
	$ã°maö
() {

109 
	`¥öt
("_Generic");

110 
	`ã°_basic
();

111 
	`ã°_¨ôh
();

112 
	`ã°_deÁu…
();

113 
	`ã°_°ru˘
();

114 
	`ã°_¨øy
();

115 
	}
}

119 
	$ã°maö
() {

120 
	`¥öt
("_Generic");

121 
	}
}

	@8cc/test/global.c

3 
	~"ã°.h
"

5 
	gdeÁu…öt
;

7 
	gvÆ
 = 21;

8 *
	gp1
 = &
vÆ
;

10 
	ga1
[3];

11 
	ga2
[3] = { 24, 25, 26 };

12 
	gx1
, 
	gx2
;

13 
	gx3
, 
	gx4
 = 4;

14 
	gx5
 = 5, 
	gx6
;

16 
	gs1
[] = "abcd";

17 *
	gs2
 = "ABCD";

18 
	gl1
 = 8;

19 *
	göç
 = &(){ 9 };

21 
	$ã°maö
() {

22 
	`¥öt
("global variable");

24 
deÁu…öt
 = 3;

25 
	`ex≥˘
(3, 
deÁu…öt
);

27 
	`ex≥˘
(21, 
vÆ
);

28 
vÆ
 = 22;

29 
	`ex≥˘
(22, 
vÆ
);

30 
	`ex≥˘
(22, *
p1
);

32 
a1
[1] = 23;

33 
	`ex≥˘
(23, 
a1
[1]);

34 
	`ex≥˘
(25, 
a2
[1]);

36 
x1
 = 1;

37 
x2
 = 2;

38 
	`ex≥˘
(1, 
x1
);

39 
	`ex≥˘
(2, 
x2
);

40 
x3
 = 3;

41 
	`ex≥˘
(3, 
x3
);

42 
	`ex≥˘
(4, 
x4
);

43 
	`ex≥˘
(5, 
x5
);

44 
x6
 = 6;

45 
	`ex≥˘
(6, 
x6
);

47 
	`ex≥˘_°rög
("abcd", 
s1
);

48 
	`ex≥˘_°rög
("ABCD", 
s2
);

50 
	`ex≥˘l
(8, 
l1
);

51 
	`ex≥˘l
(9, *
öç
);

52 
	}
}

	@8cc/test/import.c

3 
	~"ã°.h
"

8 
	~"imp‹t.h
"

12 
	~"⁄˚.h
"

13 
	~"⁄˚.h
"

15 
	~"../ã°/⁄˚.h
"

17 
	$ã°maö
() {

18 
	`¥öt
("import");

19 
	}
}

	@8cc/test/import.h

3 #ifde‡
IMPORT_H


7 
	#IMPORT_H
 1

	)

	@8cc/test/includeguard.c

3 
	~"ã°.h
"

5 #i‡
__8cc__


7 
	~"ö˛udegu¨d1.h
"

8 #i‡
__8cc_ö˛ude_gu¨d
 == 1

11 
	~"ö˛udegu¨d1.h
"

12 #i‡
__8cc_ö˛ude_gu¨d
 == 0

16 
	~"ö˛udegu¨d2.h
"

17 #i‡
__8cc_ö˛ude_gu¨d
 == 1

20 
	~"ö˛udegu¨d2.h
"

21 #i‡
__8cc_ö˛ude_gu¨d
 == 1

25 
	~"ö˛udegu¨d3.h
"

26 #i‡
__8cc_ö˛ude_gu¨d
 == 1

29 
	~"ö˛udegu¨d3.h
"

30 #i‡
__8cc_ö˛ude_gu¨d
 == 1

34 
	~"ö˛udegu¨d4.h
"

35 #i‡
__8cc_ö˛ude_gu¨d
 == 1

38 
	~"ö˛udegu¨d4.h
"

39 #i‡
__8cc_ö˛ude_gu¨d
 == 1

43 
	~"ö˛udegu¨d5.h
"

44 #i‡
__8cc_ö˛ude_gu¨d
 == 1

47 
	~"ö˛udegu¨d5.h
"

48 #i‡
__8cc_ö˛ude_gu¨d
 == 1

52 
	~"ö˛udegu¨d6.h
"

53 #i‡
__8cc_ö˛ude_gu¨d
 == 1

56 
	~"ö˛udegu¨d6.h
"

57 #i‡
__8cc_ö˛ude_gu¨d
 == 1

63 
	$ã°maö
() {

64 
	`¥öt
("include guard");

65 
	}
}

	@8cc/test/includeguard1.h

3 #i‚de‡
INCLUDEGUARD1_H


4 
	#INCLUDEGUARD1_H


	)

	@8cc/test/includeguard2.h

3 #i‚de‡
INCLUDEGUARD2_H


	@8cc/test/includeguard3.h

3 #i‚de‡
INCLUDEGUARD3_H


4 
	#INCLUDEGUARD3_H


	)

7 
	#FOO
 1

	)

	@8cc/test/includeguard4.h

3 #i‚de‡
INCLUDEGUARD4_H


4 
	#INCLUDEGUARD4_H


	)

	@8cc/test/includeguard5.h

3 
	#FOO


	)

4 #i‚de‡
INCLUDEGUARD5_H


5 
	#INCLUDEGUARD5_H


	)

	@8cc/test/includeguard6.h

3 #i‚de‡
INCLUDEGUARD6_H


4 
	#INCLUDEGUARD6_H


	)

5 
	~"ö˛udegu¨d7.h
"

	@8cc/test/includeguard7.h

	@8cc/test/initializer.c

3 
	~"ã°.h
"

5 
	$vîify
(*
ex≥˘ed
, *
gŸ
, 
Àn
) {

6 
i
 = 0; i < 
Àn
; i++)

7 
	`ex≥˘
(
ex≥˘ed
[
i
], 
gŸ
[i]);

8 
	}
}

10 
	$vîify_sh‹t
(*
ex≥˘ed
, *
gŸ
, 
Àn
) {

11 
i
 = 0; i < 
Àn
; i++)

12 
	`ex≥˘
(
ex≥˘ed
[
i
], 
gŸ
[i]);

13 
	}
}

15 
	$ã°_¨øy
() {

16 
x
[] = { 1, 3, 5 };

17 
	`ex≥˘
(1, 
x
[0]);

18 
	`ex≥˘
(3, 
x
[1]);

19 
	`ex≥˘
(5, 
x
[2]);

21 
ye
[] = { 1, 3, 5, 2, 4, 6, 3, 5, 7, 0, 0, 0 };

22 
y1
[4][3] = { { 1, 3, 5 }, { 2, 4, 6 }, { 3, 5, 7 }, };

23 
	`vîify
(
ye
, 
y1
, 12);

24 
y2
[4][3] = { 1, 3, 5, 2, 4, 6, 3, 5, 7 };

25 
	`vîify
(
ye
, 
y2
, 12);

27 
ze
[] = { 1, 0, 0, 2, 0, 0, 3, 0, 0, 4, 0, 0 };

28 
z
[4][3] = { { 1 }, { 2 }, { 3 }, { 4 } };

29 
	`vîify
(
ze
, 
z
, 12);

31 
qe
[24] = { 1, 0, 0, 0, 0, 0, 2, 3, 0, 0, 0, 0, 4, 5, 6 };

32 
q
[4][3][2] = { { 1 }, { 2, 3 }, { 4, 5, 6 } };

33 
	`vîify_sh‹t
(
qe
, 
q
, 24);

35 
a
[] = {{{ 3 }}};

36 
	`ex≥˘
(3, 
a
[0]);

37 
	}
}

39 
	$ã°_°rög
() {

40 
s
[] = "abc";

41 
	`ex≥˘_°rög
("abc", 
s
);

42 
t
[] = { "def" };

43 
	`ex≥˘_°rög
("def", 
t
);

44 
	}
}

46 
	$ã°_°ru˘
() {

47 
we
[] = { 1, 0, 0, 0, 2, 0, 0, 0 };

48 °ru˘ { 
a
[3]; 
b
; } 
w
[] = { { 1 }, 2 };

49 
	`vîify
(
we
, &
w
, 8);

50 
	}
}

52 
	$ã°_¥imôive
() {

53 
a
 = { 59 };

54 
	`ex≥˘
(59, 
a
);

55 
	}
}

57 
	$ã°_√°ed
() {

60 °ru˘ { 
a
; 
b
; } 
x
;

61 °ru˘ { 
c
[8]; } 
y
;

62 } 
w
;

63 } 
v
 = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, };

64 
	`ex≥˘
(1, 
v
.
w
.
x
.
a
);

65 
	`ex≥˘
(2, 
v
.
w
.
x
.
b
);

66 
	`ex≥˘
(3, 
v
.
w
.
y
.
c
[0]);

67 
	`ex≥˘
(10, 
v
.
w
.
y
.
c
[7]);

68 
	}
}

70 
	$ã°_¨øy_desig«t‹
() {

71 
v
[3] = { [1] = 5 };

72 
	`ex≥˘
(0, 
v
[0]);

73 
	`ex≥˘
(5, 
v
[1]);

74 
	`ex≥˘
(0, 
v
[2]);

76 °ru˘ { 
a
, 
b
; } 
x
[2] = { [1] = { 1, 2 } };

77 
	`ex≥˘
(0, 
x
[0].
a
);

78 
	`ex≥˘
(0, 
x
[0].
b
);

79 
	`ex≥˘
(1, 
x
[1].
a
);

80 
	`ex≥˘
(2, 
x
[1].
b
);

82 °ru˘ { 
a
, 
b
; } 
x2
[3] = { [1] = 1, 2, 3, 4 };

83 
	`ex≥˘
(0, 
x2
[0].
a
);

84 
	`ex≥˘
(0, 
x2
[0].
b
);

85 
	`ex≥˘
(1, 
x2
[1].
a
);

86 
	`ex≥˘
(2, 
x2
[1].
b
);

87 
	`ex≥˘
(3, 
x2
[2].
a
);

88 
	`ex≥˘
(4, 
x2
[2].
b
);

90 
x3
[] = { [2] = 3, [0] = 1, 2 };

91 
	`ex≥˘
(1, 
x3
[0]);

92 
	`ex≥˘
(2, 
x3
[1]);

93 
	`ex≥˘
(3, 
x3
[2]);

94 
	}
}

96 
	$ã°_°ru˘_desig«t‹
() {

97 °ru˘ { 
x
; 
y
; } 
v1
 = { .y = 1, .x = 5 };

98 
	`ex≥˘
(5, 
v1
.
x
);

99 
	`ex≥˘
(1, 
v1
.
y
);

101 °ru˘ { 
x
; 
y
; } 
v2
 = { .y = 7 };

102 
	`ex≥˘
(7, 
v2
.
y
);

104 °ru˘ { 
x
; 
y
; 
z
; } 
v3
 = { .y = 12, 17 };

105 
	`ex≥˘
(12, 
v3
.
y
);

106 
	`ex≥˘
(17, 
v3
.
z
);

107 
	}
}

109 
	$ã°_com∂ex_desig«t‹
() {

110 °ru˘ { såu˘ { 
a
, 
b
; } 
x
[3]; } 
y
[] = {

111 [1].
x
[0].
b
 = 5, 6, 7, 8, 9,

112 [0].
x
[2].
b
 = 10, 11

114 
	`ex≥˘
(0, 
y
[0].
x
[0].
a
);

115 
	`ex≥˘
(0, 
y
[0].
x
[0].
b
);

116 
	`ex≥˘
(0, 
y
[0].
x
[1].
a
);

117 
	`ex≥˘
(0, 
y
[0].
x
[1].
b
);

118 
	`ex≥˘
(0, 
y
[0].
x
[2].
a
);

119 
	`ex≥˘
(10, 
y
[0].
x
[2].
b
);

120 
	`ex≥˘
(11, 
y
[1].
x
[0].
a
);

121 
	`ex≥˘
(5, 
y
[1].
x
[0].
b
);

122 
	`ex≥˘
(6, 
y
[1].
x
[1].
a
);

123 
	`ex≥˘
(7, 
y
[1].
x
[1].
b
);

124 
	`ex≥˘
(8, 
y
[1].
x
[2].
a
);

125 
	`ex≥˘
(9, 
y
[1].
x
[2].
b
);

127 
y2
[][3] = { [0][0] = 1, [1][0] = 3 };

128 
	`ex≥˘
(1, 
y2
[0][0]);

129 
	`ex≥˘
(3, 
y2
[1][0]);

131 °ru˘ { 
a
, 
b
[3]; } 
y3
 = { .a = 1, .b[0] = 10, .b[1] = 11 };

132 
	`ex≥˘
(1, 
y3
.
a
);

133 
	`ex≥˘
(10, 
y3
.
b
[0]);

134 
	`ex≥˘
(11, 
y3
.
b
[1]);

135 
	`ex≥˘
(0, 
y3
.
b
[2]);

136 
	}
}

138 
	$ã°_zîo
() {

139 
	sèg
 { 
x
, 
y
; };

140 
èg
 
v0
 = (tag){ 6 };

141 
	`ex≥˘
(6, 
v0
.
x
);

142 
	`ex≥˘
(0, 
v0
.
y
);

144 °ru˘ { 
x
; 
y
; } 
v1
 = { 6 };

145 
	`ex≥˘
(6, 
v1
.
x
);

146 
	`ex≥˘
(0, 
v1
.
y
);

148 °ru˘ { 
x
; 
y
; } 
v2
 = { .y = 3 };

149 
	`ex≥˘
(0, 
v2
.
x
);

150 
	`ex≥˘
(3, 
v2
.
y
);

152 °ru˘ { uni⁄ { 
x
, 
y
; }; } 
v3
 = { .x = 61 };

153 
	`ex≥˘
(61, 
v3
.
x
);

154 
	}
}

157 
	$ã°_ty≥def
() {

158 
	tA
[];

159 
A
 
a
 = { 1, 2 };

160 
A
 
b
 = { 3, 4, 5 };

161 
	`ex≥˘
(2, (
a
) / (*a));

162 
	`ex≥˘
(3, (
b
) / (*b));

163 
	}
}

165 
	$ã°_ex˚ssive
() {

166 #ifde‡
__8cc__


167 #¥agm®
dißbÀ_w¨nög


170 
x1
[3] = { 1, 2, 3, 4, 5 };

171 
	`ex≥˘
(3, (
x1
));

173 
x2
[3] = "abcdefg";

174 
	`ex≥˘
(3, (
x2
));

175 
	`ex≥˘
(0, 
	`°∫cmp
("abc", 
x2
, 3));

177 #ifde‡
__8cc__


178 #¥agm®
dißbÀ_w¨nög


180 
	}
}

182 
	$ã°maö
() {

183 
	`¥öt
("initializer");

185 
	`ã°_¨øy
();

186 
	`ã°_°rög
();

187 
	`ã°_°ru˘
();

188 
	`ã°_¥imôive
();

189 
	`ã°_√°ed
();

190 
	`ã°_¨øy_desig«t‹
();

191 
	`ã°_°ru˘_desig«t‹
();

192 
	`ã°_com∂ex_desig«t‹
();

193 
	`ã°_zîo
();

194 
	`ã°_ty≥def
();

195 
	`ã°_ex˚ssive
();

196 
	}
}

	@8cc/test/int.c

3 
	~"ã°.h
"

5 
	$ex≥˘s
(
a
, 
b
) {

6 i‡(!(
a
 =
b
)) {

7 
	`¥ötf
("Failed\n");

8 
	`¥ötf
(" %dÉx≥˘ed, buàgŸ %d\n", 
a
, 
b
);

9 
	`exô
(1);

11 
	}
}

13 
	$ã°maö
() {

14 
	`¥öt
("long");

16 
a
 = 10;

17 
b
 = 15;

18 
	`ex≥˘s
(25, 
a
 + 
b
);

19 
	`ex≥˘s
(20, 
a
 + 10);

21 
x
 = 67;

22 
y
 = 69;

23 
	`ex≥˘l
(67, 
x
);

24 
	`ex≥˘l
(136, 
x
 + 
y
);

25 
	`ex≥˘l
(10L, 10L);

26 
	`ex≥˘l
(4294967295L, 4294967295);

27 
	`ex≥˘l
(1152921504606846976, 1152921504606846976);

28 
	`ex≥˘l
(1152921504606846977, 1152921504606846976 + 1);

29 
	}
}

	@8cc/test/iso646.c

3 
	~<iso646.h
>

4 
	~"ã°.h
"

6 
	#SS
(
x
Ë#x

	)

7 
	#S
(
x
Ë
	`SS
(x)

	)

9 
	$ã°maö
() {

10 
	`¥öt
("iso646");

11 
	`ex≥˘_°rög
("&&", 
	`S
(
™d
));

12 
	`ex≥˘_°rög
("&=", 
	`S
(
™d_eq
));

13 
	`ex≥˘_°rög
("&", 
	`S
(
bô™d
));

14 
	`ex≥˘_°rög
("|", 
	`S
(
bô‹
));

15 
	`ex≥˘_°rög
("~", 
	`S
(
com∂
));

16 
	`ex≥˘_°rög
("!", 
	`S
(
nŸ
));

17 
	`ex≥˘_°rög
("!=", 
	`S
(
nŸ_eq
));

18 
	`ex≥˘_°rög
("||", 
	`S
(
‹
));

19 
	`ex≥˘_°rög
("|=", 
	`S
(
‹_eq
));

20 
	`ex≥˘_°rög
("^", 
	`S
(
x‹
));

21 
	`ex≥˘_°rög
("^=", 
	`S
(
x‹_eq
));

22 
	}
}

	@8cc/test/lex.c

3 
	~"ã°.h
"

5 
	#°rögify
(
x
Ë%:
	)
x

6 
	#∑°e
(
x
, 
y
Ëx%:%:
	)
y

8 
	$digøph
() {

16 #ifde‡
__8cc__


17 
	`ex≥˘_°rög
("[", 
	`°rögify
(<:));

18 
	`ex≥˘_°rög
("]", 
	`°rögify
(:>));

19 
	`ex≥˘_°rög
("{", 
	`°rögify
(<%));

20 
	`ex≥˘_°rög
("}", 
	`°rögify
(%>));

21 
	`ex≥˘_°rög
("#", 
	`°rögify
(%:));

22 
	`ex≥˘_°rög
("% :", 
	`°rögify
(% :));

23 
	`ex≥˘_°rög
("##", 
	`°rögify
(%:%:));

24 
	`ex≥˘_°rög
("#%", 
	`°rögify
(%:%));

25 
	`ex≥˘
(12, 
	`∑°e
(1, 2));

27 
	}
}

29 
	$esˇ≥
() {

30 
vÆue
 = 10;

31 
	`ex≥˘
(10, 
vÆ
\

32 
ue
);

33 
	`ex≥˘_°rög
("a bc", "a\ bc");

34 
	}
}

36 
	$whôe•a˚
() {

37 
	`ex≥˘_°rög
("x y", 
	`°rögify
–
x
 
y
 ));

38 
	}
}

40 
	$√wlöe
() {

42 #

	}
}

45 
	$dﬁœr
() {

46 
$
 = 1;

47 
	`ex≥˘
(1, 
$
);

48 
$2
 = 2;

49 
	`ex≥˘
(2, 
$2
);

50 
a$
 = 3;

51 
	`ex≥˘
(3, 
a$
);

52 
	}
}

54 
	$ã°maö
() {

55 
	`¥öt
("lexer");

56 
	`digøph
();

57 
	`esˇ≥
();

58 
	`whôe•a˚
();

59 
	`√wlöe
();

60 
	`dﬁœr
();

61 
	}
}

	@8cc/test/line.c

3 
	~<°rög.h
>

4 
	~"ã°.h
"

6 
	$ã°maö
() {

7 
	`¥öt
("#line");

10 
	`ex≥˘
(99, 
__LINE__
);

13 
	`ex≥˘
(199, 
__LINE__
);

14 
	`ex≥˘_°rög
("foo", 
__FILE__
);

16 
	#X
 3

	)

17 #löê
X


18 
	`ex≥˘
(3, 
__LINE__
);

20 
	#Y
 5 "b¨"

	)

21 #löê
Y


22 
	`ex≥˘
(5, 
__LINE__
);

23 
	`ex≥˘_°rög
("b¨", 
__FILE__
);

26 
	`ex≥˘
(1, 
__LINE__
);

27 
	`ex≥˘_°rög
("xyz", 
__FILE__
);

30 
	`ex≥˘
(2, 
__LINE__
);

31 
	`ex≥˘_°rög
("XYZ", 
__FILE__
);

32 
	}
}

	@8cc/test/literal.c

3 
	~"ã°.h
"

4 
	~"°rög.h
"

6 
	$ã°_ch¨
() {

7 
	`ex≥˘
(65, 'A');

8 
	`ex≥˘
(97, 'a');

9 
	`ex≥˘
(7, '\a');

10 
	`ex≥˘
(8, '\b');

11 
	`ex≥˘
(12, '\f');

12 
	`ex≥˘
(10, '\n');

13 
	`ex≥˘
(13, '\r');

14 
	`ex≥˘
(9, '\t');

15 
	`ex≥˘
(11, '\v');

16 
	`ex≥˘
(27, '\e');

18 
	`ex≥˘
(0, '\0');

19 
	`ex≥˘
(7, '\7');

20 
	`ex≥˘
(15, '\17');

21 
	`ex≥˘
(-99, '\235');

23 
	`ex≥˘
(0, '\x0');

24 
	`ex≥˘
(-1, '\xff');

25 
	`ex≥˘
(15, '\xF');

26 
	`ex≥˘
(18, '\x012');

27 
	}
}

29 
	$ã°_°rög
() {

30 
	`ex≥˘_°rög
("abc", "abc");

31 
	`ex≥˘_°rög
("abc", 
u8
"abc");

32 
	`ex≥˘
('a', "abc"[0]);

33 
	`ex≥˘
(0, "abc"[3]);

34 
	`ex≥˘_°rög
("abcd", "ab" "cd");

35 
	`ex≥˘_°rög
("abcdef", "ab" "cd" "ef");

37 
ex≥˘ed
[] = { 65, 97, 7, 8, 12, 10, 13, 9, 11, 27, 7, 15, -99, -1, 18, 0 };

38 
	`ex≥˘_°rög
(
ex≥˘ed
, "Aa\a\b\f\n\r\t\v\e\7\17\235\xff\x012");

39 
	`ex≥˘
('c', 
L
'c');

40 
	`ex≥˘
(0x3042, 
L
'\u3042');

41 
	`ex≥˘
(0x3042, 
u
'\u3042');

42 
	`ex≥˘
(0x3042, 
U
'\u3042');

45 
L
 = 1, 
u
 = 2, 
U
 = 3, 
u8
 = 4;

46 
	`ex≥˘
(10, 
L
 + 
u
 + 
U
 + 
u8
);

47 
Lx
 = 1, 
ux
 = 2, 
Ux
 = 3, 
u8x
 = 4;

48 
	`ex≥˘
(10, 
Lx
 + 
ux
 + 
Ux
 + 
u8x
);

49 
	}
}

51 
	$ã°_mb°rög
() {

52 
	`ex≥˘
(2, (
u
""));

53 
	`ex≥˘
(8, (
u
"abc"));

54 
	`ex≥˘
(8, ("ab" 
u
"c"));

55 
	`ex≥˘
(8, (
u
"ab" u"c"));

56 
	`ex≥˘
(1, (
u8
""));

57 
	`ex≥˘
(4, (
u8
"abc"));

58 
	`ex≥˘
(4, ("ab" 
u8
"c"));

59 
	`ex≥˘
(4, (
u8
"ab" u8"c"));

60 
	`ex≥˘
(4, (
L
""));

61 
	`ex≥˘
(16, (
L
"abc"));

62 
	`ex≥˘
(16, (
L
"ab" L"c"));

63 
	`ex≥˘
(4, (
U
""));

64 
	`ex≥˘
(16, (
U
"abc"));

65 
	`ex≥˘
(16, ("ab" 
U
"c"));

66 
	`ex≥˘
(16, (
U
"ab" U"c"));

67 
	`ex≥˘
(0, 
	`memcmp
("x\0\0\0y\0\0\0z\0\0\0\0\0\0", 
L
"xyz", 16));

68 
	`ex≥˘
(0, 
	`memcmp
("x\0\0\0y\0\0\0z\0\0\0\0\0\0", 
U
"xyz", 16));

69 
	`ex≥˘
(0, 
	`memcmp
("\x78\0\x79\0\x7A\0\0\0", 
u
"xyz", 8));

71 
	`ex≥˘
(4, ("\u3042"));

72 
	`ex≥˘
(0, 
	`memcmp
("\xE3\x81\x82\0", "\u3042", 4));

73 
	`ex≥˘
(12, ("\u3042" 
L
"x"));

74 
	`ex≥˘
(0, 
	`memcmp
("\x42\x30\0\0\x78\0\0\0\0\0\0\0", "\u3042" 
L
"x", 12));

77 #ifde‡
__8cc__


79 
	`ex≥˘
(3, Êó•Êú¨Ë™û);

80 
	`ex≥˘
(3, Êó•\
u672C
\
U00008A9E
);

82 
	}
}

84 
	$ã°_Êﬂt
() {

85 
	`ex≥˘f
(1.0, 1.0);

86 
	`ex≥˘d
(1.0, 1.0L);

87 
	`ex≥˘f
(1.0, 0x1
p
+0);

88 
	`ex≥˘f
(1.0, 0x1
p
-0);

89 
	}
}

91 
	$ã°_u˙
() {

92 
	`ex≥˘
('$', 
L
'\u0024');

93 
	`ex≥˘
('$', 
L
'\U00000024');

94 
	`ex≥˘_°rög
("$", "\u0024");

95 
	`ex≥˘_°rög
("$", "\U00000024");

96 
	`ex≥˘
('X', 
L
'X');

97 
	`ex≥˘
('X', 
U
'X');

98 
	`ex≥˘
('X', 
u
'X');

99 
	}
}

101 
	gg1
 = 80;

102 *
	gg2
 = &(){ 81 };

103 
	sg3
 { 
	mx
; } *
	gg3
 = &(
g3
){ 82 };

104 
	sg4
 { 
	mx
; 
	sg4a
 { 
	my
[2]; } *
	mz
; } *
	gg4
 = &(
g4
){ 83, &(
g4a
){ 84, 85 } };

106 
	$ã°_compound
() {

107 
	`ex≥˘
(1, (){ 1 });

108 
	`ex≥˘
(3, (([]){ 1, 2, 3 }[2]));

109 
	`ex≥˘
(12, (([]){ 1, 2, 3 }));

110 
	`ex≥˘
(6, ((°ru˘ { 
x
[3]; }){ 5, 6, 7 }.x[1]));

112 
	`ex≥˘
(80, 
g1
);

113 
	`ex≥˘
(81, *
g2
);

114 
	`ex≥˘
(82, 
g3
->
x
);

115 
	`ex≥˘
(83, 
g4
->
x
);

116 
	`ex≥˘
(84, 
g4
->
z
->
y
[0]);

117 
	`ex≥˘
(85, 
g4
->
z
->
y
[1]);

118 
	}
}

120 
	$ã°maö
() {

121 
	`¥öt
("literal");

122 
	`ã°_ch¨
();

123 
	`ã°_°rög
();

124 
	`ã°_mb°rög
();

125 
	`ã°_Êﬂt
();

126 
	`ã°_u˙
();

127 
	`ã°_compound
();

128 
	}
}

	@8cc/test/macro.c

3 
	~<loˇÀ.h
>

4 
	~<°ddef.h
>

5 
	~<°rög.h
>

6 
	~<sys/°©.h
>

7 
	~<sys/ty≥s.h
>

8 
	~<time.h
>

9 
	~"ã°.h
"

11 *
	$gë_time°amp
() {

12 
buf
[30];

13 
°©
 
s
;

14 
	`°©
(
__FILE__
, &
s
);

15 
	`£éoˇÀ
(
LC_ALL
, "C");

16 
	`°r·ime
(
buf
, 30, "%®%b %ê%T %Y", 
	`loˇ…ime
(&
s
.
°_mtime
));

17  
buf
;

18 
	}
}

20 
	$•ecül
() {

21 
	`ex≥˘_°rög
("ã°/ma¸o.c", 
__FILE__
);

22 
	`ex≥˘
(22, 
__LINE__
);

23 
	`ex≥˘
(11, 
	`°æí
(
__DATE__
));

24 
	`ex≥˘
(8, 
	`°æí
(
__TIME__
));

25 
	`ex≥˘
(24, 
	`°æí
(
__TIMESTAMP__
));

26 
	`ex≥˘
(0, 
__INCLUDE_LEVEL__
);

27 
	`ex≥˘_°rög
("ã°/ma¸o.c", 
__BASE_FILE__
);

28 
	`ex≥˘_°rög
(
	`gë_time°amp
(), 
__TIMESTAMP__
);

29 
	}
}

31 
	$ö˛ude
() {

32 
	~"ma¸o1.h
"

33 
	`ex≥˘_°rög
("ma¸o1", 
MACRO_1
);

35 
	#MACRO_2_FILE
 "ma¸o2.h"

	)

36 #ö˛udê
MACRO_2_FILE


37 
	`ex≥˘_°rög
("ma¸o2", 
MACRO_2
);

39 
	#STDBOOL_H_FILE
 <
°dboﬁ
.
h
>

	)

40 #ifde‡
__STDBOOL_H


41 #îr‹ 
ã°
 
Áûed


43 #ö˛udê
STDBOOL_H_FILE


44 #i‚de‡
__boﬁ_åue_Ál£_¨e_deföed


45 #îr‹ 
ã°
 
Áûed


47 
	}
}

49 
	$¥edeföed
() {

50 #ifde‡
__8cc__


51 
	`ex≥˘
(1, 
__8cc__
);

52 
	`ex≥˘
(1, 
__STDC_NO_ATOMICS__
);

53 
	`ex≥˘
(1, 
__STDC_NO_COMPLEX__
);

54 
	`ex≥˘
(1, 
__STDC_NO_THREADS__
);

55 
	`ex≥˘
(1, 
__STDC_NO_VLA__
);

57 
	`ex≥˘
(1, 
__amd64
);

58 
	`ex≥˘
(1, 
__amd64__
);

59 
	`ex≥˘
(1, 
__x86_64
);

60 
	`ex≥˘
(1, 
__x86_64__
);

61 
	`ex≥˘
(1, 
löux
);

62 
	`ex≥˘
(1, 
__löux
);

63 
	`ex≥˘
(1, 
__löux__
);

64 
	`ex≥˘
(1, 
__gnu_löux__
);

65 
	`ex≥˘
(1, 
__unix
);

66 
	`ex≥˘
(1, 
__unix__
);

67 
	`ex≥˘
(1, 
_LP64
);

68 
	`ex≥˘
(1, 
__LP64__
);

69 
	`ex≥˘
(1, 
__ELF__
);

70 
	`ex≥˘
(1, 
__STDC__
);

71 
	`ex≥˘
(1, 
__STDC_HOSTED__
);

72 
	`ex≥˘
(1, 
__STDC_UTF_16__
);

73 
	`ex≥˘
(1, 
__STDC_UTF_32__
);

74 
	`ex≥˘
(201112, 
__STDC_VERSION__
);

76 
	`ex≥˘
(2, 
__SIZEOF_SHORT__
);

77 
	`ex≥˘
(4, 
__SIZEOF_INT__
);

78 
	`ex≥˘
(8, 
__SIZEOF_LONG__
);

79 
	`ex≥˘
(8, 
__SIZEOF_LONG_LONG__
);

80 
	`ex≥˘
(4, 
__SIZEOF_FLOAT__
);

81 
	`ex≥˘
(8, 
__SIZEOF_DOUBLE__
);

82 
	`ex≥˘
(8, 
__SIZEOF_POINTER__
);

83 
	`ex≥˘
(8, 
__SIZEOF_PTRDIFF_T__
);

84 
	`ex≥˘
(8, 
__SIZEOF_SIZE_T__
);

85 #ifde‡
__8cc__


86 
	`ex≥˘
(8, 
__SIZEOF_LONG_DOUBLE__
);

89 
	`ex≥˘
((), 
__SIZEOF_SHORT__
);

90 
	`ex≥˘
((), 
__SIZEOF_INT__
);

91 
	`ex≥˘
((), 
__SIZEOF_LONG__
);

92 
	`ex≥˘
((), 
__SIZEOF_LONG_LONG__
);

93 
	`ex≥˘
((), 
__SIZEOF_FLOAT__
);

94 
	`ex≥˘
((), 
__SIZEOF_DOUBLE__
);

95 
	`ex≥˘
((*), 
__SIZEOF_POINTER__
);

96 
	`ex≥˘
((
±rdiff_t
), 
__SIZEOF_PTRDIFF_T__
);

97 
	`ex≥˘
((
size_t
), 
__SIZEOF_SIZE_T__
);

98 
	`ex≥˘
((), 
__SIZEOF_LONG_DOUBLE__
);

99 
	}
}

101 
	#ZERO
 0

	)

102 
	#ONE
 1

	)

103 
	#TWO
 
ONE
 + 
	)
ONE

104 
	#LOOP
 
LOOP


	)

106 
	$sim∂e
() {

107 
	`ex≥˘
(1, 
ONE
);

108 
	`ex≥˘
(2, 
TWO
);

109 
	}
}

111 
	#VAR1
 
VAR2


	)

112 
	#VAR2
 
VAR1


	)

114 
	$lo›
() {

115 
VAR1
 = 1;

116 
VAR2
 = 2;

117 
	`ex≥˘
(1, 
VAR1
);

118 
	`ex≥˘
(2, 
VAR2
);

119 
	}
}

121 
	$undef
() {

122 
a
 = 3;

123 
	#a
 10

	)

124 
	`ex≥˘
(10, 
a
);

125 #unde‡
a


126 
	`ex≥˘
(3, 
a
);

127 
	#a
 16

	)

128 
	`ex≥˘
(16, 
a
);

129 #unde‡
a


130 
	}
}

132 
	$c⁄d_ö˛
() {

133 
a
 = 1;

135 
a
 = 2;

137 
	`ex≥˘
(1, 
a
);

140 
	`Áû
("if 0");

141 
xyz


144 
	`Áû
("if 0");

149 
	`Áû
("if 0");

150 
xyz
 "\"/*" '\'/*'

152 
a
 = 5;

154 
	`ex≥˘
(
a
, 5);

158 
a
 = 2;

160 
	`ex≥˘
(2, 
a
);

163 
a
 = 3;

165 
a
 = 4;

167 
	`ex≥˘
(3, 
a
);

170 
a
 = 5;

172 
	`ex≥˘
(5, 
a
);

175 
a
 = 10;

177 
a
 = 12;

179 
	`ex≥˘
(10, 
a
);

182 
a
 = 11;

184 
a
 = 12;

186 
	`ex≥˘
(12, 
a
);

192 
a
 = 150;

194 
	`ex≥˘
(150, 
a
);

195 
	}
}

197 
	$c⁄°_ex¥
() {

198 
a
 = 1;

200 
a
 = 2;

202 
a
 = 3;

204 
	`ex≥˘
(2, 
a
);

207 
a
 = 4;

209 
a
 = 5;

211 
	`ex≥˘
(4, 
a
);

215 
a
 = 100;

217 
	`ex≥˘
(100, 
a
);

220 
a
 = 101;

223 
	`ex≥˘
(101, 
a
);

226 
a
 = 102;

229 
	`ex≥˘
(102, 
a
);

233 
a
 = 103;

235 
	`ex≥˘
(103, 
a
);

239 
a
 = 104;

241 
	`ex≥˘
(104, 
a
);

244 
	`Áû
("#if");

246 
	`Áû
("#elif");

250 
a
 = 6;

252 
a
 = 7;

254 
	`ex≥˘
(7, 
a
);

256 #i‡
ZERO


257 
a
 = 8;

259 
a
 = 9;

261 
	`ex≥˘
(9, 
a
);

263 #i‡
NO_SUCH_MACRO


264 
a
 = 14;

266 
a
 = 15;

268 
	`ex≥˘
(15, 
a
);

270 #i‡
LOOP


271 
a
 = 10;

273 
a
 = 11;

275 
	`ex≥˘
(11, 
a
);

277 #i‡
LOOP
 - 1

278 
a
 = 12;

280 
a
 = 13;

282 
	`ex≥˘
(12, 
a
);

283 
	}
}

285 
	$deföed
() {

286 
a
 = 0;

287 #i‡
deföed
 
ZERO


288 
a
 = 1;

290 
	`ex≥˘
(1, 
a
);

291 #i‡
	`deföed
(
ZERO
)

292 
a
 = 2;

294 
	`ex≥˘
(2, 
a
);

295 #i‡
	`deföed
(
NO_SUCH_MACRO
)

296 
a
 = 3;

298 
a
 = 4;

300 
	`ex≥˘
(4, 
a
);

301 
	}
}

303 
	$ifdef
() {

304 
a
 = 0;

305 #ifde‡
ONE


306 
a
 = 1;

308 
a
 = 2;

312 
	`ex≥˘
(
a
, 1);

314 #ifde‡
NO_SUCH_MACRO


315 
a
 = 3;

317 
a
 = 4;

319 
	`ex≥˘
(
a
, 4);

321 #i‚de‡
ONE


322 
a
 = 5;

324 
a
 = 6;

326 
	`ex≥˘
(
a
, 6);

328 #i‚de‡
NO_SUCH_MACRO


329 
a
 = 7;

331 
a
 = 8;

333 
	`ex≥˘
(
a
, 7);

334 
	}
}

336 
	$∂us
(
a
, 
b
) {

337  
a
 + 
b
;

338 
	}
}

340 
	$möus
(
a
, 
b
) {

341  
a
 - 
b
;

342 
	}
}

344 
	$fun˛ike
() {

345 
	#°rögify
(
x
Ë#x

	)

346 
	`ex≥˘_°rög
("5", 
	`°rögify
(5));

347 
	`ex≥˘_°rög
("x", 
	`°rögify
(
x
));

348 
	`ex≥˘_°rög
("x y", 
	`°rögify
(
x
 
y
));

349 
	`ex≥˘_°rög
("x y", 
	`°rögify
–
x
 
y
 ));

350 
	`ex≥˘_°rög
("x + y", 
	`°rögify
–
x
 + 
y
 ));

351 
	`ex≥˘_°rög
("x + y", 
	`°rögify
–
x
 + 
y
 ));

352 
	`ex≥˘_°rög
("x+y", 
	`°rögify
–
x
+
y
 ));

353 
	`ex≥˘_°rög
("'a'", 
	`°rögify
('a'));

354 
	`ex≥˘_°rög
("'\\''", 
	`°rögify
('\''));

355 
	`ex≥˘_°rög
("L'a'", 
	`°rögify
(
L
'a'));

356 
	`ex≥˘_°rög
("U'a'", 
	`°rögify
(
U
'a'));

357 
	`ex≥˘_°rög
("u'a'", 
	`°rögify
(
u
'a'));

358 
	`ex≥˘_°rög
("\"abc\"", 
	`°rögify
("abc"));

359 
	`ex≥˘_°rög
("L\"abc\"", 
	`°rögify
(
L
"abc"));

360 
	`ex≥˘_°rög
("U\"abc\"", 
	`°rögify
(
U
"abc"));

361 
	`ex≥˘_°rög
("u\"abc\"", 
	`°rögify
(
u
"abc"));

362 
	`ex≥˘_°rög
("u8\"abc\"", 
	`°rögify
(
u8
"abc"));

363 
	`ex≥˘_°rög
("ZERO", 
	`°rögify
(
ZERO
));

364 
	`ex≥˘_°rög
("1 2", 
	`°rögify
(1

367 
	#m1
(
x
Ë
	)
x

368 
	`ex≥˘
(5, 
	`m1
(5));

369 
	`ex≥˘
(7, 
	`m1
((5 + 2)));

370 
	`ex≥˘
(8, 
	`m1
(
	`∂us
(5, 3)));

371 
	`ex≥˘
(10, 
	`m1
() 10);

372 
	`ex≥˘
(14, 
	`m1
(2 +

375 
	#m2
(
x
Ëx + 
	)
x

376 
	`ex≥˘
(10, 
	`m2
(5));

378 
	#m3
(
x
, 
y
Ëx * 
	)
y

379 
	`ex≥˘
(50, 
	`m3
(5, 10));

380 
	`ex≥˘
(11, 
	`m3
(2 + 2, 3 + 3));

382 
	#m4
(
x
, 
y
Ëx + y + 
TWO


	)

383 
	`ex≥˘
(17, 
	`m4
(5, 10));

385 
	#m6
(
x
, ...Ëx + 
__VA_ARGS__


	)

386 
	`ex≥˘
(20, 
	`m6
(2, 18));

387 
	`ex≥˘
(25, 
	`∂us
(
	`m6
(2, 18, 5)));

389 
	#∂us
(
x
, 
y
Ëx * y + 
	`∂us
(x, y)

	)

390 
	`ex≥˘
(11, 
	`∂us
(2, 3));

391 #unde‡
∂us


393 
	#∂us
(
x
, 
y
Ë
	`möus
(x, y)

	)

394 
	#möus
(
x
, 
y
Ë
	`∂us
(x, y)

	)

395 
	`ex≥˘
(31, 
	`∂us
(30, 1));

396 
	`ex≥˘
(29, 
	`möus
(30, 1));

399 
	#m7
 (0Ë+ 1

	)

400 
	`ex≥˘
(1, 
m7
);

402 
	#m8
(
x
, 
y
Ëx ## 
	)
y

403 
	`ex≥˘
(2, 
	`m8
(
TW
, 
O
));

404 
	`ex≥˘
(0, 
	`m8
(
ZERO
,));

405 
	`ex≥˘
(8, 1 
	`m8
(<, <) 3);

406 
	`ex≥˘f
(.123, 
	`m8
(., 123));

407 
	`ex≥˘
('a', 
	`m8
(
L
, 'a'));

408 
	`ex≥˘
('a', 
	`m8
(
U
, 'a'));

409 
	`ex≥˘
('a', 
	`m8
(
u
, 'a'));

410 
	`ex≥˘_°rög
(
L
"abc", 
	`m8
(L, "abc"));

411 
	`ex≥˘_°rög
(
U
"abc", 
	`m8
(U, "abc"));

412 
	`ex≥˘_°rög
(
u
"abc", 
	`m8
(u, "abc"));

413 
	`ex≥˘_°rög
(
u8
"abc", 
	`m8
(u8, "abc"));

415 
	#m9
(
x
, 
y
, 
z
Ëx y + 
	)
z

416 
	`ex≥˘
(8, 
	`m9
(1,, 7));

418 
	#m10
(
x
Ëx ## 
	)
x

419 
	`ex≥˘_°rög
("a", "a" 
	`m10
());

421 
	#hash_hash
 ####

	)

422 
	#mk°r
(
a
Ë#a

	)

423 
	#ö_bëwìn
(
a
Ë
	`mk°r
◊)

	)

424 
	#joö
(
c
, 
d
Ë
	`ö_bëwìn
(¯
hash_hash
 d)

	)

425 
	`ex≥˘_°rög
("x ## y", 
	`joö
(
x
, 
y
));

427 
m14
 = 67;

428 
	#m14
(
x
Ë
	)
x

429 
	`ex≥˘
(67, 
m14
);

430 
	`ex≥˘
(67, 
	`m14
(
m14
));

432 
a
 = 68;

433 
	#glue
(
x
, 
y
Ëx ## 
	)
y

434 
	`glue
(
a
+, +);

435 
	`ex≥˘
(69, 
a
);

437 
	#idítôy
(
x
Ë
	`°rögify
(x)

	)

438 
	`ex≥˘_°rög
("Ø A Bá®C", 
	`idítôy
(
	`m10
(
a
Ë
A
 
B
 m10◊Ë
C
));

440 
	#idítôy2
(
x
Ë
	`°rögify
(
z
 ## x)

	)

441 
	`ex≥˘_°rög
("zA m10◊ËA B m10◊ËC", 
	`idítôy2
(
A
 
	`m10
(
a
ËA 
B
 m10◊Ë
C
));

443 
	#m15
(
x
Ëx 
	)
x

444 
	`ex≥˘_°rög
("®a", 
	`idítôy
(
	`m15
(
a
)));

446 
	#m16
(
x
Ë(x,x)

	)

447 
	`ex≥˘_°rög
("◊,a)", 
	`idítôy
(
	`m16
(
a
)));

449 
	#m17
(
x
Ë
	`°rögify
(.x . x)

	)

450 
	`ex≥˘_°rög
(".3 . 3", 
	`m17
(3));

451 
	}
}

453 
	$em±y
() {

454 
	#EMPTY


	)

455 
	`ex≥˘
(1, 1 
EMPTY
);

456 
	#EMPTY2
(
x
)

	)

457 
	`ex≥˘
(2, 2 
	`EMPTY2
(
foo
));

458 
	`ex≥˘
(2, 2 
	`EMPTY2
(
foo
 
b¨
));

459 
	`ex≥˘
(2, 2 
	`EMPTY2
(((()))));

460 
	}
}

462 
	$nﬂrg
() {

463 
	#NOARG
(Ë55

	)

464 
	`ex≥˘
(55, 
	`NOARG
());

465 
	}
}

467 
	$nuŒ
() {

468 #

	}
}

471 
	$cou¡î
() {

472 
	`ex≥˘
(0, 
__COUNTER__
);

473 
	`ex≥˘
(1, 
__COUNTER__
);

474 
	`ex≥˘
(2, 
__COUNTER__
);

475 
	}
}

477 
	$gnuext
() {

478 
	#m11
(
x
, 
y
...Ë
	`°rögify
(x + y)

	)

479 
	`ex≥˘_°rög
("2 + 18", 
	`m11
(2, 18));

480 
	`ex≥˘_°rög
("2 +", 
	`m11
(2));

482 
	#m12
(
x
, 
y
...Ë
	`°rögify
((x, ## y))

	)

483 
	`ex≥˘_°rög
("(1)", 
	`m12
(1));

484 
	`ex≥˘_°rög
("(1, 2)", 
	`m12
(1, 2));

486 
	#m13
(
x
, 
y
Ë
	`°rögify
([x y])

	)

487 
	#m14
 1

	)

488 
	`ex≥˘_°rög
("[2 2]", 
	`m13
(
m14
,

489 #unde‡
m14


490 
	#m14
 2

	)

491 
m14
));

492 
	}
}

494 
	$ã°maö
() {

495 
	`¥öt
("macros");

496 
	`•ecül
();

497 
	`ö˛ude
();

498 
	`¥edeföed
();

499 
	`sim∂e
();

500 
	`lo›
();

501 
	`undef
();

502 
	`c⁄d_ö˛
();

503 
	`c⁄°_ex¥
();

504 
	`deföed
();

505 
	`ifdef
();

506 
	`fun˛ike
();

507 
	`em±y
();

508 
	`nﬂrg
();

509 
	`nuŒ
();

510 
	`cou¡î
();

511 
	`gnuext
();

512 
	}
}

	@8cc/test/macro1.h

3 
	#MACRO_1
 "ma¸o1"

	)

4 #i‡
__INCLUDE_LEVEL__
 != 1

	@8cc/test/macro2.h

3 
	#MACRO_2
 "ma¸o2"

	)

	@8cc/test/noreturn.c

3 
	~"ã°.h
"

4 
	~<°dn‹ëu∫.h
>

7 
_N‹ëu∫
 
f1
();

8 
n‹ëu∫
 
f2
();

9 
ölöe
 
	$f3
(Ë{
	}
}

11 
	$ã°maö
() {

12 
	`¥öt
("noreturn");

13 
	}
}

	@8cc/test/number.c

3 
	~"ã°.h
"

5 
	$ã°maö
() {

6 
	`¥öt
("numeric constants");

8 
	`ex≥˘
(1, 0x1);

9 
	`ex≥˘
(1, 0X1);

10 
	`ex≥˘
(17, 0x11);

11 
	`ex≥˘
(17, 0X11);

12 
	`ex≥˘
(511, 0777);

13 
	`ex≥˘
(11, 0b1011);

14 
	`ex≥˘
(11, 0B1011);

16 
	`ex≥˘
(3, 3L);

17 
	`ex≥˘
(3, 3LL);

18 
	`ex≥˘
(3, 3UL);

19 
	`ex≥˘
(3, 3LU);

20 
	`ex≥˘
(3, 3ULL);

21 
	`ex≥˘
(3, 3LU);

22 
	`ex≥˘
(3, 3LLU);

24 
	`ex≥˘d
(55.3, 55.3);

25 
	`ex≥˘d
(200, 2e2);

26 
	`ex≥˘d
(0x0.DE488631
p8
, 0xDE.488631
p0
);

28 
	`ex≥˘
(4, (5));

29 
	`ex≥˘
(8, (5L));

30 
	`ex≥˘
(4, (3.0f));

31 
	`ex≥˘
(8, (3.0));

32 
	`ex≥˘
(4, (0xe0));

33 
	}
}

	@8cc/test/oldstyle.c

3 
	~"ã°.h
"

5 #ifde‡
__8cc__


6 #¥agm®
dißbÀ_w¨nög


10 
ﬁd°yÀ1
();

12 
	$ﬁd°yÀ2
() {

14 
	}
}

16 
	$ﬁd°yÀ3
(
a
) {

17  
a
;

18 
	}
}

20 
	$ﬁd°yÀ4
(
a
, 
b
)

21 
b
;

23  
a
 + 
b
;

24 
	}
}

26 
	$ã°maö
() {

27 
	`¥öt
("K&R");

28 
	`ex≥˘
(3, 
	`no_de˛¨©i⁄
());

29 
	`ex≥˘
(7, 
	`ﬁd°yÀ1
(3, 4));

30 
	`ex≥˘
(4, 
	`ﬁd°yÀ2
());

31 
	`ex≥˘
(5, 
	`ﬁd°yÀ3
(5));

32 
	`ex≥˘
(9, 
	`ﬁd°yÀ4
(5, 4.0));

33 
	}
}

35 
	$no_de˛¨©i⁄
() {

37 
	}
}

	@8cc/test/once.h

3 #ifde‡
ONCE_H


7 #¥agm®
⁄˚


8 
	#ONCE_H
 1

	)

	@8cc/test/pointer.c

3 
	~"ã°.h
"

5 
	$t1
() {

6 
a
 = 61;

7 *
b
 = &
a
;

8 
	`ex≥˘
(61, *
b
);

9 
	}
}

11 
	$t2
() {

12 *
c
 = "ab";

13 
	`ex≥˘
(97, *
c
);

14 
	}
}

16 
	$t3
() {

17 *
c
 = "ab" + 1;

18 
	`ex≥˘
(98, *
c
);

19 
	}
}

21 
	$t4
() {

22 
s
[] = "xyz";

23 *
c
 = 
s
 + 2;

24 
	`ex≥˘
(122, *
c
);

25 
	}
}

27 
	$t5
() {

28 
s
[] = "xyz";

29 *
s
 = 65;

30 
	`ex≥˘
(65, *
s
);

31 
	}
}

33 
	$t6
() {

34 
	sèg
 {

35 
vÆ
;

36 
èg
 *
√xt
;

38 
èg
 
node1
 = { 1, 
NULL
 };

39 
èg
 
node2
 = { 2, &
node1
 };

40 
èg
 
node3
 = { 3, &
node2
 };

41 
èg
 *
p
 = &
node3
;

42 
	`ex≥˘
(3, 
p
->
vÆ
);

43 
	`ex≥˘
(2, 
p
->
√xt
->
vÆ
);

44 
	`ex≥˘
(1, 
p
->
√xt
->√xt->
vÆ
);

45 
p
->
√xt
 =Ö->next->next;

46 
	`ex≥˘
(1, 
p
->
√xt
->
vÆ
);

47 
	}
}

49 
	$t7
() {

50 
a
;

51 *
p1
 = &
a
 + 1;

52 *
p2
 = 1 + &
a
;

53 
	`ex≥˘
(0, 
p1
 - 
p2
);

54 
	}
}

56 
	$subåa˘
() {

57 *
p
 = "abcdefg";

58 *
q
 = 
p
 + 5;

59 
	`ex≥˘
(8, (
q
 - 
p
));

60 
	`ex≥˘
(5, 
q
 - 
p
);

61 
	}
}

63 
	$com∑ª
() {

64 *
p
 = "abcdefg";

65 
	`ex≥˘
(0, 
p
 ==Ö + 1);

66 
	`ex≥˘
(1, 
p
 ==Ö);

67 
	`ex≥˘
(0, 
p
 !=Ö);

68 
	`ex≥˘
(1, 
p
 !=Ö + 1);

69 
	`ex≥˘
(0, 
p
 <Ö);

70 
	`ex≥˘
(1, 
p
 <Ö + 1);

71 
	`ex≥˘
(0, 
p
 >Ö);

72 
	`ex≥˘
(1, 
p
 + 1 >Ö);

73 
	`ex≥˘
(1, 
p
 >=Ö);

74 
	`ex≥˘
(1, 
p
 + 1 >=Ö);

75 
	`ex≥˘
(0, 
p
 >=Ö + 1);

76 
	`ex≥˘
(1, 
p
 <=Ö);

77 
	`ex≥˘
(1, 
p
 <=Ö + 1);

78 
	`ex≥˘
(0, 
p
 + 1 <=Ö);

79 
	`ex≥˘
(4, (
p
 ==Ö + 1));

80 
	`ex≥˘
(4, (
p
 !=Ö + 1));

81 
	`ex≥˘
(4, (
p
 <Ö + 1));

82 
	`ex≥˘
(4, (
p
 >Ö + 1));

83 
	`ex≥˘
(4, (
p
 <=Ö + 1));

84 
	`ex≥˘
(4, (
p
 >=Ö + 1));

85 
	}
}

87 
	$ã°maö
() {

88 
	`¥öt
("pointer");

89 
	`t1
();

90 
	`t2
();

91 
	`t3
();

92 
	`t4
();

93 
	`t5
();

94 
	`t6
();

95 
	`t7
();

96 
	`subåa˘
();

97 
	`com∑ª
();

98 
	}
}

	@8cc/test/scope.c

3 
	~"ã°.h
"

5 
	$ã°maö
() {

6 
	`¥öt
("scope");

8 
a
 = 31;

9 { 
a
 = 64; }

10 
	`ex≥˘
(31, 
a
);

12 
a
 = 64;

13 
	`ex≥˘
(64, 
a
);

15 
	}
}

	@8cc/test/sizeof.c

3 
	~"ã°.h
"

4 
	~<°dboﬁ.h
>

6 
	$ã°_¥imôives
() {

7 
	`ex≥˘
(1, ());

8 
	`ex≥˘
(1, (
ã°_¥imôives
));

9 
	`ex≥˘
(1, ());

10 
	`ex≥˘
(1, (
_Boﬁ
));

11 
	`ex≥˘
(1, (
boﬁ
));

12 
	`ex≥˘
(2, ());

13 
	`ex≥˘
(4, ());

14 
	`ex≥˘
(8, ());

15 
	}
}

17 
	$ã°_poöãrs
() {

18 
	`ex≥˘
(8, (*));

19 
	`ex≥˘
(8, (*));

20 
	`ex≥˘
(8, (*));

21 
	`ex≥˘
(8, (*));

22 
	}
}

24 
	$ã°_unsig√d
() {

25 
	`ex≥˘
(1, ());

26 
	`ex≥˘
(2, ());

27 
	`ex≥˘
(4, ());

28 
	`ex≥˘
(8, ());

29 
	}
}

31 
	$ã°_lôîÆs
() {

32 
	`ex≥˘
(4,  1);

33 
	`ex≥˘
(4, ('a'));

34 
	`ex≥˘
(4, (1.0f));

35 
	`ex≥˘
(8,  1L);

36 
	`ex≥˘
(8,  1.0);

37 
	`ex≥˘
(8, (1.0));

38 
	}
}

40 
	$ã°_¨øys
() {

41 
	`ex≥˘
(1, ([1]));

42 
	`ex≥˘
(7, ([7]));

43 
	`ex≥˘
(30, ([3][10]));

44 
	`ex≥˘
(32, ([4][2]));

45 
	}
}

47 
	$ã°_v¨s
() {

48 
a
[] = { 1, 2, 3 };

49 
	`ex≥˘
(3, (
a
));

50 
b
[] = "abc";

51 
	`ex≥˘
(4, (
b
));

52 
	`ex≥˘
(1, (
b
[0]));

53 
	`ex≥˘
(1, ((
b
[0])));

54 
	`ex≥˘
(1, ((
b
)[0]));

55 *
c
[5];

56 
	`ex≥˘
(40, (
c
));

57 *(*
d
)[3];

58 
	`ex≥˘
(8, (
d
));

59 
	`ex≥˘
(24, (*
d
));

60 
	`ex≥˘
(8, (**
d
));

61 
	`ex≥˘
(1, (***
d
));

62 
	`ex≥˘
(4, (()
a
));

63 
	}
}

65 
	$ã°_°ru˘
() {

66 
	`ex≥˘
(1, (°ru˘ { 
a
; }));

67 
	`ex≥˘
(3, (°ru˘ { 
a
[3]; }));

68 
	`ex≥˘
(5, (°ru˘ { 
a
[5]; }));

69 
	`ex≥˘
(8, (°ru˘ { 
a
; 
b
; }));

70 
	`ex≥˘
(12, (°ru˘ { 
a
; 
b
; 
c
; }));

71 
	`ex≥˘
(24, (°ru˘ { 
a
; 
b
; 
c
; }));

72 
	`ex≥˘
(24, (°ru˘ { såu˘ { 
a
; 
b
; } 
x
; 
c
; }));

73 
	}
}

75 
	$ã°_c⁄°ex¥
() {

76 
a
[([4])];

77 
	`ex≥˘
(4, (
a
));

78 
	}
}

80 
	$ã°maö
() {

81 
	`¥öt
("sizeof");

82 
	`ã°_¥imôives
();

83 
	`ã°_poöãrs
();

84 
	`ã°_unsig√d
();

85 
	`ã°_lôîÆs
();

86 
	`ã°_¨øys
();

87 
	`ã°_v¨s
();

88 
	`ã°_°ru˘
();

89 
	`ã°_c⁄°ex¥
();

90 
	}
}

	@8cc/test/staticassert.c

3 
	~"ã°.h
"

5 
	$ã°maö
() {

6 
	`¥öt
("staticássert");

7 
	`_Sètic_as£π
(1, "fail");

10 
	`_Sètic_as£π
(1, "fail");

11 } 
x
;

12 
	}
}

	@8cc/test/stmtexpr.c

3 
	~"ã°.h
"

5 
	$ã°maö
() {

6 
	`¥öt
("statementÉxpression");

8 
	`ex≥˘
(3, ({ 1; 2; 3; }));

9 
	`ex≥˘f
(3.0, ({ 1; 2; 3.0; }));

10 
	`ex≥˘
(5, ({ 
a
 = 5;á; }));

11 
	}
}

	@8cc/test/struct.c

3 
	~<°ddef.h
>

4 
	~"ã°.h
"

6 
	$t1
() {

7 °ru˘ { 
a
; } 
x
;

8 
x
.
a
 = 61;

9 
	`ex≥˘
(61, 
x
.
a
);

10 
	}
}

12 
	$t2
() {

13 °ru˘ { 
a
; 
b
; } 
x
;

14 
x
.
a
 = 61;

15 
x
.
b
 = 2;

16 
	`ex≥˘
(63, 
x
.
a
 + x.
b
);

17 
	}
}

19 
	$t3
() {

20 °ru˘ { 
a
; såu˘ { 
b
; 
c
; } 
y
; } 
x
;

21 
x
.
a
 = 61;

22 
x
.
y
.
b
 = 3;

23 
x
.
y
.
c
 = 3;

24 
	`ex≥˘
(67, 
x
.
a
 + x.
y
.
b
 + x.y.
c
);

25 
	}
}

27 
	$t4
() {

28 
	sèg4
 { 
a
; såu˘ { 
b
; 
c
; } 
y
; } 
x
;

29 
èg4
 
s
;

30 
s
.
a
 = 61;

31 
s
.
y
.
b
 = 3;

32 
s
.
y
.
c
 = 3;

33 
	`ex≥˘
(67, 
s
.
a
 + s.
y
.
b
 + s.y.
c
);

34 
	}
}

36 
	$t5
() {

37 
	sèg5
 { 
a
; } 
x
;

38 
èg5
 *
p
 = &
x
;

39 
x
.
a
 = 68;

40 
	`ex≥˘
(68, (*
p
).
a
);

41 
	}
}

43 
	$t6
() {

44 
	sèg6
 { 
a
; } 
x
;

45 
èg6
 *
p
 = &
x
;

46 (*
p
).
a
 = 69;

47 
	`ex≥˘
(69, 
x
.
a
);

48 
	}
}

50 
	$t7
() {

51 
	sèg7
 { 
a
; 
b
; } 
x
;

52 
èg7
 *
p
 = &
x
;

53 
x
.
b
 = 71;

54 
	`ex≥˘
(71, (*
p
).
b
);

55 
	}
}

57 
	$t8
() {

58 
	sèg8
 { 
a
; 
b
; } 
x
;

59 
èg8
 *
p
 = &
x
;

60 (*
p
).
b
 = 72;

61 
	`ex≥˘
(72, 
x
.
b
);

62 
	}
}

64 
	$t9
() {

65 
	sèg9
 { 
a
[3]; 
b
[3]; } 
x
;

66 
x
.
a
[0] = 73;

67 
	`ex≥˘
(73, 
x
.
a
[0]);

68 
x
.
b
[1] = 74;

69 
	`ex≥˘
(74, 
x
.
b
[1]);

70 
	`ex≥˘
(74, 
x
.
a
[4]);

71 
	}
}

73 
	sèg10
 {

74 
	ma
;

75 
	sèg10a
 {

76 
	mb
;

77 
	mc
;

78 } 
	my
;

79 } 
	gv10
;

80 
	$t10
() {

81 
v10
.
a
 = 71;

82 
v10
.
y
.
b
 = 3;

83 
v10
.
y
.
c
 = 3;

84 
	`ex≥˘
(77, 
v10
.
a
 + v10.
y
.
b
 + v10.y.
c
);

85 
	}
}

87 
	sèg11
 { 
	ma
; } 
	gv11
;

88 
	$t11
() {

89 
èg11
 *
p
 = &
v11
;

90 
v11
.
a
 = 78;

91 
	`ex≥˘
(78, (*
p
).
a
);

92 
	`ex≥˘
(78, 
v11
.
a
);

93 
	`ex≥˘
(78, 
p
->
a
);

94 
p
->
a
 = 79;

95 
	`ex≥˘
(79, (*
p
).
a
);

96 
	`ex≥˘
(79, 
v11
.
a
);

97 
	`ex≥˘
(79, 
p
->
a
);

98 
	}
}

100 
	sèg12
 {

101 
	ma
;

102 
	mb
;

103 } 
	gx
;

104 
	$t12
() {

105 
èg12
 
a
[3];

106 
a
[0].a = 83;

107 
	`ex≥˘
(83, 
a
[0].a);

108 
a
[0].
b
 = 84;

109 
	`ex≥˘
(84, 
a
[0].
b
);

110 
a
[1].
b
 = 85;

111 
	`ex≥˘
(85, 
a
[1].
b
);

112 *
p
 = (*)
a
;

113 
	`ex≥˘
(85, 
p
[3]);

114 
	}
}

116 
	$t13
() {

117 °ru˘ { 
c
; } 
v
 = { 'a' };

118 
	`ex≥˘
('a', 
v
.
c
);

119 
	}
}

121 
	$t14
() {

122 °ru˘ { 
a
[3]; } 
v
 = { { 1, 2, 3 } };

123 
	`ex≥˘
(2, 
v
.
a
[1]);

124 
	}
}

126 
	$u¬amed
() {

129 °ru˘ { 
x
; 
y
; };

130 °ru˘ { 
c
[8]; };

132 } 
v
;

133 
v
.
x
 = 1;

134 
v
.
y
 = 7;

135 
	`ex≥˘
(1, 
v
.
c
[0]);

136 
	`ex≥˘
(7, 
v
.
c
[4]);

137 
	}
}

139 
	$assign
() {

140 °ru˘ { 
a
, 
b
, 
c
; 
d
; 
f
; } 
v1
, 
v2
;

141 
v1
.
a
 = 3;

142 
v1
.
b
 = 5;

143 
v1
.
c
 = 7;

144 
v1
.
d
 = 9;

145 
v1
.
f
 = 11;

146 
v2
 = 
v1
;

147 
	`ex≥˘
(3, 
v2
.
a
);

148 
	`ex≥˘
(5, 
v2
.
b
);

149 
	`ex≥˘
(7, 
v2
.
c
);

150 
	`ex≥˘
(9, 
v2
.
d
);

151 
	`ex≥˘
(11, 
v2
.
f
);

152 
	}
}

154 
	$¨row
() {

155 
	s˚Œ
 { 
vÆ
; 
˚Œ
 *
√xt
; };

156 
˚Œ
 
v1
 = { 5, 
NULL
 };

157 
˚Œ
 
v2
 = { 6, &
v1
 };

158 
˚Œ
 
v3
 = { 7, &
v2
 };

159 
˚Œ
 *
p
 = &
v3
;

160 
	`ex≥˘
(7, 
v3
.
vÆ
);

161 
	`ex≥˘
(7, 
p
->
vÆ
);

162 
	`ex≥˘
(6, 
p
->
√xt
->
vÆ
);

163 
	`ex≥˘
(5, 
p
->
√xt
->√xt->
vÆ
);

165 
p
->
vÆ
 = 10;

166 
p
->
√xt
->
vÆ
 = 11;

167 
p
->
√xt
->√xt->
vÆ
 = 12;

168 
	`ex≥˘
(10, 
p
->
vÆ
);

169 
	`ex≥˘
(11, 
p
->
√xt
->
vÆ
);

170 
	`ex≥˘
(12, 
p
->
√xt
->√xt->
vÆ
);

171 
	}
}

173 
	$addªss
() {

174 
	sèg
 { 
a
; såu˘ { 
b
; } 
y
; } 
x
 = { 6, 7 };

175 *
p1
 = &
x
.
a
;

176 *
p2
 = &
x
.
y
.
b
;

177 
	`ex≥˘
(6, *
p1
);

178 
	`ex≥˘
(7, *
p2
);

179 
	`ex≥˘
(6, *&
x
.
a
);

180 
	`ex≥˘
(7, *&
x
.
y
.
b
);

182 
èg
 *
xp
 = &
x
;

183 *
p3
 = &
xp
->
a
;

184 *
p4
 = &
xp
->
y
.
b
;

185 
	`ex≥˘
(6, *
p3
);

186 
	`ex≥˘
(7, *
p4
);

187 
	`ex≥˘
(6, *&
xp
->
a
);

188 
	`ex≥˘
(7, *&
xp
->
y
.
b
);

189 
	}
}

191 
	$öcom∂ëe
() {

192 
èg1
;

193 
	sèg2
 { 
èg1
 *
p
; };

194 
	sèg1
 { 
x
; };

196 
èg1
 
v1
 = { 3 };

197 
èg2
 
v2
 = { &
v1
 };

198 
	`ex≥˘
(3, 
v2
.
p
->
x
);

199 
	}
}

201 
	$bôfõld_basic
() {

203 
i
;

204 °ru˘ { 
a
:5; 
b
:5; };

205 } 
x
;

206 
x
.
i
 = 0;

207 
x
.
a
 = 10;

208 
x
.
b
 = 11;

209 
	`ex≥˘
(10, 
x
.
a
);

210 
	`ex≥˘
(11, 
x
.
b
);

211 
	`ex≥˘
(362, 
x
.
i
);

212 
	}
}

214 
	$bôfõld_mix
() {

216 
i
;

217 °ru˘ { 
a
:5; 
b
:5; };

218 } 
x
;

219 
x
.
a
 = 10;

220 
x
.
b
 = 11;

221 
	`ex≥˘
(10, 
x
.
a
);

222 
	`ex≥˘
(11, 
x
.
b
);

223 
	`ex≥˘
(362, 
x
.
i
);

224 
	}
}

226 
	$bôfõld_uni⁄
() {

227 uni⁄ { 
a
 : 10; 
b
: 5; 
c
: 5; } 
x
;

228 
x
.
a
 = 2;

229 
	`ex≥˘
(2, 
x
.
a
);

230 
	`ex≥˘
(2, 
x
.
b
);

231 
	`ex≥˘
(2, 
x
.
c
);

232 
	}
}

234 
	$bôfõld_u¬amed
() {

236 
i
;

237 °ru˘ { 
a
:4; 
b
:4; : 8; };

238 } 
x
 = { 0 };

239 
x
.
i
 = 0;

240 
x
.
a
 = 2;

241 
x
.
b
 = 4;

242 
	`ex≥˘
(2, 
x
.
a
);

243 
	`ex≥˘
(4, 
x
.
b
);

244 
	`ex≥˘
(66, 
x
.
i
);

247 
i
;

248 °ru˘ { 
a
:4; :0; 
b
:4; };

249 } 
y
 = { 0 };

250 
y
.
a
 = 2;

251 
y
.
b
 = 4;

252 
	`ex≥˘
(2, 
y
.
a
);

253 
	`ex≥˘
(4, 
y
.
b
);

254 
	`ex≥˘
(1026, 
y
.
i
);

255 
	}
}

257 °ru˘ { 
	ma
:4; 
	mb
:4; } 
	göôã°
 = { 2, 4 };

259 
	$bôfõld_öôülizî
() {

260 
	`ex≥˘
(2, 
öôã°
.
a
);

261 
	`ex≥˘
(4, 
öôã°
.
b
);

263 °ru˘ { 
a
:4; 
b
:4; } 
x
 = { 2, 4 };

264 
	`ex≥˘
(2, 
x
.
a
);

265 
	`ex≥˘
(4, 
x
.
b
);

266 
	}
}

268 
	$ã°_off£tof
() {

269 
	sèg10
 { 
a
, 
b
; };

270 
	`ex≥˘
(0, 
	`off£tof
(
èg10
, 
a
));

271 
	`ex≥˘
(4, 
	`off£tof
(
èg10
, 
b
));

272 
x
[
	`off£tof
(
èg10
, 
b
)];

273 
	`ex≥˘
(4, (
x
) / (x[0]));

275 
	`ex≥˘
(4, 
	`off£tof
(°ru˘ { 
a
; såu˘ { 
b
; }; }, b));

276 
	`ex≥˘
(6, 
	`off£tof
(°ru˘ { 
a
[3]; : 10; 
c
; }, c));

277 
	`ex≥˘
(6, 
	`off£tof
(°ru˘ { 
a
[3]; : 16; 
c
; }, c));

278 
	`ex≥˘
(7, 
	`off£tof
(°ru˘ { 
a
[3]; : 17; 
c
; }, c));

279 
	`ex≥˘
(2, 
	`off£tof
(°ru˘ { : 7; : 7; 
a
; },á));

280 
	`ex≥˘
(0, 
	`off£tof
(°ru˘ { : 0; 
a
; },á));

282 
	`ex≥˘
(1, 
	`_Alignof
(struct { : 32; }));

283 
	`ex≥˘
(2, 
	`_Alignof
(°ru˘ { : 32; 
x
; }));

284 
	`ex≥˘
(4, 
	`_Alignof
(°ru˘ { 
x
; : 32; }));

285 
	}
}

287 
	$ÊexibÀ_membî
() {

288 °ru˘ { 
a
, 
b
[]; } 
x
;

289 
	`ex≥˘
(4, (
x
));

290 °ru˘ { 
a
, 
b
[0]; } 
y
;

291 
	`ex≥˘
(4, (
y
));

292 °ru˘ { 
a
[0]; } 
z
;

293 
	`ex≥˘
(0, (
z
));

295 #ifde‡
__8cc__


296 
	st
 { 
a
, 
b
[]; };

297 
t
 
x2
 = { 1, 2, 3 };

298 
t
 
x3
 = { 1, 2, 3, 4, 5 };

299 
	`ex≥˘
(2, 
x3
.
b
[0]);

300 
	`ex≥˘
(3, 
x3
.
b
[1]);

301 
	`ex≥˘
(4, 
x3
.
b
[2]);

302 
	`ex≥˘
(5, 
x3
.
b
[3]);

304 
	}
}

306 
	$em±y_°ru˘
() {

307 
	sèg15
 {};

308 
	`ex≥˘
(0, (
èg15
));

309 
	uèg16
 {};

310 
	`ex≥˘
(0, (
èg16
));

311 
	}
}

313 
	$ã°maö
() {

314 
	`¥öt
("struct");

315 
	`t1
();

316 
	`t2
();

317 
	`t3
();

318 
	`t4
();

319 
	`t5
();

320 
	`t6
();

321 
	`t7
();

322 
	`t8
();

323 
	`t9
();

324 
	`t10
();

325 
	`t11
();

326 
	`t12
();

327 
	`t13
();

328 
	`t14
();

329 
	`u¬amed
();

330 
	`assign
();

331 
	`¨row
();

332 
	`öcom∂ëe
();

333 
	`bôfõld_basic
();

334 
	`bôfõld_mix
();

335 
	`bôfõld_uni⁄
();

336 
	`bôfõld_u¬amed
();

337 
	`bôfõld_öôülizî
();

338 
	`ã°_off£tof
();

339 
	`ÊexibÀ_membî
();

340 
	`em±y_°ru˘
();

341 
	}
}

	@8cc/test/test.h

3 
	~"°dio.h
"

5 
exô
();

6 
size_t
 
°æí
(const *);

8 
exã∫v¨1
;

9 
exã∫v¨2
;

11 
¥öt
(*
s
);

12 
fÁû
(*
fûe
, 
löe
, *
msg
);

13 
„x≥˘
(*
fûe
, 
löe
, 
a
, 
b
);

14 
„x≥˘_°rög
(*
fûe
, 
löe
, *
a
, *
b
);

15 
„x≥˘f
(*
fûe
, 
löe
, 
a
, 
b
);

16 
„x≥˘d
(*
fûe
, 
löe
, 
a
, 
b
);

17 
„x≥˘l
(*
fûe
, 
löe
, 
a
, 
b
);

19 
	#Áû
(
msg
Ë
	`fÁû
(
__FILE__
, 
__LINE__
, msg)

	)

20 
	#ex≥˘
(
a
, 
b
Ë
	`„x≥˘
(
__FILE__
, 
__LINE__
,á, b);

	)

21 
	#ex≥˘_°rög
(
a
, 
b
Ë
	`„x≥˘_°rög
(
__FILE__
, 
__LINE__
,á, b);

	)

22 
	#ex≥˘f
(
a
, 
b
Ë
	`„x≥˘f
(
__FILE__
, 
__LINE__
,á, b);

	)

23 
	#ex≥˘d
(
a
, 
b
Ë
	`„x≥˘d
(
__FILE__
, 
__LINE__
,á, b);

	)

24 
	#ex≥˘l
(
a
, 
b
Ë
	`„x≥˘l
(
__FILE__
, 
__LINE__
,á, b);

	)

	@8cc/test/testmain.c

3 
	~<°dboﬁ.h
>

4 
	~<°dio.h
>

5 
	~<°dlib.h
>

6 
	~<°rög.h
>

7 
	~<uni°d.h
>

9 
ã°maö
();

12 
	gexã∫v¨1
 = 98;

13 
	gexã∫v¨2
 = 99;

16 
	$boﬁã°1
(
boﬁ
 
x
) {

17  
x
;

18 
	}
}

20 
	$ﬁd°yÀ1
(
x
, 
y
) {

21  
x
 + 
y
;

22 
	}
}

24 
	$¥öt
(*
s
) {

25 
	`¥ötf
("Te°ög %†... ", 
s
);

26 
	`fÊush
(
°dout
);

27 
	}
}

29 
	$¥ötÁû
() {

30 
	`¥ötf
(
	`ißây
(
	`fûío
(
°dout
)) ? "\e[1;31mFailed\e[0m\n" : "Failed\n");

31 
	}
}

33 
	$fÁû
(*
fûe
, 
löe
, *
msg
) {

34 
	`¥ötÁû
();

35 
	`¥ötf
("%s:%d: %s\n", 
fûe
, 
löe
, 
msg
);

36 
	`exô
(1);

37 
	}
}

39 
	$„x≥˘
(*
fûe
, 
löe
, 
a
, 
b
) {

40 i‡(
a
 =
b
)

42 
	`¥ötÁû
();

43 
	`¥ötf
("%s:%d: %dÉx≥˘ed, buàgŸ %d\n", 
fûe
, 
löe
, 
a
, 
b
);

44 
	`exô
(1);

45 
	}
}

47 
	$„x≥˘_°rög
(*
fûe
, 
löe
, *
a
, *
b
) {

48 i‡(!
	`°rcmp
(
a
, 
b
))

50 
	`¥ötÁû
();

51 
	`¥ötf
("%s:%d: \"%s\"Éx≥˘ed, buàgŸ \"%s\"\n", 
fûe
, 
löe
, 
a
, 
b
);

52 
	`exô
(1);

53 
	}
}

55 
	$„x≥˘f
(*
fûe
, 
löe
, 
a
, 
b
) {

56 i‡(
a
 =
b
)

58 
	`¥ötÁû
();

59 
	`¥ötf
("%s:%d: %‡ex≥˘ed, buàgŸ %f\n", 
fûe
, 
löe
, 
a
, 
b
);

60 
	`exô
(1);

61 
	}
}

63 
	$„x≥˘d
(*
fûe
, 
löe
, 
a
, 
b
) {

64 i‡(
a
 =
b
)

66 
	`¥ötÁû
();

67 
	`¥ötf
("%s:%d: %l‡ex≥˘ed, buàgŸ %lf\n", 
fûe
, 
löe
, 
a
, 
b
);

68 
	`exô
(1);

69 
	}
}

71 
	$„x≥˘l
(*
fûe
, 
löe
, 
a
, 
b
) {

72 i‡(
a
 =
b
)

74 
	`¥ötÁû
();

75 
	`¥ötf
("%s:%d: %ldÉx≥˘ed, buàgŸ %ld\n", 
fûe
, 
löe
, 
a
, 
b
);

76 
	`exô
(1);

77 
	}
}

79 
	$maö
() {

80 
	`ã°maö
();

81 
	`¥ötf
(
	`ißây
(
	`fûío
(
°dout
)) ? "\e[32mOK\e[0m\n" : "OK\n");

83 
	}
}

	@8cc/test/type.c

3 
	~"ã°.h
"

4 
	~<°dboﬁ.h
>

5 
	~<°ddef.h
>

7 
	$ã°_ty≥
() {

8 
a
;

9 
b
;

10 
c
;

11 
d
;

12 
e
;

13 
f
;

14 
g
;

15 
h
;

16 
i
;

17 
j
;

18 
k
;

19 
l
;

20 
_Boﬁ
 
m
;

21 
boﬁ
 
n
;

22 
	}
}

24 
	$ã°_sig√d
() {

25 sig√d 
a
;

26 sig√d 
b
;

27 sig√d 
c
;

28 sig√d 
d
;

29 sig√d 
e
;

30 sig√d 
f
;

31 sig√d 
g
;

32 sig√d 
h
;

33 
	}
}

35 
	$ã°_unsig√d
() {

36 
a
;

37 
b
;

38 
c
;

39 
d
;

40 
e
;

41 
f
;

42 
g
;

43 
h
;

44 
	}
}

46 
	$ã°_°‹age_˛ass
() {

47 
a
;

48 autÿ
b
;

49 
c
;

50 
d
;

51 autÿ
e
;

52 
f
;

53 
	}
}

55 
	$ã°_poöãr
() {

56 *
a
;

57 
	`ex≥˘
(8, (
a
));

58 *
b
[5];

59 
	`ex≥˘
(40, (
b
));

60 (*
c
)[5];

61 
	`ex≥˘
(8, (
c
));

62 
	}
}

64 
	$ã°_unusuÆ_‹dî
() {

65 autÿ* c⁄° * c⁄° 
a
;

66 
	}
}

68 
	$ã°_ty≥def
() {

69 
	töãgî
;

70 
öãgî
 
a
 = 5;

71 
	`ex≥˘
(5, 
a
);

73 
	t¨øy
[3];

74 
¨øy
 
b
 = { 1, 2, 3 };

75 
	`ex≥˘
(2, 
b
[1]);

77 
	sèg
 { 
x
; } 
	t°πy≥
;

78 
°πy≥
 
c
;

79 
c
.
x
 = 5;

80 
	`ex≥˘
(5, 
c
.
x
);

82 
	tx
;

84 
x
 = 3;

85 
	`ex≥˘
(3, 
x
);

88 
a
 = (
x
), x = 5, 
c
 = (x);

89 
	`ex≥˘
(1, 
a
);

90 
	`ex≥˘
(5, 
x
);

91 
	`ex≥˘
(4, 
c
);

93 
	}
}

95 
	$ã°_Æign
() {

96 #ifde‡
__8cc__


97 
	`ex≥˘
(8, (
max_Æign_t
));

99 
	}
}

101 
	$ã°maö
() {

102 
	`¥öt
("type system");

103 
	`ã°_ty≥
();

104 
	`ã°_sig√d
();

105 
	`ã°_unsig√d
();

106 
	`ã°_°‹age_˛ass
();

107 
	`ã°_poöãr
();

108 
	`ã°_unusuÆ_‹dî
();

109 
	`ã°_ty≥def
();

110 
	`ã°_Æign
();

111 
	}
}

	@8cc/test/typeof.c

3 
	~"ã°.h
"

5 
	$ã°_basic
() {

6 
	`ty≥of
(Ë
a
 = 5;

7 
	`ex≥˘
(5, 
a
);

8 
	`ty≥of
(
a
Ë
b
 = 6;

9 
	`ex≥˘
(6, 
b
);

10 
	}
}

12 
	$ã°_¨øy
() {

13 
a
[] = "abc";

14 
	`ty≥of
(
a
Ë
b
 = "de";

15 
	`ex≥˘_°rög
("de", 
b
);

16 
	`ex≥˘
(4, (
b
));

18 
	`ty≥of
—y≥o‡(*)[4]Ë
y
;

19 
	`ex≥˘
(4, (
y
) / (*y));

21 
	`ty≥of
(
	ta
[0]Ë
	tCHAR
;

22 
CHAR
 
z
 = 'z';

23 
	`ex≥˘
('z', 
z
);

24 
	}
}

26 
	$ã°_Æt
() {

27 
	`__ty≥of__
(Ë
a
 = 10;

28 
	`ex≥˘
(10, 
a
);

29 
	}
}

31 
	$ã°maö
() {

32 
	`¥öt
("typeof");

33 
	`ã°_basic
();

34 
	`ã°_¨øy
();

35 
	`ã°_Æt
();

36 
	}
}

	@8cc/test/union.c

3 
	~"ã°.h
"

5 
	$t1
() {

6 uni⁄ { 
a
; 
b
; } 
x
;

7 
x
.
a
 = 90;

8 
	`ex≥˘
(90, 
x
.
b
);

9 
	}
}

11 
	$t2
() {

12 uni⁄ { 
a
[4]; 
b
; } 
x
;

13 
x
.
b
 = 0;

14 
x
.
a
[1] = 1;

15 
	`ex≥˘
(256, 
x
.
b
);

16 
	}
}

18 
	$t3
() {

19 uni⁄ { 
a
[4]; 
b
; } 
x
;

20 
x
.
a
[0] = x.a[1] = x.a[2] = x.a[3] = 0;

21 
x
.
a
[1]=1;

22 
	`ex≥˘
(256, 
x
.
b
);

23 
	}
}

25 
	$ã°_sizeof
() {

26 
	`ex≥˘
(4, (uni⁄ { 
a
; 
b
; }));

27 
	`ex≥˘
(8, (uni⁄ { 
a
; 
b
; }));

28 
	`ex≥˘
(8, (uni⁄ { 
	`_Alig«s
(8Ë
a
; 
b
; }));

29 
	}
}

31 
	$ã°maö
() {

32 
	`¥öt
("union");

33 
	`t1
();

34 
	`t2
();

35 
	`t3
();

36 
	`ã°_sizeof
();

37 
	}
}

	@8cc/test/usualconv.c

3 
	~"ã°.h
"

4 
	~<°dboﬁ.h
>

6 
	$ã°_usuÆ_c⁄v
() {

7 
	`ex≥˘
(1, (
boﬁ
));

8 
	`ex≥˘
(1, (()0));

10 
	`ex≥˘
(4, ((
boﬁ
)0 + (bool)0));

11 
	`ex≥˘
(4, (()0 + ()0));

12 
	`ex≥˘
(4, (()0 + (
boﬁ
)0));

13 
	`ex≥˘
(4, (()0 + ()0));

14 
	`ex≥˘
(8, (()0 + ()0));

15 
	`ex≥˘
(8, (()0 + ()0));

16 
	}
}

18 
	$ã°maö
() {

19 
	`¥öt
("usual conversion");

20 
	`ã°_usuÆ_c⁄v
();

21 
	}
}

	@8cc/test/varargs.c

3 
	~<°d¨g.h
>

4 
	~"ã°.h
"

6 
	$ã°_buûtö
() {

7 #ifde‡
__8cc__


8 
	`ex≥˘
(0, 
	`__buûtö_ªg_˛ass
((*)0));

9 
	`ex≥˘
(1, 
	`__buûtö_ªg_˛ass
((*)0));

10 
	`ex≥˘
(2, 
	`__buûtö_ªg_˛ass
((°ru˘{ 
x
; }*)0));

12 
	}
}

14 
	$ã°_öt
(
a
, ...) {

15 
va_li°
 
≠
;

16 
	`va_°¨t
(
≠
, 
a
);

17 
	`ex≥˘
(1, 
a
);

18 
	`ex≥˘
(2, 
	`va_¨g
(
≠
, ));

19 
	`ex≥˘
(3, 
	`va_¨g
(
≠
, ));

20 
	`ex≥˘
(5, 
	`va_¨g
(
≠
, ));

21 
	`ex≥˘
(8, 
	`va_¨g
(
≠
, ));

22 
	`va_íd
(
≠
);

23 
	}
}

25 
	$ã°_Êﬂt
(
a
, ...) {

26 
va_li°
 
≠
;

27 
	`va_°¨t
(
≠
, 
a
);

28 
	`ex≥˘f
(1.0, 
a
);

29 
	`ex≥˘d
(2.0, 
	`va_¨g
(
≠
, ));

30 
	`ex≥˘d
(4.0, 
	`va_¨g
(
≠
, ));

31 
	`ex≥˘d
(8.0, 
	`va_¨g
(
≠
, ));

32 
	`va_íd
(
≠
);

33 
	}
}

35 
	$ã°_mix
(*
p
, ...) {

36 
va_li°
 
≠
;

37 
	`va_°¨t
(
≠
, 
p
);

38 
	`ex≥˘_°rög
("abc", 
p
);

39 
	`ex≥˘d
(2.0, 
	`va_¨g
(
≠
, ));

40 
	`ex≥˘
(4, 
	`va_¨g
(
≠
, ));

41 
	`ex≥˘_°rög
("d", 
	`va_¨g
(
≠
, *));

42 
	`ex≥˘
(5, 
	`va_¨g
(
≠
, ));

43 
	`va_íd
(
≠
);

44 
	}
}

46 *
	$fmt
(*
fmt
, ...) {

47 
buf
[100];

48 
va_li°
 
≠
;

49 
	`va_°¨t
(
≠
, 
fmt
);

50 
	`v•rötf
(
buf
, 
fmt
, 
≠
);

51 
	`va_íd
(
≠
);

52  
buf
;

53 
	}
}

55 
	$ã°_va_li°
() {

56 
	`ex≥˘_°rög
("", 
	`fmt
(""));

57 
	`ex≥˘_°rög
("3", 
	`fmt
("%d", 3));

58 
	`ex≥˘_°rög
("3,1.0,6,2.0,abc", 
	`fmt
("%d,%.1f,%d,%.1f,%s", 3, 1.0, 6, 2.0, "abc"));

59 
	}
}

61 
	$ã°maö
() {

62 
	`¥öt
("varargs");

63 
	`ã°_buûtö
();

64 
	`ã°_öt
(1, 2, 3, 5, 8);

65 
	`ã°_Êﬂt
(1.0, 2.0, 4.0, 8.0);

66 
	`ã°_mix
("abc", 2.0, 4, "d", 5);

67 
	`ã°_va_li°
();

68 
	}
}

	@8cc/utiltest.c

3 
	~<°rög.h
>

4 
	~"8cc.h
"

6 *
	$gë_ba£_fûe
(Ë{  
NULL
; 
	}
}

8 
	#as£π_åue
(
ex¥
Ë
	`as£π_åue2
(
__LINE__
, #ex¥, (ex¥))

	)

9 
	#as£π_nuŒ
(...Ë
	`as£π_nuŒ2
(
__LINE__
, 
__VA_ARGS__
)

	)

10 
	#as£π_°rög
(...Ë
	`as£π_°rög2
(
__LINE__
, 
__VA_ARGS__
)

	)

11 
	#as£π_öt
(...Ë
	`as£π_öt2
(
__LINE__
, 
__VA_ARGS__
)

	)

13 
	$as£π_åue2
(
löe
, *
ex¥
, 
ªsu…
) {

14 i‡(!
ªsu…
)

15 
	`îr‹
("%d:ás£π_åue: %s", 
löe
, 
ex¥
);

16 
	}
}

18 
	$as£π_nuŒ2
(
löe
, *
p
) {

19 i‡(
p
)

20 
	`îr‹
("%d: NuŒÉx≥˘ed", 
löe
);

21 
	}
}

23 
	$as£π_°rög2
(
löe
, *
s
, *
t
) {

24 i‡(
	`°rcmp
(
s
, 
t
))

25 
	`îr‹
("%d: Ex≥˘ed \"%s\" buàgŸ \"%s\"", 
löe
, 
s
, 
t
);

26 
	}
}

28 
	$as£π_öt2
(
löe
, 
a
, 
b
) {

29 i‡(
a
 !
b
)

30 
	`îr‹
("%d: Ex≥˘ed %ld buàgŸ %ld", 
löe
, 
a
, 
b
);

31 
	}
}

33 
	$ã°_buf
() {

34 
Buf„r
 *
b
 = 
	`make_buf„r
();

35 
	`buf_wrôe
(
b
, 'a');

36 
	`buf_wrôe
(
b
, 'b');

37 
	`buf_wrôe
(
b
, '\0');

38 
	`as£π_°rög
("ab", 
	`buf_body
(
b
));

40 
Buf„r
 *
b2
 = 
	`make_buf„r
();

41 
	`buf_wrôe
(
b2
, '.');

42 
	`buf_¥ötf
(
b2
, "%s", "0123456789");

43 
	`as£π_°rög
(".0123456789", 
	`buf_body
(
b2
));

44 
	}
}

46 
	$ã°_li°
() {

47 
Ve˘‹
 *
li°
 = 
	`make_ve˘‹
();

48 
	`as£π_öt
(0, 
	`vec_Àn
(
li°
));

49 
	`vec_push
(
li°
, (*)1);

50 
	`as£π_öt
(1, 
	`vec_Àn
(
li°
));

51 
	`vec_push
(
li°
, (*)2);

52 
	`as£π_öt
(2, 
	`vec_Àn
(
li°
));

54 
Ve˘‹
 *
c›y
 = 
	`vec_c›y
(
li°
);

55 
	`as£π_öt
(2, 
	`vec_Àn
(
c›y
));

56 
	`as£π_öt
(1, ()
	`vec_gë
(
c›y
, 0));

57 
	`as£π_öt
(2, ()
	`vec_gë
(
c›y
, 1));

59 
Ve˘‹
 *
ªv
 = 
	`vec_ªvî£
(
li°
);

60 
	`as£π_öt
(2, 
	`vec_Àn
(
ªv
));

61 
	`as£π_öt
(1, ()
	`vec_p›
(
ªv
));

62 
	`as£π_öt
(1, 
	`vec_Àn
(
ªv
));

63 
	`as£π_öt
(2, ()
	`vec_p›
(
ªv
));

64 
	`as£π_öt
(0, 
	`vec_Àn
(
ªv
));

66 
Ve˘‹
 *
li°3
 = 
	`make_ve˘‹
();

67 
	`vec_push
(
li°3
, (*)1);

68 
	`as£π_öt
(1, ()
	`vec_hód
(
li°3
));

69 
	`as£π_öt
(1, ()
	`vec_èû
(
li°3
));

70 
	`vec_push
(
li°3
, (*)2);

71 
	`as£π_öt
(1, ()
	`vec_hód
(
li°3
));

72 
	`as£π_öt
(2, ()
	`vec_èû
(
li°3
));

74 
Ve˘‹
 *
li°4
 = 
	`make_ve˘‹
();

75 
	`vec_push
(
li°4
, (*)1);

76 
	`vec_push
(
li°4
, (*)2);

77 
	`as£π_öt
(1, ()
	`vec_gë
(
li°4
, 0));

78 
	`as£π_öt
(2, ()
	`vec_gë
(
li°4
, 1));

79 
	}
}

81 
	$ã°_m≠
() {

82 
M≠
 *
m
 = 
	`make_m≠
();

83 
	`as£π_nuŒ
(
	`m≠_gë
(
m
, "abc"));

86 
i
 = 0; i < 10000; i++) {

87 *
k
 = 
	`f‹m©
("%d", 
i
);

88 
	`m≠_put
(
m
, 
k
, (*)(
öçå_t
)
i
);

89 
	`as£π_öt
(
i
, ()(
öçå_t
)
	`m≠_gë
(
m
, 
k
));

93 
i
 = 0; i < 1000; i++) {

94 *
k
 = 
	`f‹m©
("%d", 
i
);

95 
	`m≠_put
(
m
, 
k
, (*)(
öçå_t
)
i
);

96 
	`as£π_öt
(
i
, ()(
öçå_t
)
	`m≠_gë
(
m
, 
k
));

100 
i
 = 0; i < 10000; i++) {

101 *
k
 = 
	`f‹m©
("%d", 
i
);

102 
	`as£π_öt
(
i
, (
öçå_t
)
	`m≠_gë
(
m
, 
k
));

103 
	`m≠_ªmove
(
m
, 
k
);

104 
	`as£π_nuŒ
(
	`m≠_gë
(
m
, 
k
));

106 
	}
}

108 
	$ã°_m≠_°ack
() {

109 
M≠
 *
m1
 = 
	`make_m≠
();

110 
	`m≠_put
(
m1
, "x", (*)1);

111 
	`m≠_put
(
m1
, "y", (*)2);

112 
	`as£π_öt
(1, ()(
öçå_t
)
	`m≠_gë
(
m1
, "x"));

114 
M≠
 *
m2
 = 
	`make_m≠_∑ª¡
(
m1
);

115 
	`as£π_öt
(1, ()(
öçå_t
)
	`m≠_gë
(
m2
, "x"));

116 
	`m≠_put
(
m2
, "x", (*)3);

117 
	`as£π_öt
(3, ()(
öçå_t
)
	`m≠_gë
(
m2
, "x"));

118 
	`as£π_öt
(1, ()(
öçå_t
)
	`m≠_gë
(
m1
, "x"));

119 
	}
}

121 
	$ã°_di˘
() {

122 
Di˘
 *
di˘
 = 
	`make_di˘
();

123 
	`as£π_nuŒ
(
	`di˘_gë
(
di˘
, "abc"));

124 
	`di˘_put
(
di˘
, "abc", (*)50);

125 
	`di˘_put
(
di˘
, "xyz", (*)70);

126 
	`as£π_öt
(50, ()
	`di˘_gë
(
di˘
, "abc"));

127 
	`as£π_öt
(70, ()
	`di˘_gë
(
di˘
, "xyz"));

128 
	`as£π_öt
(2, 
	`vec_Àn
(
	`di˘_keys
(
di˘
)));

129 
	}
}

131 
	$ã°_£t
() {

132 
Së
 *
s
 = 
NULL
;

133 
	`as£π_öt
(0, 
	`£t_has
(
s
, "abc"));

134 
s
 = 
	`£t_add
(s, "abc");

135 
s
 = 
	`£t_add
(s, "def");

136 
	`as£π_öt
(1, 
	`£t_has
(
s
, "abc"));

137 
	`as£π_öt
(1, 
	`£t_has
(
s
, "def"));

138 
	`as£π_öt
(0, 
	`£t_has
(
s
, "xyz"));

139 
Së
 *
t
 = 
NULL
;

140 
t
 = 
	`£t_add
(t, "abc");

141 
t
 = 
	`£t_add
(t, "DEF");

142 
	`as£π_öt
(1, 
	`£t_has
(
	`£t_uni⁄
(
s
, 
t
), "abc"));

143 
	`as£π_öt
(1, 
	`£t_has
(
	`£t_uni⁄
(
s
, 
t
), "def"));

144 
	`as£π_öt
(1, 
	`£t_has
(
	`£t_uni⁄
(
s
, 
t
), "DEF"));

145 
	`as£π_öt
(1, 
	`£t_has
(
	`£t_öãr£˘i⁄
(
s
, 
t
), "abc"));

146 
	`as£π_öt
(0, 
	`£t_has
(
	`£t_öãr£˘i⁄
(
s
, 
t
), "def"));

147 
	`as£π_öt
(0, 
	`£t_has
(
	`£t_öãr£˘i⁄
(
s
, 
t
), "DEF"));

148 
	}
}

150 
	$ã°_∑th
() {

151 
	`as£π_°rög
("/abc", 
	`fuŒ∑th
("/abc"));

152 
	`as£π_°rög
("/abc/def", 
	`fuŒ∑th
("/abc/def"));

153 
	`as£π_°rög
("/abc/def", 
	`fuŒ∑th
("/abc///def"));

154 
	`as£π_°rög
("/abc/def", 
	`fuŒ∑th
("//abc///def"));

155 
	`as£π_°rög
("/abc/xyz", 
	`fuŒ∑th
("/abc/def/../xyz"));

156 
	`as£π_°rög
("/xyz", 
	`fuŒ∑th
("/abc/def/../../../xyz"));

157 
	`as£π_°rög
("/xyz", 
	`fuŒ∑th
("/abc/def/../../../../xyz"));

158 
	}
}

160 
	$ã°_fûe
() {

161 
	`°ªam_push
(
	`make_fûe_°rög
("abc"));

162 
	`as£π_öt
('a', 
	`ªadc
());

163 
	`as£π_öt
('b', 
	`ªadc
());

164 
	`uƒódc
('b');

165 
	`uƒódc
('a');

166 
	`as£π_öt
('a', 
	`ªadc
());

167 
	`as£π_öt
('b', 
	`ªadc
());

168 
	`as£π_öt
('c', 
	`ªadc
());

169 
	`as£π_öt
('\n', 
	`ªadc
());

170 
	`uƒódc
('\n');

171 
	`as£π_öt
('\n', 
	`ªadc
());

172 
	`as£π_åue
(
	`ªadc
() < 0);

173 
	}
}

175 
	$maö
(
¨gc
, **
¨gv
) {

176 
	`ã°_buf
();

177 
	`ã°_li°
();

178 
	`ã°_m≠
();

179 
	`ã°_m≠_°ack
();

180 
	`ã°_di˘
();

181 
	`ã°_£t
();

182 
	`ã°_∑th
();

183 
	`ã°_fûe
();

184 
	`¥ötf
("Passed\n");

186 
	}
}

	@8cc/vector.c

7 
	~<°dlib.h
>

8 
	~<°rög.h
>

9 
	~"8cc.h
"

11 
	#MIN_SIZE
 8

	)

13 
	$max
(
a
, 
b
) {

14  
a
 > 
b
 ?á : b;

15 
	}
}

17 
	$roundup
(
n
) {

18 i‡(
n
 == 0)

20 
r
 = 1;

21 
n
 > 
r
)

22 
r
 *= 2;

23  
r
;

24 
	}
}

26 
Ve˘‹
 *
	$do_make_ve˘‹
(
size
) {

27 
Ve˘‹
 *
r
 = 
	`mÆloc
((Vector));

28 
size
 = 
	`roundup
(size);

29 i‡(
size
 > 0)

30 
r
->
body
 = 
	`mÆloc
((*Ë* 
size
);

31 
r
->
Àn
 = 0;

32 
r
->
«Œoc
 = 
size
;

33  
r
;

34 
	}
}

36 
Ve˘‹
 *
	$make_ve˘‹
() {

37  
	`do_make_ve˘‹
(0);

38 
	}
}

40 
	$exãnd
(
Ve˘‹
 *
vec
, 
dñè
) {

41 i‡(
vec
->
Àn
 + 
dñè
 <vec->
«Œoc
)

43 
√Àm
 = 
	`max
(
	`roundup
(
vec
->
Àn
 + 
dñè
), 
MIN_SIZE
);

44 *
√wbody
 = 
	`mÆloc
((*Ë* 
√Àm
);

45 
	`mem˝y
(
√wbody
, 
vec
->
body
, (*Ë* vec->
Àn
);

46 
vec
->
body
 = 
√wbody
;

47 
vec
->
«Œoc
 = 
√Àm
;

48 
	}
}

50 
Ve˘‹
 *
	$make_ve˘‹1
(*
e
) {

51 
Ve˘‹
 *
r
 = 
	`do_make_ve˘‹
(0);

52 
	`vec_push
(
r
, 
e
);

53  
r
;

54 
	}
}

56 
Ve˘‹
 *
	$vec_c›y
(
Ve˘‹
 *
§c
) {

57 
Ve˘‹
 *
r
 = 
	`do_make_ve˘‹
(
§c
->
Àn
);

58 
	`mem˝y
(
r
->
body
, 
§c
->body, (*Ë* src->
Àn
);

59 
r
->
Àn
 = 
§c
->len;

60  
r
;

61 
	}
}

63 
	$vec_push
(
Ve˘‹
 *
vec
, *
ñem
) {

64 
	`exãnd
(
vec
, 1);

65 
vec
->
body
[vec->
Àn
++] = 
ñem
;

66 
	}
}

68 
	$vec_≠≥nd
(
Ve˘‹
 *
a
, Ve˘‹ *
b
) {

69 
	`exãnd
(
a
, 
b
->
Àn
);

70 
	`mem˝y
(
a
->
body
 +á->
Àn
, 
b
->body, (*) * b->len);

71 
a
->
Àn
 +
b
->len;

72 
	}
}

74 *
	$vec_p›
(
Ve˘‹
 *
vec
) {

75 
	`as£π
(
vec
->
Àn
 > 0);

76  
vec
->
body
[--vec->
Àn
];

77 
	}
}

79 *
	$vec_gë
(
Ve˘‹
 *
vec
, 
ödex
) {

80 
	`as£π
(0 <
ödex
 && index < 
vec
->
Àn
);

81  
vec
->
body
[
ödex
];

82 
	}
}

84 
	$vec_£t
(
Ve˘‹
 *
vec
, 
ödex
, *
vÆ
) {

85 
	`as£π
(0 <
ödex
 && index < 
vec
->
Àn
);

86 
vec
->
body
[
ödex
] = 
vÆ
;

87 
	}
}

89 *
	$vec_hód
(
Ve˘‹
 *
vec
) {

90 
	`as£π
(
vec
->
Àn
 > 0);

91  
vec
->
body
[0];

92 
	}
}

94 *
	$vec_èû
(
Ve˘‹
 *
vec
) {

95 
	`as£π
(
vec
->
Àn
 > 0);

96  
vec
->
body
[vec->
Àn
 - 1];

97 
	}
}

99 
Ve˘‹
 *
	$vec_ªvî£
(
Ve˘‹
 *
vec
) {

100 
Ve˘‹
 *
r
 = 
	`do_make_ve˘‹
(
vec
->
Àn
);

101 
i
 = 0; i < 
vec
->
Àn
; i++)

102 
r
->
body
[
i
] = 
vec
->body[vec->
Àn
 - i - 1];

103 
r
->
Àn
 = 
vec
->len;

104  
r
;

105 
	}
}

107 *
	$vec_body
(
Ve˘‹
 *
vec
) {

108  
vec
->
body
;

109 
	}
}

111 
	$vec_Àn
(
Ve˘‹
 *
vec
) {

112  
vec
->
Àn
;

113 
	}
}

	@ir/dump_ir.c

1 
	~<°dlib.h
>

3 
	~<ú/ú.h
>

5 
	$maö
(
¨gc
, * 
¨gv
[]) {

6 #i‡
	`deföed
(
NOFILE
Ë|| deföed(
__eú__
)

7 
ModuÀ
* 
m
 = 
	`lﬂd_eú
(
°dö
);

9 
°dîr
 = 
°dout
;

11 i‡(
¨gc
 < 2) {

12 
	`Ârötf
(
°dîr
, "no input file\n");

13 
	`exô
(1);

15 
ModuÀ
* 
m
 = 
	`lﬂd_eú_‰om_fûe
(
¨gv
[1]);

17 
In°
* 
ö°
 = 
m
->
ãxt
; in°; in° = in°->
√xt
) {

18 
	`dump_ö°
(
ö°
);

21 
	}
}

	@ir/eli.c

1 
	~<as£π.h
>

2 
	~<°dboﬁ.h
>

3 
	~<°dio.h
>

4 
	~<°dlib.h
>

5 
	~<°rög.h
>

7 
	~<ú/ú.h
>

9 #ifde‡
__eú__


10 
	#MEMSZ
 0x100000

	)

12 
	#MEMSZ
 0x1000000

	)

15 
	gpc
;

16 
In°
* 
	g¥og
[65536];

17 
	gmem
[
MEMSZ
];

18 
	gªgs
[6];

19 
boﬁ
 
	gvîbo£
;

21 #ifde‡
__GNUC__


22 
__©åibuã__
((
n‹ëu∫
))

24 
	$îr‹
(c⁄° * 
msg
) {

25 
	`Ârötf
(
°dîr
, "%†’c=%d)\n", 
msg
, 
pc
);

26 
	`exô
(1);

27 
	}
}

29 
ölöe
 
	$dump_ªgs
(
In°
* 
ö°
) {

30 
boﬁ
 
had_√g©ive
 = 
Ál£
;

31 c⁄° * 
REG_NAMES
[] = {

34 
	`Ârötf
(
°dîr
, "PC=%d ", 
ö°
->
löío
);

35 
i
 = 0; i < 6; i++) {

36 i‡(
ªgs
[
i
] < 0)

37 
had_√g©ive
 = 
åue
;

38 
	`Ârötf
(
°dîr
, "%s=%d", 
REG_NAMES
[
i
], 
ªgs
[i]);

39 
	`Ârötf
(
°dîr
, 
i
 == 5 ? "\n" : " ");

41 i‡(
had_√g©ive
) {

42 
	`îr‹
("hadÇegative!");

44 
	}
}

46 
	$vÆue
(
VÆue
* 
v
) {

47 i‡(
v
->
ty≥
 =
REG
) {

48  
ªgs
[
v
->
ªg
];

49 } i‡(
v
->
ty≥
 =
IMM
) {

50  
v
->
imm
;

52 
	`îr‹
("invalid value");

54 
	}
}

56 
	$§c
(
In°
* 
ö°
) {

57  
	`vÆue
(&
ö°
->
§c
);

58 
	}
}

60 
	$cmp
(
In°
* 
ö°
) {

61 
›
 = 
ö°
->op;

62 i‡(
›
 >= 16)

63 
›
 -= 8;

64 
	`as£π
(
ö°
->
d°
.
ty≥
 =
REG
);

65 
d
 = 
ªgs
[
ö°
->
d°
.
ªg
];

66 
s
 = 
	`§c
(
ö°
);

67 
›
) {

68 
JEQ
:

69  
d
 =
s
;

70 
JNE
:

71  
d
 !
s
;

72 
JLT
:

73  
d
 < 
s
;

74 
JGT
:

75  
d
 > 
s
;

76 
JLE
:

77  
d
 <
s
;

78 
JGE
:

79  
d
 >
s
;

80 
JMP
:

83 
	`îr‹
("oops");

85 
	}
}

87 
	$maö
(
¨gc
, * 
¨gv
[]) {

88 #i‡
	`deföed
(
NOFILE
Ë|| deföed(
__eú__
)

89 
ModuÀ
* 
m
 = 
	`lﬂd_eú
(
°dö
);

91 i‡(
¨gc
 >2 && !
	`°rcmp
(
¨gv
[1], "-v")) {

92 
vîbo£
 = 
åue
;

93 
¨gc
--;

94 
¨gv
++;

97 i‡(
¨gc
 < 2) {

98 
	`Ârötf
(
°dîr
, "no input file\n");

102 
ModuÀ
* 
m
 = 
	`lﬂd_eú_‰om_fûe
(
¨gv
[1]);

105 
i
;

106 
i
 = 0;

107 
D©a
* 
d
 = 
m
->
d©a
; d; d = d->
√xt
, 
i
++) {

108 
mem
[
i
] = 
d
->
v
;

110 
In°
* 
ö°
 = 
m
->
ãxt
; in°; 
i
++) {

111 
pc
 = 
ö°
->pc;

112 
¥og
[
pc
] = 
ö°
;

113 ; 
ö°
 && 
pc
 =ö°->pc; in° = in°->
√xt
) {}

116 
pc
 = 
m
->
ãxt
->pc;

118 
In°
* 
ö°
 = 
¥og
[
pc
];

119 ; 
ö°
; in° = in°->
√xt
) {

120 i‡(
vîbo£
) {

121 
	`dump_ªgs
(
ö°
);

122 
	`dump_ö°
(
ö°
);

124 
≈c
 = -1;

125 
ö°
->
›
) {

126 
MOV
:

127 
	`as£π
(
ö°
->
d°
.
ty≥
 =
REG
);

128 
ªgs
[
ö°
->
d°
.
ªg
] = 
	`§c
(inst);

131 
ADD
:

132 
	`as£π
(
ö°
->
d°
.
ty≥
 =
REG
);

133 
ªgs
[
ö°
->
d°
.
ªg
] +
	`§c
(inst);

134 
ªgs
[
ö°
->
d°
.
ªg
] +
MEMSZ
;

135 
ªgs
[
ö°
->
d°
.
ªg
] %
MEMSZ
;

138 
SUB
:

139 
	`as£π
(
ö°
->
d°
.
ty≥
 =
REG
);

140 
ªgs
[
ö°
->
d°
.
ªg
] -
	`§c
(inst);

141 
ªgs
[
ö°
->
d°
.
ªg
] +
MEMSZ
;

142 
ªgs
[
ö°
->
d°
.
ªg
] %
MEMSZ
;

145 
LOAD
: {

146 
	`as£π
(
ö°
->
d°
.
ty≥
 =
REG
);

147 
addr
 = 
	`§c
(
ö°
);

148 i‡(
addr
 < 0)

149 
	`îr‹
("zeroÖageÜoad");

150 
ªgs
[
ö°
->
d°
.
ªg
] = 
mem
[
addr
];

154 
STORE
: {

155 
	`as£π
(
ö°
->
d°
.
ty≥
 =
REG
);

156 
addr
 = 
	`§c
(
ö°
);

157 i‡(
addr
 < 0)

158 
	`îr‹
("zeroÖage store");

159 
mem
[
addr
] = 
ªgs
[
ö°
->
d°
.
ªg
];

163 
PUTC
:

164 
	`putch¨
(
	`§c
(
ö°
));

167 
GETC
: {

168 
c
 = 
	`gëch¨
();

169 
ªgs
[
ö°
->
d°
.
ªg
] = 
c
 =
EOF
 ? 0 : c;

170 
ªgs
[
ö°
->
d°
.
ªg
] +
MEMSZ
;

171 
ªgs
[
ö°
->
d°
.
ªg
] %
MEMSZ
;

175 
EXIT
:

176 
	`exô
(0);

178 
DUMP
:

181 
EQ
:

182 
NE
:

183 
LT
:

184 
GT
:

185 
LE
:

186 
GE
:

187 
ªgs
[
ö°
->
d°
.
ªg
] = 
	`cmp
(inst);

190 
JEQ
:

191 
JNE
:

192 
JLT
:

193 
JGT
:

194 
JLE
:

195 
JGE
:

196 
JMP
:

197 i‡(
	`cmp
(
ö°
)) {

198 
≈c
 = 
	`vÆue
(&
ö°
->
jmp
);

203 
	`îr‹
("oops");

206 i‡(
≈c
 != -1) {

207 
pc
 = 
≈c
;

214 
	}
}

	@ir/ir.c

1 
	~<ú/ú.h
>

3 
	~<˘y≥.h
>

4 
	~<°dboﬁ.h
>

5 
	~<°döt.h
>

6 
	~<°dio.h
>

7 
	~<°dlib.h
>

8 
	~<°rög.h
>

10 
	~<ú/èbÀ.h
>

12 
boﬁ
 
	gg_•lô_basic_block_by_mem
 = 
Ál£
;

14 
	sD©aPriv©e_
 {

15 
	mv
;

16 
D©aPriv©e_
* 
	m√xt
;

17 
VÆue
 
	mvÆ
;

18 
	mlöío
;

19 } 
	tD©aPriv©e
;

22 c⁄° * 
	mfûíame
;

23 
	mlöío
;

24 
	mcﬁ
;

25 
FILE
* 
	mÂ
;

26 
TabÀ
* 
	msymèb
;

27 
	mö_ãxt
;

28 
In°
* 
	mãxt
;

29 
	mpc
;

30 
	msub£˘i⁄
;

31 
D©aPriv©e
* 
	md©a
;

32 
boﬁ
 
	m¥ev_bound¨y
;

33 } 
	tP¨£r
;

36 
	mDATA
 = 
LAST_OP
 + 1, 
	mTEXT
, 
	mLONG
, 
	mSTRING
, 
	mFILENAME
, 
	mLOC


40 
	mREF
 = 
IMM
 + 1, 
	mLABEL


43 #ifde‡
__GNUC__


44 
__©åibuã__
((
n‹ëu∫
))

46 
	$ú_îr‹
(
P¨£r
* 
p
, c⁄° * 
msg
) {

47 
	`Ârötf
(
°dîr
, "%s:%d:%d: %s\n", 
p
->
fûíame
,Ö->
löío
,Ö->
cﬁ
, 
msg
);

48 
	`exô
(1);

49 
	}
}

51 
	$ú_gëc
(
P¨£r
* 
p
) {

52 
c
 = 
	`fgëc
(
p
->
Â
);

53 i‡(
c
 == '\n') {

54 
p
->
löío
++;

55 
p
->
cﬁ
 = 0;

57 
p
->
cﬁ
++;

59  
c
;

60 
	}
}

62 
	$ú_ungëc
(
P¨£r
* 
p
, 
c
) {

63 i‡(
c
 == '\n') {

64 
p
->
löío
--;

66 
	`ungëc
(
c
, 
p
->
Â
);

67 
	}
}

69 
	$≥ek
(
P¨£r
* 
p
) {

70 
c
 = 
	`fgëc
(
p
->
Â
);

71 
	`ungëc
(
c
, 
p
->
Â
);

72  
c
;

73 
	}
}

75 
	$skù_u¡û_ªt
(
P¨£r
* 
p
) {

76 
c
;

78 
c
 = 
	`ú_gëc
(
p
);

79 i‡(
c
 ='\n' || c =
EOF
)

82 
	`ú_ungëc
(
p
, 
c
);

83 
	}
}

85 
	$skù_ws
(
P¨£r
* 
p
) {

86 
c
;

88 
c
 = 
	`ú_gëc
(
p
);

89 i‡(!
	`is•a˚
(
c
))

92 
	`ú_ungëc
(
p
, 
c
);

93 
	}
}

95 
	$ªad_whûe_idít
(
P¨£r
* 
p
, * 
buf
, 
Àn
) {

96 
Àn
--) {

97 
c
 = 
	`ú_gëc
(
p
);

98 i‡(!
	`iß um
(
c
) && c != '_' && c != '.') {

99 
	`ú_ungëc
(
p
, 
c
);

100 *
buf
 = 0;

103 *
buf
++ = 
c
;

105 
	`ú_îr‹
(
p
, "tooÜong ident");

106 
	}
}

108 
	$ªad_öt
(
P¨£r
* 
p
, 
c
) {

109 
boﬁ
 
is_möus
 = 
Ál£
;

110 
r
 = 0;

111 i‡(
c
 == '-') {

112 
is_möus
 = 
åue
;

113 
c
 = 
	`ú_gëc
(
p
);

114 i‡(!
	`isdigô
(
c
))

115 
	`ú_îr‹
(
p
, "digitÉxpected");

117 '0' <
c
 && c <= '9') {

118 
r
 *= 10;

119 
r
 +
c
 - '0';

120 
c
 = 
	`ú_gëc
(
p
);

122 
	`ú_ungëc
(
p
, 
c
);

123  
is_möus
 ? -
r
 :Ñ;

124 
	}
}

126 
D©aPriv©e
* 
	$add_d©a
(
P¨£r
* 
p
) {

127 
D©aPriv©e
* 
n
 = 
	`mÆloc
((DataPrivate));

128 
n
->
√xt
 = 0;

129 
n
->
v
 = 
p
->
sub£˘i⁄
;

130 
n
->
löío
 = 
p
->lineno;

131 
p
->
d©a
->
√xt
 = 
n
;

132 
p
->
d©a
 = 
n
;

133  
n
;

134 
	}
}

136 
	$add_imm_d©a
(
P¨£r
* 
p
, 
v
) {

137 
D©aPriv©e
* 
n
 = 
	`add_d©a
(
p
);

138 
n
->
vÆ
.
ty≥
 = 
IMM
;

139 
n
->
vÆ
.
imm
 = 
v
;

140 
	}
}

142 
	$£rülize_d©a
(
P¨£r
* 
p
, 
D©aPriv©e
* 
d©a_roŸ
) {

143 
boﬁ
 
d⁄e
 = 
Ál£
;

144 
D©aPriv©e
 
£rülized_roŸ
 = {};

145 
D©aPriv©e
* 
£rülized
 = &
£rülized_roŸ
;

146 
öçå_t
 
mp
 = 0;

147 
sub£˘i⁄
 = 0; !
d⁄e
; subsection++) {

148 
d⁄e
 = 
åue
;

149 
D©aPriv©e
* 
d©a
 = 
d©a_roŸ
; d©a->
√xt
;) {

150 
D©aPriv©e
* 
¥ev
 = 
d©a
;

151 
d©a
 = 
¥ev
->
√xt
;

152 i‡(
d©a
->
v
 !
sub£˘i⁄
) {

155 
d⁄e
 = 
Ál£
;

157 
¥ev
->
√xt
 = 
d©a
->next;

159 i‡(
d©a
->
vÆ
.
ty≥
 =(
VÆueTy≥
)
LABEL
) {

160 
p
->
symèb
 = 
	`èbÀ_add
’->symèb, 
d©a
->
vÆ
.
tmp
, (*)
mp
);

162 
£rülized
->
√xt
 = 
d©a
;

163 
£rülized
 = 
d©a
;

164 
£rülized
->
√xt
 = 0;

165 
mp
++;

167 
d©a
 = 
¥ev
;

171 
p
->
symèb
 = 
	`èbÀ_add
’->symèb, "_ed©a", (*)
mp
);

172 
£rülized
->
√xt
 = 
	`mÆloc
((
D©aPriv©e
));

173 
£rülized
->
√xt
->
v
 = 
mp
 + 1;

174 
£rülized
->
√xt
->next = 0;

175 
£rülized
->
√xt
->
vÆ
.
ty≥
 = 
IMM
;

176 
£rülized
->
√xt
->
vÆ
.
imm
 = 
mp
 + 1;

177 
d©a_roŸ
->
√xt
 = 
£rülized_roŸ
.next;

178 
	}
}

180 
Op
 
	$gë_›
(
P¨£r
* 
p
, c⁄° * 
buf
) {

181 i‡(
	`≥ek
(
p
) == ':')

182  
OP_UNSET
;

183 i‡(!
	`°rcmp
(
buf
, "mov")) {

184  
MOV
;

185 } i‡(!
	`°rcmp
(
buf
, "add")) {

186  
ADD
;

187 } i‡(!
	`°rcmp
(
buf
, "sub")) {

188  
SUB
;

189 } i‡(!
	`°rcmp
(
buf
, "load")) {

190  
LOAD
;

191 } i‡(!
	`°rcmp
(
buf
, "store")) {

192  
STORE
;

193 } i‡(!
	`°rcmp
(
buf
, "putc")) {

194  
PUTC
;

195 } i‡(!
	`°rcmp
(
buf
, "getc")) {

196  
GETC
;

197 } i‡(!
	`°rcmp
(
buf
, "exit")) {

198  
EXIT
;

199 } i‡(!
	`°rcmp
(
buf
, "dump")) {

200  
DUMP
;

201 } i‡(!
	`°rcmp
(
buf
, "jeq")) {

202  
JEQ
;

203 } i‡(!
	`°rcmp
(
buf
, "jne")) {

204  
JNE
;

205 } i‡(!
	`°rcmp
(
buf
, "jlt")) {

206  
JLT
;

207 } i‡(!
	`°rcmp
(
buf
, "jgt")) {

208  
JGT
;

209 } i‡(!
	`°rcmp
(
buf
, "jle")) {

210  
JLE
;

211 } i‡(!
	`°rcmp
(
buf
, "jge")) {

212  
JGE
;

213 } i‡(!
	`°rcmp
(
buf
, "jmp")) {

214  
JMP
;

215 } i‡(!
	`°rcmp
(
buf
, "eq")) {

216  
EQ
;

217 } i‡(!
	`°rcmp
(
buf
, "ne")) {

218  
NE
;

219 } i‡(!
	`°rcmp
(
buf
, "lt")) {

220  
LT
;

221 } i‡(!
	`°rcmp
(
buf
, "gt")) {

222  
GT
;

223 } i‡(!
	`°rcmp
(
buf
, "le")) {

224  
LE
;

225 } i‡(!
	`°rcmp
(
buf
, "ge")) {

226  
GE
;

227 } i‡(!
	`°rcmp
(
buf
, ".text")) {

228  
TEXT
;

229 } i‡(!
	`°rcmp
(
buf
, ".data")) {

230  
DATA
;

231 } i‡(!
	`°rcmp
(
buf
, ".long")) {

232  
LONG
;

233 } i‡(!
	`°rcmp
(
buf
, ".string")) {

234  
STRING
;

235 } i‡(!
	`°rcmp
(
buf
, ".file")) {

236  
FILENAME
;

237 } i‡(!
	`°rcmp
(
buf
, ".loc")) {

238  
LOC
;

240  
OP_UNSET
;

241 
	}
}

243 
	$∑r£_löe
(
P¨£r
* 
p
, 
c
) {

244 
buf
[64];

245 
buf
[0] = 
c
;

246 
	`ªad_whûe_idít
(
p
, 
buf
 + 1, 62);

247 
Op
 
›
 = 
	`gë_›
(
p
, 
buf
);

248 i‡(
›
 =(
Op
)
TEXT
) {

249 
p
->
ö_ãxt
 = 1;

251 } i‡(
›
 =(
Op
)
STRING
) {

252 i‡(
p
->
ö_ãxt
)

253 
	`ú_îr‹
(
p
, "inÅext");

254 
	`skù_ws
(
p
);

255 i‡(
	`ú_gëc
(
p
) != '"')

256 
	`ú_îr‹
(
p
, "expected open '\"'");

258 
c
 = 
	`ú_gëc
(
p
);

259 
c
 != '"') {

260 i‡(
c
 == '\\') {

261 
c
 = 
	`ú_gëc
(
p
);

262 i‡(
c
 == 'n') {

263 
c
 = '\n';

264 } i‡(
c
 == 't') {

265 
c
 = '\t';

266 } i‡(
c
 == 'b') {

267 
c
 = '\b';

268 } i‡(
c
 == 'f') {

269 
c
 = '\f';

270 } i‡(
c
 == 'r') {

271 
c
 = '\r';

272 } i‡(
c
 == '\"') {

273 
c
 = '\"';

274 } i‡(
c
 == '\\') {

275 
c
 = '\\';

276 } i‡(
c
 == 'x') {

277 
b
[3];

278 
b
[0] = 
	`ú_gëc
(
p
);

279 
c
 = 
	`ú_gëc
(
p
);

280 i‡(!((
c
 >= '0' && c <= '9') ||

281 (
c
 >= 'a' && c <= 'f') ||

282 (
c
 >= 'A' && c <= 'F'))) {

283 
	`ú_ungëc
(
p
, 
c
);

284 
c
 = 0;

286 
b
[1] = 
c
;

287 
b
[2] = 0;

288 
c
 = 
	`°πoul
(
b
, 
NULL
, 16);

290 
	`ú_îr‹
(
p
, "unknownÉscape");

292 
	`add_imm_d©a
(
p
, 
c
);

294 
	`add_imm_d©a
(
p
, 
c
);

296 
c
 = 
	`ú_gëc
(
p
);

298 
	`add_imm_d©a
(
p
, 0);

300 } i‡(
›
 =(
Op
)
FILENAME
) {

301 
	`skù_u¡û_ªt
(
p
);

303 } i‡(
›
 =(
Op
)
LOC
) {

304 
	`skù_u¡û_ªt
(
p
);

306 } i‡(
›
 =
OP_UNSET
) {

307 
c
 = 
	`ú_gëc
(
p
);

308 i‡(
c
 == ':') {

309 
öçå_t
 
vÆue
 = 0;

310 i‡(
p
->
ö_ãxt
) {

311 i‡(!
p
->
¥ev_bound¨y
)

312 
p
->
pc
++;

313 
vÆue
 = 
p
->
pc
;

314 
p
->
¥ev_bound¨y
 = 
åue
;

315 
p
->
symèb
 = 
	`èbÀ_add
’->symèb, 
	`°rdup
(
buf
), (*)
vÆue
);

317 
D©aPriv©e
* 
d
 = 
	`add_d©a
(
p
);

318 
d
->
vÆ
.
ty≥
 = 
LABEL
;

319 
d
->
vÆ
.
tmp
 = 
	`°rdup
(
buf
);

323 
	`ú_îr‹
(
p
, "unknown op");

326 i‡(
›
 < 0) {

327 
	`ú_îr‹
(
p
, "oops");

329 
¨gc
;

330 i‡(
›
 <
STORE
)

331 
¨gc
 = 2;

332 i‡(
›
 <
GETC
)

333 
¨gc
 = 1;

334 i‡(
›
 <
EXIT
)

335 
¨gc
 = 0;

336 i‡(
›
 <
JGE
)

337 
¨gc
 = 3;

338 i‡(
›
 <
JMP
)

339 
¨gc
 = 1;

340 i‡(
›
 <
GE
)

341 
¨gc
 = 2;

342 i‡(
›
 =
DUMP
)

343 
¨gc
 = 0;

344 i‡(
›
 =(
Op
)
LONG
)

345 
¨gc
 = 1;

346 i‡(
›
 =(
Op
)
DATA
) {

347 
	`skù_ws
(
p
);

348 
c
 = 
	`≥ek
(
p
);

349 
¨gc
 = 
c
 ='-' || 
	`isdigô
(c) ? 1 : 0;

351 
	`ú_îr‹
(
p
, "oops");

353 
VÆue
 
¨gs
[3];

354 
i
 = 0; i < 
¨gc
; i++) {

355 
	`skù_ws
(
p
);

356 i‡(
i
) {

357 
c
 = 
	`ú_gëc
(
p
);

358 i‡(
c
 != ',')

359 
	`ú_îr‹
(
p
, "commaÉxpected");

360 
	`skù_ws
(
p
);

363 
VÆue
 
a
;

364 
c
 = 
	`ú_gëc
(
p
);

365 i‡(
	`isdigô
(
c
) || c == '-') {

366 
a
.
ty≥
 = 
IMM
;

367 
a
.
imm
 = 
	`MOD24
(
	`ªad_öt
(
p
, 
c
));

369 
buf
[0] = 
c
;

370 
	`ªad_whûe_idít
(
p
, 
buf
 + 1, 62);

371 
a
.
ty≥
 = 
REG
;

372 i‡(!
	`°rcmp
(
buf
, "A")) {

373 
a
.
ªg
 = 
A
;

374 } i‡(!
	`°rcmp
(
buf
, "B")) {

375 
a
.
ªg
 = 
B
;

376 } i‡(!
	`°rcmp
(
buf
, "C")) {

377 
a
.
ªg
 = 
C
;

378 } i‡(!
	`°rcmp
(
buf
, "D")) {

379 
a
.
ªg
 = 
D
;

380 } i‡(!
	`°rcmp
(
buf
, "SP")) {

381 
a
.
ªg
 = 
SP
;

382 } i‡(!
	`°rcmp
(
buf
, "BP")) {

383 
a
.
ªg
 = 
BP
;

385 
a
.
ty≥
 = (
VÆueTy≥
)
REF
;

386 
a
.
tmp
 = 
	`°rdup
(
buf
);

389 
¨gs
[
i
] = 
a
;

392 i‡(
›
 =(
Op
)
LONG
) {

393 i‡(
¨gs
[0].
ty≥
 =
IMM
) {

394 
	`add_imm_d©a
(
p
, 
¨gs
[0].
imm
);

395 } i‡(
¨gs
[0].
ty≥
 =(
VÆueTy≥
)
REF
) {

396 
D©aPriv©e
* 
d
 = 
	`add_d©a
(
p
);

397 
d
->
vÆ
.
ty≥
 = 
REF
;

398 
d
->
vÆ
.
tmp
 = 
¨gs
[0].tmp;

400 
	`ú_îr‹
(
p
, "numberÉxpected");

403 } i‡(
›
 =(
Op
)
DATA
) {

404 i‡(
¨gc
 == 1) {

405 i‡(
¨gs
[0].
ty≥
 !
IMM
)

406 
	`ú_îr‹
(
p
, "numberÉxpected");

407 
p
->
sub£˘i⁄
 = 
¨gs
[0].
imm
;

409 
p
->
ö_ãxt
 = 0;

413 
p
->
ãxt
->
√xt
 = 
	`ˇŒoc
(1, (
In°
));

414 
p
->
ãxt
 =Ö->ãxt->
√xt
;

415 
p
->
ãxt
->
›
 = op;

416 
p
->
ãxt
->
pc
 =Ö->pc;

417 
p
->
ãxt
->
löío
 =Ö->lineno;

418 
p
->
¥ev_bound¨y
 = 
Ál£
;

419 
›
) {

420 
LOAD
:

421 
STORE
:

422 i‡(
g_•lô_basic_block_by_mem
) {

423 
p
->
pc
++;

424 
p
->
¥ev_bound¨y
 = 
åue
;

426 
FALLTHROUGH
;

427 
MOV
:

428 
ADD
:

429 
SUB
:

430 
EQ
:

431 
NE
:

432 
LT
:

433 
GT
:

434 
LE
:

435 
GE
:

436 
p
->
ãxt
->
§c
 = 
¨gs
[1];

437 
FALLTHROUGH
;

438 
GETC
:

439 
p
->
ãxt
->
d°
 = 
¨gs
[0];

441 
PUTC
:

442 
p
->
ãxt
->
§c
 = 
¨gs
[0];

443 
EXIT
:

444 
DUMP
:

446 
JEQ
:

447 
JNE
:

448 
JLT
:

449 
JGT
:

450 
JLE
:

451 
JGE
:

452 
p
->
ãxt
->
d°
 = 
¨gs
[1];

453 
p
->
ãxt
->
§c
 = 
¨gs
[2];

454 
FALLTHROUGH
;

455 
JMP
:

456 
p
->
ãxt
->
jmp
 = 
¨gs
[0];

457 
p
->
pc
++;

458 
p
->
¥ev_bound¨y
 = 
åue
;

461 
	`ú_îr‹
(
p
, "oops");

465 
	`dump_ö°
(
p
->
ãxt
);

467 
	}
}

469 
	$∑r£_eú
(
P¨£r
* 
p
) {

470 
In°
 
ãxt_roŸ
 = {};

471 
D©aPriv©e
 
d©a_roŸ
 = {};

472 
c
;

474 
p
->
ö_ãxt
 = 1;

475 
p
->
löío
 = 1;

476 
p
->
ãxt
 = &
ãxt_roŸ
;

477 
p
->
d©a
 = &
d©a_roŸ
;

478 
p
->
pc
 = 0;

479 
p
->
¥ev_bound¨y
 = 
åue
;

481 
p
->
ãxt
->
√xt
 = 
	`ˇŒoc
(1, (
In°
));

482 
p
->
ãxt
 =Ö->ãxt->
√xt
;

483 
p
->
ãxt
->
›
 = 
JMP
;

484 
p
->
ãxt
->
pc
 =Ö->pc++;

485 
p
->
ãxt
->
löío
 = -1;

486 
p
->
ãxt
->
jmp
.
ty≥
 = (
VÆueTy≥
)
REF
;

487 
p
->
ãxt
->
jmp
.
tmp
 = "main";

488 
p
->
ãxt
->
√xt
 = 0;

489 
p
->
symèb
 = 
	`èbÀ_add
(p->symtab, "main", (*)1);

492 
	`skù_ws
(
p
);

493 
c
 = 
	`ú_gëc
(
p
);

494 i‡(
c
 =
EOF
)

497 i‡(
c
 == '#') {

498 
	`skù_u¡û_ªt
(
p
);

499 } i‡(
c
 ='_' || c ='.' || 
	`ißÕha
(c)) {

500 
	`∑r£_löe
(
p
, 
c
);

502 
	`ú_îr‹
(
p
, "unexpected char");

506 
	`£rülize_d©a
(
p
, &
d©a_roŸ
);

507 
p
->
ãxt
 = 
ãxt_roŸ
.
√xt
;

508 
p
->
d©a
 = 
d©a_roŸ
.
√xt
;

509 
	}
}

511 
	$ªsﬁve
(
VÆue
* 
v
, 
TabÀ
* 
symèb
) {

512 i‡(
v
->
ty≥
 !(
VÆueTy≥
)
REF
)

514 c⁄° * 
«me
 = (c⁄° *)
v
->
tmp
;

515 i‡(!
	`èbÀ_gë
(
symèb
, 
«me
, (*)&
v
->
imm
)) {

516 
	`Ârötf
(
°dîr
, "undeföed sym: %s\n", 
«me
);

517 
	`exô
(1);

520 
v
->
ty≥
 = 
IMM
;

521 
	}
}

523 
	$ªsﬁve_syms
(
P¨£r
* 
p
) {

524 
D©aPriv©e
* 
d©a
 = 
p
->d©a; d©a; d©®d©a->
√xt
) {

525 i‡(
d©a
->
vÆ
.
ty≥
 =(
VÆueTy≥
)
REF
) {

526 
	`ªsﬁve
(&
d©a
->
vÆ
, 
p
->
symèb
);

528 
d©a
->
v
 = 
	`MOD24
(d©a->
vÆ
.
imm
);

531 
In°
* 
ö°
 = 
p
->
ãxt
; in°; in° = in°->
√xt
) {

532 
	`ªsﬁve
(&
ö°
->
d°
, 
p
->
symèb
);

533 
	`ªsﬁve
(&
ö°
->
§c
, 
p
->
symèb
);

534 
	`ªsﬁve
(&
ö°
->
jmp
, 
p
->
symèb
);

536 
	}
}

538 
ModuÀ
* 
	$lﬂd_eú_im∂
(c⁄° * 
fûíame
, 
FILE
* 
Â
) {

539 
P¨£r
 
∑r£r
 = {

540 .
fûíame
 = filename,

541 .
Â
 = fp

543 
	`∑r£_eú
(&
∑r£r
);

544 
	`ªsﬁve_syms
(&
∑r£r
);

546 
ModuÀ
* 
m
 = 
	`mÆloc
((Module));

547 
m
->
ãxt
 = 
∑r£r
.text;

548 
m
->
d©a
 = (
D©a
*)
∑r£r
.data;

549  
m
;

550 
	}
}

552 
ModuÀ
* 
	$lﬂd_eú
(
FILE
* 
Â
) {

553  
	`lﬂd_eú_im∂
("<°dö>", 
Â
);

554 
	}
}

556 
ModuÀ
* 
	$lﬂd_eú_‰om_fûe
(c⁄° * 
fûíame
) {

557 
FILE
* 
Â
 = 
	`f›í
(
fûíame
, "r");

558 i‡(!
Â
) {

559 
	`Ârötf
(
°dîr
, "nÿsuch fûe: %s\n", 
fûíame
);

560 
	`exô
(1);

562 
ModuÀ
* 
r
 = 
	`lﬂd_eú_im∂
(
fûíame
, 
Â
);

563 
	`f˛o£
(
Â
);

564  
r
;

565 
	}
}

567 
	$•lô_basic_block_by_mem
() {

568 
g_•lô_basic_block_by_mem
 = 
åue
;

569 
	}
}

571 
	$dump_›
(
Op
 
›
, 
FILE
* 
Â
) {

572 c⁄° * 
›_°rs
[] = {

577 
	`Ârötf
(
Â
, "%s", 
›_°rs
[
›
]);

578 
	}
}

580 
	$dump_vÆ
(
VÆue
* 
vÆ
, 
FILE
* 
Â
) {

581 c⁄° * 
ªg_°rs
[] = {

584 i‡(
vÆ
->
ty≥
 =
REG
) {

585 
	`Ârötf
(
Â
, "%s", 
ªg_°rs
[
vÆ
->
ªg
]);

586 } i‡(
vÆ
->
ty≥
 =
IMM
) {

587 
	`Ârötf
(
Â
, "%d", 
vÆ
->
imm
);

589 
	`Ârötf
(
Â
, "%d (ty≥=%d)", 
vÆ
->
imm
, vÆ->
ty≥
);

591 
	}
}

593 
	$dump_ö°_Â
(
In°
* 
ö°
, 
FILE
* 
Â
) {

594 
	`dump_›
(
ö°
->
›
, 
Â
);

595 
ö°
->
›
) {

596 
MOV
:

597 
ADD
:

598 
SUB
:

599 
LOAD
:

600 
STORE
:

601 
EQ
:

602 
NE
:

603 
LT
:

604 
GT
:

605 
LE
:

606 
GE
:

607 
	`Ârötf
(
Â
, " ");

608 
	`dump_vÆ
(&
ö°
->
d°
, 
Â
);

609 
	`Ârötf
(
Â
, " ");

610 
	`dump_vÆ
(&
ö°
->
§c
, 
Â
);

612 
PUTC
:

613 
	`Ârötf
(
Â
, " ");

614 
	`dump_vÆ
(&
ö°
->
§c
, 
Â
);

616 
GETC
:

617 
	`Ârötf
(
Â
, " ");

618 
	`dump_vÆ
(&
ö°
->
d°
, 
Â
);

620 
EXIT
:

621 
DUMP
:

623 
JEQ
:

624 
JNE
:

625 
JLT
:

626 
JGT
:

627 
JLE
:

628 
JGE
:

629 
	`Ârötf
(
Â
, " ");

630 
	`dump_vÆ
(&
ö°
->
jmp
, 
Â
);

631 
	`Ârötf
(
Â
, " ");

632 
	`dump_vÆ
(&
ö°
->
d°
, 
Â
);

633 
	`Ârötf
(
Â
, " ");

634 
	`dump_vÆ
(&
ö°
->
§c
, 
Â
);

636 
JMP
:

637 
	`Ârötf
(
Â
, " ");

638 
	`dump_vÆ
(&
ö°
->
jmp
, 
Â
);

641 
	`Ârötf
(
Â
, "o›†›=%d\n", 
ö°
->
›
);

642 
	`exô
(1);

644 
	`Ârötf
(
Â
, "Öc=%d @", 
ö°
->
pc
);

645 
löío
 = 
ö°
->lineno;

647 #i‚de‡
__eú__


648 
löío
 &
UINT_MAX
;

650 
	`Ârötf
(
Â
, "%d\n", 
löío
);

651 
	}
}

653 
	$dump_ö°
(
In°
* 
ö°
) {

654 
	`dump_ö°_Â
(
ö°
, 
°dîr
);

655 
	}
}

	@ir/ir.h

1 #i‚de‡
ELVM_IR_H_


2 
	#ELVM_IR_H_


	)

4 
	~<°dio.h
>

6 
	#UINT_MAX
 16777215

	)

7 
	#UINT_MAX_STR
 "16777215"

	)

8 #ifde‡
__eú__


9 
	#MOD24
(
v
Ë
	)
v

11 
	#MOD24
(
v
Ëv & 
UINT_MAX


	)

15 
	mA
, 
	mB
, 
	mC
, 
	mD
, 
	mBP
, 
	mSP


16 } 
	tReg
;

19 
	mREG
, 
	mIMM


20 } 
	tVÆueTy≥
;

23 
	mOP_UNSET
 = -2, 
	mOP_ERR
 = -1,

24 
	mMOV
 = 0, 
	mADD
, 
	mSUB
, 
	mLOAD
, 
	mSTORE
, 
	mPUTC
, 
	mGETC
, 
	mEXIT
,

25 
	mJEQ
 = 8, 
	mJNE
, 
	mJLT
, 
	mJGT
, 
	mJLE
, 
	mJGE
, 
	mJMP
,

27 
	mEQ
 = 16, 
	mNE
, 
	mLT
, 
	mGT
, 
	mLE
, 
	mGE
, 
	mDUMP
,

28 
	mLAST_OP


29 } 
	tOp
;

32 
VÆueTy≥
 
	mty≥
;

34 
Reg
 
	mªg
;

35 
	mimm
;

36 * 
	mtmp
;

38 } 
	tVÆue
;

40 
	sIn°_
 {

41 
Op
 
	m›
;

42 
VÆue
 
	md°
;

43 
VÆue
 
	m§c
;

44 
VÆue
 
	mjmp
;

45 
	mpc
;

46 
	mlöío
;

47 
In°_
* 
	m√xt
;

48 } 
	tIn°
;

50 
	sD©a_
 {

51 
	mv
;

52 
D©a_
* 
	m√xt
;

53 } 
	tD©a
;

56 
In°
* 
	mãxt
;

57 
D©a
* 
	md©a
;

58 } 
	tModuÀ
;

60 
ModuÀ
* 
lﬂd_eú
(
FILE
* 
Â
);

62 
ModuÀ
* 
lﬂd_eú_‰om_fûe
(c⁄° * 
fûíame
);

64 
•lô_basic_block_by_mem
();

66 
dump_ö°
(
In°
* 
ö°
);

67 
dump_ö°_Â
(
In°
* 
ö°
, 
FILE
* 
Â
);

69 #ifde‡
__GNUC__


70 #i‡
__has_©åibuã
(
ÁŒthrough
)

71 
	#FALLTHROUGH
 
	`__©åibuã__
((
ÁŒthrough
))

	)

73 
	#FALLTHROUGH


	)

76 
	#FALLTHROUGH


	)

	@ir/table.c

1 
	~<ú/èbÀ.h
>

3 
	~<°dlib.h
>

4 
	~<°rög.h
>

6 
TabÀ
* 
	$èbÀ_add
(
TabÀ
* 
tbl
, c⁄° * 
key
, c⁄° * 
vÆue
) {

7 
TabÀ
* 
¡bl
 = 
	`mÆloc
((Table));

8 
¡bl
->
√xt
 = 
tbl
;

9 
¡bl
->
key
 = key;

10 
¡bl
->
vÆue
 = value;

11  
¡bl
;

12 
	}
}

14 
boﬁ
 
	$èbÀ_gë
(
TabÀ
* 
tbl
, c⁄° * 
key
, c⁄° ** 
vÆue
) {

15 ; 
tbl
;Åb»tbl->
√xt
) {

16 i‡(!
	`°rcmp
(
tbl
->
key
, key)) {

17 *
vÆue
 = 
tbl
->value;

18  
åue
;

21  
Ál£
;

22 
	}
}

	@ir/table.h

1 #i‚de‡
ELVM_TABLE_H_


2 
	#ELVM_TABLE_H_


	)

4 
	~<°dboﬁ.h
>

6 
	sTabÀ_
 {

7 c⁄° * 
	mkey
;

8 c⁄° * 
	mvÆue
;

9 
TabÀ_
* 
	m√xt
;

10 } 
	tTabÀ
;

12 
TabÀ
* 
èbÀ_add
(TabÀ* 
tbl
, c⁄° * 
key
, c⁄° * 
vÆue
);

14 
boﬁ
 
èbÀ_gë
(
TabÀ
* 
tbl
, c⁄° * 
key
, c⁄° ** 
vÆue
);

	@libc/_builtin.h

1 #i‚de‡
ELVM_LIBC_BUILTIN_H_


2 
	#ELVM_LIBC_BUILTIN_H_


	)

5 
	mquŸ
, 
	mªm
;

6 } 
	t_my_div_t
;

10 
	$my_div
(
a
, 
b
, 
_my_div_t
* 
o
) {

11 
d
[24];

12 
r
[24];

13 
i
;

14 
r
[0] = 1;

15 
i
 = 0;; i++) {

16 
d
[
i
] = 
b
;

17 
nb
 = 
b
 + b;

18 i‡(
nb
 > 
a
 ||Çb < 
b
)

20 
r
[
i
+1] =Ñ[i] +Ñ[i];

21 
b
 = 
nb
;

24 
q
 = 0;

25 ;; 
i
--) {

26 
v
 = 
d
[
i
];

27 i‡(
a
 >
v
) {

28 
q
 +
r
[
i
];

29 
a
 -
v
;

31 i‡(
i
 == 0)

34 
o
->
quŸ
 = 
q
;

35 
o
->
ªm
 = 
a
;

36 
	}
}

38 
	$__buûtö_mul
(
a
, 
b
) {

39 
i
, 
e
, 
v
;

40 i‡(
a
 < 
b
) {

41 
v
 = 
a
;

42 
a
 = 
b
;

43 
b
 = 
v
;

45 i‡(
b
 == 1)

46  
a
;

47 i‡(
b
 == 0)

49 
d
[24];

50 
r
[24];

51 
i
 = 0, 
e
 = 1, 
v
 = 
a
;; i++) {

52 
d
[
i
] = 
v
;

53 
r
[
i
] = 
e
;

54 
v
 += v;

55 
√
 = 
e
 +É;

56 i‡(
√
 < 
e
 ||Çê> 
b
)

58 
e
 = 
√
;

61 
x
 = 0;

62 ;; 
i
--) {

63 i‡(
b
 >
r
[
i
]) {

64 
x
 +
d
[
i
];

65 
b
 -
r
[
i
];

67 i‡(
i
 == 0)

70  
x
;

71 
	}
}

73 
	$__buûtö_div
(
a
, 
b
) {

74 i‡(
b
 == 1)

75  
a
;

76 
_my_div_t
 
r
;

77 
	`my_div
(
a
, 
b
, &
r
);

78  
r
.
quŸ
;

79 
	}
}

81 
	$__buûtö_mod
(
a
, 
b
) {

82 
_my_div_t
 
r
;

83 
	`my_div
(
a
, 
b
, &
r
);

84  
r
.
ªm
;

85 
	}
}

87 c⁄° 
	g__buûtö_bôs_èbÀ
[] = {

96 
	#__BUILTIN_TO_BIT
(
v
, 
t
Ë(v >à? (v -t, 1Ë: 0)

	)

98 
	$__buûtö_™d
(
a
, 
b
) {

99 
r
 = 0;

100 
i
 = 0; i < 24; i++) {

101 
t
 = 
__buûtö_bôs_èbÀ
[
i
];

102 
a1
 = 
	`__BUILTIN_TO_BIT
(
a
, 
t
);

103 
b1
 = 
	`__BUILTIN_TO_BIT
(
b
, 
t
);

104 i‡(
a1
 && 
b1
)

105 
r
 +
t
;

107  
r
;

108 
	}
}

110 
	$__buûtö_‹
(
a
, 
b
) {

111 
r
 = 0;

112 
i
 = 0; i < 24; i++) {

113 
t
 = 
__buûtö_bôs_èbÀ
[
i
];

114 
a1
 = 
	`__BUILTIN_TO_BIT
(
a
, 
t
);

115 
b1
 = 
	`__BUILTIN_TO_BIT
(
b
, 
t
);

116 i‡(
a1
 || 
b1
)

117 
r
 +
t
;

119  
r
;

120 
	}
}

122 
	$__buûtö_x‹
(
a
, 
b
) {

123 
r
 = 0;

124 
i
 = 0; i < 24; i++) {

125 
t
 = 
__buûtö_bôs_èbÀ
[
i
];

126 
a1
 = 
	`__BUILTIN_TO_BIT
(
a
, 
t
);

127 
b1
 = 
	`__BUILTIN_TO_BIT
(
b
, 
t
);

128 i‡(
a1
 !
b1
)

129 
r
 +
t
;

131  
r
;

132 
	}
}

134 
	$__buûtö_nŸ
(
a
) {

135 
r
 = 0;

136 
i
 = 0; i < 24; i++) {

137 
t
 = 
__buûtö_bôs_èbÀ
[
i
];

138 
a1
 = 
	`__BUILTIN_TO_BIT
(
a
, 
t
);

139 i‡(!
a1
)

140 
r
 +
t
;

142  
r
;

143 
	}
}

145 
	$__buûtö_shl
(
a
, 
b
) {

146 
r
 = 0;

147 
i
 = 
b
; i < 24; i++) {

148 
t
 = 
__buûtö_bôs_èbÀ
[
i
];

149 
a1
 = 
	`__BUILTIN_TO_BIT
(
a
, 
t
);

150 i‡(
a1
)

151 
r
 +
__buûtö_bôs_èbÀ
[
i
-
b
];

153  
r
;

154 
	}
}

156 
	$__buûtö_shr
(
a
, 
b
) {

157 
r
 = 0;

158 
i
 = 
b
; i < 24; i++) {

159 
t
 = 
__buûtö_bôs_èbÀ
[
i
-
b
];

160 
a1
 = 
	`__BUILTIN_TO_BIT
(
a
, 
t
);

161 i‡(
a1
)

162 
r
 +
__buûtö_bôs_èbÀ
[
i
];

164  
r
;

165 
	}
}

	@libc/_raw_print.h

1 #i‚de‡
ELVM_LIBC_RAW_PRINT_H_


2 
	#ELVM_LIBC_RAW_PRINT_H_


	)

4 
	~"_buûtö.h
"

6 
putch¨
(
c
);

8 
	$¥öt_°r
(c⁄° * 
p
) {

9 ; *
p
;Ö++)

10 
	`putch¨
(*
p
);

11 
	}
}

13 * 
	$°rögify_öt
(
v
, * 
p
) {

14 *
p
 = '\0';

16 --
p
;

17 *
p
 = 
v
 % 10 + '0';

18 
v
 /= 10;

19 } 
v
);

20  
p
;

21 
	}
}

23 
	$¥öt_öt
(
v
) {

24 
buf
[32];

25 
	`¥öt_°r
(
	`°rögify_öt
(
v
, 
buf
 + (buf) - 1));

26 
	}
}

28 * 
	$°rögify_hex
(
v
, * 
p
) {

29 
is_√g©ive
 = 0;

30 
c
;

31 *
p
 = '\0';

32 i‡(
v
 < 0) {

33 
v
 = -v;

34 
is_√g©ive
 = 1;

37 --
p
;

38 
c
 = 
v
 % 16;

39 *
p
 = 
c
 < 10 ? c + '0' : c - 10 + 'a';

40 
v
 /= 16;

41 } 
v
);

42 i‡(
is_√g©ive
)

43 *--
p
 = '-';

44  
p
;

45 
	}
}

	@libc/assert.h

1 #i‚de‡
ELVM_LIBC_ASSERT_H_


2 
	#ELVM_LIBC_ASSERT_H_


	)

4 
	~"_øw_¥öt.h
"

6 
exô
(
s
);

8 
	#as£π
(
x
) \

10 i‡(!(
x
)) { \

11 
	`¥öt_°r
("assertion failed: " #x "\n"); \

12 
	`exô
(1); \

14 } 0)

	)

	@libc/ctype.h

1 #i‚de‡
ELVM_LIBC_CTYPE_H_


2 
	#ELVM_LIBC_CTYPE_H_


	)

4 
	$is•a˚
(
c
) {

5  (
c
 == '\f' || c == '\n' || c == '\r' ||

6 
c
 == '\t' || c == '\v' || c == ' ');

7 
	}
}

9 
	$isdigô
(
c
) {

10  '0' <
c
 && c <= '9';

11 
	}
}

13 
	$isxdigô
(
c
) {

14  
	`isdigô
(
c
) || ('a' <= c && c <= 'f') || ('A' <= c && c <= 'F');

15 
	}
}

17 
	$isuµî
(
c
) {

18  ('A' <
c
 && c <= 'Z');

19 
	}
}

21 
	$ißÕha
(
c
) {

22  ('a' <
c
 && c <= 'z') || ('A' <= c && c <= 'Z');

23 
	}
}

25 
	$iß um
(
c
) {

26  
	`ißÕha
(
c
Ë|| 
	`isdigô
(c);

27 
	}
}

29 
	$i•röt
(
c
) {

30  
	`is•a˚
(
c
) || (c >= 32 && c < 127);

31 
	}
}

	@libc/errno.h

1 #i‚de‡
ELVM_LIBC_ERRNO_H_


2 
	#ELVM_LIBC_ERRNO_H_


	)

4 
	gî∫o
;

	@libc/inttypes.h

1 #i‚de‡
ELVM_LIBC_INTTYPES_H_


2 
	#ELVM_LIBC_INTTYPES_H_


	)

4 
	~<°döt.h
>

	@libc/libgen.h

1 #i‚de‡
ELVM_LIBC_LIBGEN_H_


2 
	#ELVM_LIBC_LIBGEN_H_


	)

	@libc/limits.h

1 #i‚de‡
ELVM_LIBC_LIMITS_H_


2 
	#ELVM_LIBC_LIMITS_H_


	)

4 
	#SIZE_MAX
 16777215

	)

5 
	#INT_MAX
 16777215

	)

6 
	#UINT_MAX
 16777215

	)

7 
	#LONG_MAX
 16777215

	)

8 
	#INT32_MAX
 16777215

	)

9 
	#INT32_MIN
 0

	)

10 
	#UINT16_MAX
 16777215

	)

11 
	#CHAR_BIT
 24

	)

	@libc/locale.h

1 #i‚de‡
ELVM_LIBC_LOCALE_H_


2 
	#ELVM_LIBC_LOCALE_H_


	)

4 
	#LC_ALL
 6

	)

6 * 
	$£éoˇÀ
(
ˇãg‹y
, c⁄° * 
loˇÀ
) {

7  
loˇÀ
;

8 
	}
}

	@libc/math.h

1 #i‚de‡
ELVM_LIBC_MATH_H_


2 
	#ELVM_LIBC_MATH_H_


	)

	@libc/setjmp.h

1 #i‚de‡
ELVM_LIBC_SETJMP_H_


2 
	#ELVM_LIBC_SETJMP_H_


	)

	@libc/stdarg.h

1 #i‚de‡
ELVM_LIBC_STDARG_H_


2 
	#ELVM_LIBC_STDARG_H_


	)

4 * 
	tva_li°
;

5 
	#va_°¨t
(
≠
, 
œ°
Ë≠ = &
	)
œ°

6 
	#va_¨g
(
≠
, 
ty≥
Ë*—y≥*)++
	)
≠

7 
	#va_c›y
(
de°
, 
§c
Ëde° = 
	)
§c

8 
	#va_íd
(
≠
)

	)

	@libc/stdbool.h

1 #i‚de‡
ELVM_LIBC_STDBOOL_H_


2 
	#ELVM_LIBC_STDBOOL_H_


	)

4 
	#boﬁ
 
_Boﬁ


	)

5 
	#åue
 1

	)

6 
	#Ál£
 0

	)

7 
	#__boﬁ_åue_Ál£_¨e_deföed
 1

	)

	@libc/stddef.h

1 #i‚de‡
ELVM_LIBC_STDDEF_H_


2 
	#ELVM_LIBC_STDDEF_H_


	)

4 
	~"_buûtö.h
"

6 
	#NULL
 0

	)

8 
	tsize_t
;

9 
	t±rdiff_t
;

11 
	#off£tof
(
ty≥
, 
fõld
Ë((
size_t
Ë&(—y≥ *)0)->fõld)

	)

	@libc/stdint.h

1 #i‚de‡
ELVM_LIBC_STDINT_H_


2 
	#ELVM_LIBC_STDINT_H_


	)

4 
	tuöt8_t
;

5 
	tuöt16_t
;

6 
	tuöt32_t
;

7 
	tuöt64_t
;

8 
	tuöçå_t
;

9 
	töt8_t
;

10 
	töt16_t
;

11 
	töt32_t
;

12 
	töt64_t
;

13 
	töçå_t
;

14 
	ttime_t
;

	@libc/stdio.h

1 #i‚de‡
ELVM_LIBC_STDIO_H_


2 
	#ELVM_LIBC_STDIO_H_


	)

4 
	~<°ddef.h
>

5 
	~<°d¨g.h
>

6 
	~"_øw_¥öt.h
"

7 
	~<°rög.h
>

9 
	#EOF
 -1

	)

11 
gëch¨
();

12 
putch¨
(
c
);

13 
puts
(c⁄° * 
p
);

14 
¥ötf
(c⁄° * 
fmt
, ...);

15 
•rötf
(* 
buf
, c⁄° * 
fmt
, ...);

16 
¢¥ötf
(* 
buf
, 
size_t
 
size
, c⁄° * 
fmt
, ...);

18 
	$puts
(c⁄° * 
p
) {

19 
	`¥öt_°r
(
p
);

20 
	`putch¨
('\n');

21 
	}
}

23 
	$v¢¥ötf
(* 
buf
, 
size_t
 
size
, c⁄° * 
fmt
, 
va_li°
 
≠
) {

24 c⁄° * 
öp
;

25 
size_t
 
off
 = 0;

26 
is_ovîlow
 = 0;

27 
öp
 = 
fmt
; *inp; inp++) {

28 i‡(*
öp
 != '%') {

29 i‡(!
is_ovîlow
) {

30 i‡(
off
 + 1 >
size
) {

31 
is_ovîlow
 = 1;

32 
buf
[
off
] = 0;

34 
buf
[
off
] = *
öp
;

37 
off
++;

41 
cur_buf
[32];

42 * 
cur_p
;

43 
ªåy
:

44 *++
öp
) {

46 
ªåy
;

49 
cur_p
 = 
	`°rögify_öt
(
	`va_¨g
(
≠
, ), 
cur_buf
 + (cur_buf) - 1);

52 
cur_p
 = 
	`°rögify_hex
(
	`va_¨g
(
≠
, ), 
cur_buf
 + (cur_buf) - 1);

55 
cur_p
 = 
	`va_¨g
(
≠
, *);

58 
cur_buf
[0] = 
	`va_¨g
(
≠
, );

59 
cur_buf
[1] = 0;

60 
cur_p
 = 
cur_buf
;

63 
cur_buf
[0] = '%';

64 
cur_buf
[1] = 0;

65 
cur_p
 = 
cur_buf
;

68 
	`¥öt_öt
(*
öp
);

69 
	`¥öt_°r
(" in ");

70 
	`¥öt_°r
(
fmt
);

71 
	`¥öt_°r
(": unknown format!\n");

72 
	`exô
(1);

75 
size_t
 
Àn
 = 
	`°æí
(
cur_p
);

76 i‡(!
is_ovîlow
) {

77 i‡(
off
 + 
Àn
 >
size
) {

78 
is_ovîlow
 = 1;

79 
buf
[
off
] = 0;

81 
	`°r˝y
(
buf
 + 
off
, 
cur_p
);

84 
off
 +
Àn
;

86 
buf
[
off
] = 0;

87  
off
;

88 
	}
}

90 
	$v•rötf
(* 
buf
, c⁄° * 
fmt
, 
va_li°
 
≠
) {

91  
	`v¢¥ötf
(
buf
, 256, 
fmt
, 
≠
);

92 
	}
}

94 
	$¢¥ötf
(* 
buf
, 
size_t
 
size
, c⁄° * 
fmt
, ...) {

95 
va_li°
 
≠
;

96 
	`va_°¨t
(
≠
, 
fmt
);

97 
r
 = 
	`v¢¥ötf
(
buf
, 
size
, 
fmt
 , 
≠
);

98 
	`va_íd
(
≠
);

99  
r
;

100 
	}
}

102 
	$•rötf
(* 
buf
, c⁄° * 
fmt
, ...) {

103 
va_li°
 
≠
;

104 
	`va_°¨t
(
≠
, 
fmt
);

105 
r
 = 
	`v•rötf
(
buf
, 
fmt
, 
≠
);

106 
	`va_íd
(
≠
);

107  
r
;

108 
	}
}

110 
	$v¥ötf
(c⁄° * 
fmt
, 
va_li°
 
≠
) {

111 
buf
[256];

112 
r
 = 
	`v¢¥ötf
(
buf
, 256, 
fmt
, 
≠
);

113 
buf
[
r
] = 0;

114 
	`¥öt_°r
(
buf
);

115  
r
;

116 
	}
}

118 
	$¥ötf
(c⁄° * 
fmt
, ...) {

119 
va_li°
 
≠
;

120 
	`va_°¨t
(
≠
, 
fmt
);

121 
r
 = 
	`v¥ötf
(
fmt
, 
≠
);

122 
	`va_íd
(
≠
);

123  
r
;

124 
	}
}

126 
	tFILE
;

127 
FILE
* 
	g°dö
 = (FILE*)1;

128 
FILE
* 
	g°dout
 = (FILE*)1;

129 
FILE
* 
	g°dîr
 = (FILE*)1;

131 
	$Ârötf
(
FILE
* 
Â
, c⁄° * 
fmt
, ...) {

132 
va_li°
 
≠
;

133 
	`va_°¨t
(
≠
, 
fmt
);

134 
	`v¥ötf
(
fmt
, 
≠
);

135 
	`va_íd
(
≠
);

136 
	}
}

138 
	$vÂrötf
(
FILE
* 
Â
, c⁄° * 
fmt
, 
va_li°
 
≠
) {

139  
	`v¥ötf
(
fmt
, 
≠
);

140 
	}
}

142 
	$fûío
(
FILE
* 
Â
) {

144 
	}
}

146 
FILE
* 
	$f›í
(c⁄° * 
fûíame
, c⁄° * 
mode
) {

147  
°dö
;

148 
	}
}

150 
	$f˛o£
(
FILE
* 
Â
) {

152 
	}
}

154 
size_t
 
	$fwrôe
(* 
±r
, 
size_t
 
s
, size_à
n
, 
FILE
* 
Â
) {

155 * 
°r
 = 
±r
;

156 
size_t
 
l
 = ()
s
 * ()
n
;

157 
size_t
 
i
 = 0; i < 
l
; i++)

158 
	`putch¨
(
°r
[
i
]);

159  
l
;

160 
	}
}

162 
	$Âuts
(c⁄° * 
s
, 
FILE
* 
Â
) {

163 
	`¥öt_°r
(
s
);

164 
	}
}

166 
	$fgës
(* 
s
, 
size
, 
FILE
* 
Â
) {

167 
i
 = 0; i < 
size
 - 1; i++) {

168 
c
 = 
	`gëch¨
();

169 
s
[
i
] = 
c
;

170 i‡(
c
 ='\n' || c =
EOF
) {

171 
s
[
i
 + 1] = 0;

172  
i
;

175 
s
[
size
 - 1] = 0;

176  
size
;

177 
	}
}

179 
	gg_ungŸ
 = 
EOF
;

180 
	geof_£í
;

182 
	$fgëc
(
FILE
* 
Â
) {

183 
r
;

184 i‡(
g_ungŸ
 =
EOF
) {

187 i‡(
eof_£í
)

188  
EOF
;

189 
r
 = 
	`gëch¨
();

190 
eof_£í
 = 
r
 =
EOF
;

191  
r
;

193 
r
 = 
g_ungŸ
;

194 
g_ungŸ
 = 
EOF
;

195  
r
;

196 
	}
}

198 
	$gëc
(
FILE
* 
Â
) {

199  
	`fgëc
(
Â
);

200 
	}
}

202 
	$ungëc
(
c
, 
FILE
* 
Â
) {

203 i‡(
g_ungŸ
 =
EOF
)

204  
g_ungŸ
 = 
c
;

205  
EOF
;

206 
	}
}

	@libc/stdlib.h

1 #i‚de‡
ELVM_LIBC_STDLIB_H_


2 
	#ELVM_LIBC_STDLIB_H_


	)

4 
	~<°ddef.h
>

5 
	~"_øw_¥öt.h
"

6 
	~<˘y≥.h
>

8 
	#EXIT_FAILURE
 1

	)

10 
¥öt_°r
(c⁄° * 
p
);

13 
	mquŸ
, 
	mªm
;

14 } 
	tdiv_t
;

16 * 
_ed©a
;

18 
exô
(
s
);

20 
	$ab‹t
() {

21 
	`exô
(1);

22 
	}
}

24 * 
	$mÆloc
(
n
) {

25 * 
r
 = 
_ed©a
;

26 
_ed©a
 +
n
;

27 i‡(
r
 > 
_ed©a
) {

28 
	`¥öt_°r
("no memory!\n");

29 
	`exô
(1);

31  
r
;

32 
	}
}

34 * 
	$ˇŒoc
(
n
, 
s
) {

35  
	`mÆloc
(
n
 * 
s
);

36 
	}
}

38 
	$‰ì
(* 
p
) {

39 
	}
}

43 
	$°πﬁ
(c⁄° *
≈å
, **
íd±r
, 
ba£
)

45 c⁄° *
s
;

46 
acc
, 
cutoff
;

47 
c
;

48 
√g
, 
™y
, 
cuéim
;

54 i‡(
ba£
 < 0 || base == 1 || base > 36) {

55 i‡(
íd±r
 != 0)

56 *
íd±r
 = (*)
≈å
;

65 
s
 = 
≈å
;

67 
c
 = (Ë*
s
++;

68 } 
	`is•a˚
(
c
));

69 i‡(
c
 == '-') {

70 
√g
 = 1;

71 
c
 = *
s
++;

73 
√g
 = 0;

74 i‡(
c
 == '+')

75 
c
 = *
s
++;

77 i‡((
ba£
 == 0 || base == 16) &&

78 
c
 ='0' && (*
s
 == 'x' || *s == 'X')) {

79 
c
 = 
s
[1];

80 
s
 += 2;

81 
ba£
 = 16;

83 i‡(
ba£
 == 0)

84 
ba£
 = 
c
 == '0' ? 8 : 10;

86 i‡(
√g
) {

87 i‡(
cuéim
 > 0) {

88 
cuéim
 -
ba£
;

89 
cutoff
 += 1;

91 
cuéim
 = -cutlim;

93 
acc
 = 0, 
™y
 = 0;; 
c
 = (Ë*
s
++) {

94 i‡(
	`isdigô
(
c
))

95 
c
 -= '0';

96 i‡(
	`ißÕha
(
c
))

97 
c
 -
	`isuµî
(c) ? 'A' - 10 : 'a' - 10;

100 i‡(
c
 >
ba£
)

102 i‡(
™y
 < 0)

104 i‡(
√g
) {

105 
™y
 = 1;

106 
acc
 *
ba£
;

107 
acc
 -
c
;

109 
™y
 = 1;

110 
acc
 *
ba£
;

111 
acc
 +
c
;

114 i‡(
íd±r
 != 0)

115 *
íd±r
 = (*Ë(
™y
 ? 
s
 - 1 : 
≈å
);

116  (
acc
);

117 
	}
}

119 
	$°πoul
(c⁄° *
≈å
, **
íd±r
, 
ba£
) {

120  
	`°πﬁ
(
≈å
, 
íd±r
, 
ba£
);

121 
	}
}

123 
	$°πﬁl
(c⁄° *
≈å
, **
íd±r
, 
ba£
) {

124  
	`°πﬁ
(
≈å
, 
íd±r
, 
ba£
);

125 
	}
}

127 
	$°πouŒ
(c⁄° *
≈å
, **
íd±r
, 
ba£
) {

128  
	`°πﬁ
(
≈å
, 
íd±r
, 
ba£
);

129 
	}
}

131 
	$©oi
(c⁄° * 
s
) {

132 
n
 = 0;

133 
i
 = 0;

134 
s
[
i
] >= '0' && s[i] <= '9') {

135 
n
 = (n << 3) + (n << 1);

136 
n
 +
s
[
i
++] - '0';

138  
n
;

139 
	}
}

141 * 
	$gëív
(c⁄° * 
«me
) {

142  
NULL
;

143 
	}
}

145 
	$qs‹t
(* 
vba£
, 
size_t
 
nmemb
, size_à
size
,

146 (*
com∑r
)(const *, const *)) {

147 i‡(
nmemb
 <= 1)

149 * 
ba£
 = (*)
vba£
;

150 * 
pivŸ
 = 
ba£
 + (
nmemb
 / 2Ë* 
size
;

151 * 
À·
 = 
ba£
;

152 * 
right
 = 
ba£
 + (
nmemb
 - 1Ë* 
size
;

154 
	`¥ötf
("nmemb=%d size=%d\n", 
nmemb
, 
size
);

155 
i
 = 0; i < 
nmemb
; i++) {

156 
	`¥ötf
("%d ", *((*)
ba£
 + 
i
));

158 
	`puts
("");

162 
	`com∑r
(
À·
, 
pivŸ
) >= 32768)

163 
À·
 +
size
;

164 (
	`com∑r
(
right
, 
pivŸ
) - 1) < 32768)

165 
right
 -
size
;

167 i‡(
À·
 >
right
)

169 
size_t
 
i
 = 0; i < 
size
; i++) {

170 
tmp
 = 
À·
[
i
];

171 
À·
[
i
] = 
right
[i];

172 
right
[
i
] = 
tmp
;

174 i‡(
pivŸ
 =
À·
)

175 
pivŸ
 = 
right
;

176 i‡(
pivŸ
 =
right
)

177 
pivŸ
 = 
À·
;

178 
À·
 +
size
;

179 
right
 -
size
;

182 
right
 +
size
;

183 
	`qs‹t
(
ba£
, (
size_t
)(
À·
 - ba£Ë/ 
size
, size, 
com∑r
);

184 
	`qs‹t
(
right
, (
size_t
)(
ba£
 + 
nmemb
 * 
size
 -Ñight) / size,

185 
size
, 
com∑r
);

186 
	}
}

	@libc/string.h

1 #i‚de‡
ELVM_LIBC_STRING_H_


2 
	#ELVM_LIBC_STRING_H_


	)

4 
	~<˘y≥.h
>

5 
	~<°ddef.h
>

6 
	~<°dlib.h
>

8 * 
	$mem£t
(* 
d
, 
c
, 
size_t
 
n
) {

9 
size_t
 
i
;

10 
i
 = 0; i < 
n
; i++) {

11 ((*)
d
)[
i
] = 
c
;

13  
d
;

14 
	}
}

16 * 
	$mem˝y
(* 
d
, c⁄° * 
s
, 
size_t
 
n
) {

17 
size_t
 
i
;

18 
i
 = 0; i < 
n
; i++) {

19 ((*)
d
)[
i
] = ((*)
s
)[i];

21  
d
;

22 
	}
}

24 
size_t
 
	$°æí
(c⁄° * 
s
) {

25 
size_t
 
r
;

26 
r
 = 0; 
s
[r];Ñ++) {}

27  
r
;

28 
	}
}

30 * 
	$°rˇt
(* 
d
, c⁄° * 
s
) {

31 * 
r
 = 
d
;

32 ; *
d
; d++) {}

33 ; *
s
; s++, 
d
++)

34 *
d
 = *
s
;

35  
r
;

36 
	}
}

38 * 
	$°r˝y
(* 
d
, c⁄° * 
s
) {

39 * 
r
 = 
d
;

40 ; *
s
; s++, 
d
++)

41 *
d
 = *
s
;

42 *
d
 = 0;

43  
r
;

44 
	}
}

46 
	$°rcmp
(c⁄° * 
a
, c⁄° * 
b
) {

47 ;*
a
 || *
b
;á++, b++) {

48 i‡(*
a
 < *
b
)

50 i‡(*
a
 > *
b
)

54 
	}
}

56 * 
	$°rchr
(* 
s
, 
c
) {

57 ; *
s
; s++) {

58 i‡(*
s
 =
c
)

59  
s
;

61  
NULL
;

62 
	}
}

64 * 
	$°rdup
(c⁄° * 
s
) {

65 
l
 = 
	`°æí
(
s
);

66 * 
r
 = 
	`mÆloc
(
l
 + 1);

67 
	`°r˝y
(
r
, 
s
);

68  
r
;

69 
	}
}

73 
	$°πok_r
(*
s
, c⁄° *
dñim
, **
œ°
)

75 c⁄° *
•™p
;

76 
c
, 
sc
;

77 *
tok
;

79 i‡(
s
 =
NULL
 && (†*
œ°
) == NULL)

80  (
NULL
);

85 
c⁄t
:

86 
c
 = *
s
++;

87 
•™p
 = 
dñim
; (
sc
 = *spanp++) != 0;) {

88 i‡(
c
 =
sc
)

89 
c⁄t
;

92 i‡(
c
 == 0) {

93 *
œ°
 = 
NULL
;

94  (
NULL
);

96 
tok
 = 
s
 - 1;

103 
c
 = *
s
++;

104 
•™p
 = 
dñim
;

106 i‡((
sc
 = *
•™p
++Ë=
c
) {

107 i‡(
c
 == 0)

108 
s
 = 
NULL
;

110 
s
[-1] = '\0';

111 *
œ°
 = 
s
;

112  (
tok
);

114 } 
sc
 != 0);

117 
	}
}

125 c⁄° 
	gch¨m≠
[] = {

162 
	$°rˇ£cmp
(c⁄° *
s1
, c⁄° *
s2
)

164 c⁄° *
cm
 = 
ch¨m≠
;

165 c⁄° *
us1
 = (c⁄° *)
s1
;

166 c⁄° *
us2
 = (c⁄° *)
s2
;

168 
cm
[*
us1
] =cm[*
us2
++])

169 i‡(*
us1
++ == '\0')

171  (
cm
[*
us1
] - cm[*--
us2
]);

172 
	}
}

176 
	$°∫ˇ£cmp
(c⁄° *
s1
, c⁄° *
s2
, 
size_t
 
n
)

178 i‡(
n
 != 0) {

179 c⁄° *
cm
 = 
ch¨m≠
;

180 c⁄° *
us1
 = (c⁄° *)
s1
;

181 c⁄° *
us2
 = (c⁄° *)
s2
;

184 i‡(
cm
[*
us1
] !cm[*
us2
++])

185  (
cm
[*
us1
] - cm[*--
us2
]);

186 i‡(*
us1
++ == '\0')

188 } --
n
 != 0);

191 
	}
}

195 
	$°Ωbrk
(c⁄° *
s1
, c⁄° *
s2
)

197 c⁄° *
sˇ≈
;

198 
c
, 
sc
;

200 (
c
 = *
s1
++) != 0) {

201 
sˇ≈
 = 
s2
; (
sc
 = *scanp++) != 0;)

202 i‡(
sc
 =
c
)

203  ((*)(
s1
 - 1));

205  (
NULL
);

206 
	}
}

	@libc/strings.h

1 #i‚de‡
ELVM_LIBC_STRINGS_H_


2 
	#ELVM_LIBC_STRINGS_H_


	)

	@libc/sys/stat.h

1 #i‚de‡
ELVM_LIBC_SYS_STAT_H_


2 
	#ELVM_LIBC_SYS_STAT_H_


	)

	@libc/sys/types.h

1 #i‚de‡
ELVM_LIBC_SYS_TYPES_H_


2 
	#ELVM_LIBC_SYS_TYPES_H_


	)

	@libc/sys/wait.h

1 #i‚de‡
ELVM_LIBC_SYS_WAIT_H_


2 
	#ELVM_LIBC_SYS_WAIT_H_


	)

	@libc/time.h

1 #i‚de‡
ELVM_LIBC_TIME_H_


2 
	#ELVM_LIBC_TIME_H_


	)

4 
	ttime_t
;

	@libc/unistd.h

1 #i‚de‡
ELVM_LIBC_UNISTD_H_


2 
	#ELVM_LIBC_UNISTD_H_


	)

4 
	~<°ddef.h
>

6 
	toff_t
;

8 
	#PROT_READ
 1

	)

9 
	#PROT_WRITE
 2

	)

10 
	#PROT_EXEC
 4

	)

11 
	#MAP_PRIVATE
 2

	)

12 
	#MAP_ANON
 0x20

	)

14 * 
	$mm≠
(* 
addr
, 
size_t
 
Àngth
, 
¥Ÿ
, 
Êags
,

15 
fd
, 
off£t
) {

16  
	`ˇŒoc
(
Àngth
, 2);

17 
	}
}

19 
	$munm≠
(* 
addr
, 
size_t
 
Àngth
) {

20 
	}
}

22 
	$ißây
(
fd
) {

24 
	}
}

	@target/arm.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

4 
	~<ú/ú.h
>

5 
	~<èrgë/utû.h
>

7 
	gARMREG
[] = {

26 
	#R0
 ((
Reg
)6)

	)

27 
	#R1
 ((
Reg
)7)

	)

28 
	#R2
 ((
Reg
)8)

	)

29 
	#R3
 ((
Reg
)9)

	)

30 
	#R4
 
A


	)

31 
	#R5
 
B


	)

32 
	#R6
 
C


	)

33 
	#R7
 
D


	)

34 
	#ARM_MEM
 ((
Reg
)10)

	)

35 
	#RODATA
 ((
Reg
)11)

	)

36 
	#FFFFFF
 ((
Reg
)12)

	)

37 
	#ARM_SP
 ((
Reg
)13)

	)

38 
	#ARM_PC
 ((
Reg
)15)

	)

40 
emô_ñf_hódî
(
uöt16_t
 
machöe
, 
uöt32_t
 
fûesz
);

42 
	$emô_4À
(
a
, 
b
, 
c
, 
d
) {

43 
	`emô_1
(
d
);

44 
	`emô_1
(
c
);

45 
	`emô_1
(
b
);

46 
	`emô_1
(
a
);

47 
	}
}

49 
	$emô_svc
() {

50 
	`emô_4À
(0xef, 0x00, 0x00, 0x00);

51 
	}
}

54 
	mARM_AND
 = 0x00,

55 
	mARM_SUB
 = 0x40,

56 
	mARM_ADD
 = 0x80,

57 } 
	tArmOp
;

59 
	$emô_ªg2›
(
ArmOp
 
›
, 
Reg
 
d°
, Reg 
§c
) {

60 
	`emô_4À
(0xe0, 
›
 + 
ARMREG
[
d°
], ARMREG[d°] * 16, ARMREG[
§c
]);

61 
	}
}

64 
	mShl0
 = 0,

65 
	mShl24
 = 4,

66 
	mShl16
 = 8,

67 
	mShl8
 = 12

68 } 
	tImmRŸ
;

70 
	$emô_¨m_mov_ªg
(
Reg
 
d°
, Reg 
§c
) {

71 
	`emô_4À
(0xe1, 0xa0, 
ARMREG
[
d°
] * 16, ARMREG[
§c
]);

72 
	}
}

74 
	$emô_¨m_mov_imm8
(
Reg
 
d°
, 
imm8
, 
ImmRŸ
 
rŸ
) {

75 
	`emô_4À
(0xe3, 0xa0, 
ARMREG
[
d°
] * 16 + 
rŸ
, 
imm8
);

76 
	}
}

78 
	$emô_¨m_mvn_imm8
(
Reg
 
d°
, 
imm8
, 
ImmRŸ
 
rŸ
) {

79 
	`emô_4À
(0xe3, 0xe0, 
ARMREG
[
d°
] * 16 + 
rŸ
, 
imm8
);

80 
	}
}

82 
	$emô_¨m_add_imm8
(
Reg
 
d°
, 
imm8
, 
ImmRŸ
 
rŸ
) {

83 
	`emô_4À
(0xe2, 
ARM_ADD
 + 
ARMREG
[
d°
], ARMREG[d°] * 16 + 
rŸ
, 
imm8
);

84 
	}
}

86 
	$emô_¨m_sub_imm8
(
Reg
 
d°
, 
imm8
, 
ImmRŸ
 
rŸ
) {

87 
	`emô_4À
(0xe2, 
ARM_SUB
 + 
ARMREG
[
d°
], ARMREG[d°] * 16 + 
rŸ
, 
imm8
);

88 
	}
}

90 
	$emô_¨m_mov_imm
(
Reg
 
d°
, 
imm
) {

91 
	`emô_¨m_mov_imm8
(
d°
, 
imm
 % 256, 
Shl0
);

92 
imm
 /= 256;

93 i‡(!
imm
)

95 
	`emô_¨m_add_imm8
(
d°
, 
imm
 % 256, 
Shl8
);

96 
imm
 /= 256;

97 i‡(!
imm
)

99 
	`emô_¨m_add_imm8
(
d°
, 
imm
 % 256, 
Shl16
);

100 
	}
}

102 
	$emô_¨m_add_imm
(
Reg
 
d°
, 
imm
) {

103 i‡(
imm
 > 0xffff00) {

104 
	`emô_¨m_sub_imm8
(
d°
, 0x1000000 - 
imm
, 
Shl0
);

108 
	`emô_¨m_add_imm8
(
d°
, 
imm
 % 256, 
Shl0
);

109 
imm
 /= 256;

110 i‡(!
imm
)

112 
	`emô_¨m_add_imm8
(
d°
, 
imm
 % 256, 
Shl8
);

113 
imm
 /= 256;

114 i‡(!
imm
)

116 
	`emô_¨m_add_imm8
(
d°
, 
imm
, 
Shl16
);

117 
	}
}

119 
	$emô_¨m_sub_imm
(
Reg
 
d°
, 
imm
) {

120 
	`emô_¨m_sub_imm8
(
d°
, 
imm
 % 256, 
Shl0
);

121 
imm
 /= 256;

122 i‡(!
imm
)

124 
	`emô_¨m_sub_imm8
(
d°
, 
imm
 % 256, 
Shl8
);

125 
imm
 /= 256;

126 i‡(!
imm
)

128 
	`emô_¨m_sub_imm8
(
d°
, 
imm
, 
Shl16
);

129 
	}
}

132 
	mMEM_STORE
 = 0x80,

133 
	mMEM_LOAD
 = 0x90,

134 } 
	tLﬂdOrSt‹e
;

136 
	$emô_¨m_mem
(
LﬂdOrSt‹e
 
›
, 
Reg
 
vÆ
, Reg 
ba£
, Reg 
off£t
) {

137 
	`emô_4À
(0xe7, 
›
 + 
ARMREG
[
ba£
], ARMREG[
vÆ
] * 16 + 1, ARMREG[
off£t
]);

138 
	}
}

140 
	$emô_¨m_cmp
(
In°
* 
ö°
) {

141 
Reg
 
ªg
;

142 i‡(
ö°
->
§c
.
ty≥
 =
REG
) {

143 
ªg
 = 
ö°
->
§c
.reg;

145 
ªg
 = 
R0
;

146 
	`emô_¨m_mov_imm
(
ªg
, 
ö°
->
§c
.
imm
);

148 
	`emô_4À
(0xe1, 0x50 + 
ARMREG
[
ö°
->
d°
.
ªg
], 0x00, ARMREG[reg]);

149 
	}
}

151 
	$emô_¨m_£tcc
(
In°
* 
ö°
, 
›
) {

152 
	`emô_¨m_cmp
(
ö°
);

153 
	`emô_¨m_mov_imm8
(
ö°
->
d°
.
ªg
, 0, 
Shl0
);

154 
	`emô_4À
(
›
, 0xa0, 
ARMREG
[
ö°
->
d°
.
ªg
] * 16, 0x01);

155 
	}
}

157 
	$emô_¨m_jcc
(
In°
* 
ö°
, 
›
, * 
pc2addr
) {

158 i‡(
ö°
->
›
 !
JMP
) {

159 
	`emô_¨m_cmp
(
ö°
);

162 i‡(
ö°
->
jmp
.
ty≥
 =
REG
) {

163 
	`emô_¨m_mem
(
MEM_LOAD
, 
ARM_PC
, 
RODATA
, 
ö°
->
jmp
.
ªg
);

165 
uöt32_t
 
v
 = 
pc2addr
[
ö°
->
jmp
.
imm
] / 4 - (
	`emô_˙t
() + 8) / 4;

166 
	`emô_1
(
v
 % 256);

167 
v
 /= 256;

168 
	`emô_1
(
v
 % 256);

169 
v
 /= 256;

170 
	`emô_1
(
v
 % 256);

171 
	`emô_1
(
›
);

173 
	}
}

175 
	$öô_°©e_¨m
(
D©a
* 
d©a
, 
rod©a_addr
) {

176 
	`emô_¨m_mov_imm8
(
R0
, 0, 
Shl0
);

177 
	`emô_¨m_mov_imm8
(
R1
, 4, 
Shl24
);

178 
	`emô_¨m_mov_imm8
(
R2
, 3, 
Shl0
);

179 
	`emô_¨m_mov_imm8
(
R3
, 0x22, 
Shl0
);

180 
	`emô_¨m_mvn_imm8
(
R4
, 0, 
Shl0
);

181 
	`emô_¨m_mov_imm8
(
R5
, 0, 
Shl0
);

182 
	`emô_¨m_mov_imm8
(
R7
, 192, 
Shl0
);

183 
	`emô_svc
();

185 
	`emô_¨m_mov_ªg
(
ARM_MEM
, 
R0
);

187 
¥ev
 = 0;

188 
mp
 = 0; 
d©a
; d©®d©a->
√xt
, mp++) {

189 i‡(!
d©a
->
v
)

191 
d
 = (
mp
 - 
¥ev
) * 4;

192 i‡(
d
 >= 4096) {

193 
	`emô_¨m_add_imm
(
R0
, 
d
);

194 
d
 = 0;

196 
	`emô_¨m_mov_imm
(
R1
, 
d©a
->
v
);

197 
	`emô_4À
(0xe5, 0xa0, 0x10 + 
d
 / 256, d % 256);

198 
¥ev
 = 
mp
;

201 
	`emô_¨m_mov_imm8
(
RODATA
, 
rod©a_addr
 % 256, 
Shl0
);

202 
rod©a_addr
 /= 256;

203 
	`emô_¨m_add_imm8
(
RODATA
, 
rod©a_addr
 % 256, 
Shl8
);

204 
rod©a_addr
 /= 256;

205 
	`emô_¨m_add_imm8
(
RODATA
, 
rod©a_addr
 % 256, 
Shl16
);

206 
	`emô_¨m_mvn_imm8
(
FFFFFF
, 0xff, 
Shl24
);

208 
	`emô_¨m_mov_imm8
(
A
, 0, 
Shl0
);

209 
	`emô_¨m_mov_imm8
(
B
, 0, 
Shl0
);

210 
	`emô_¨m_mov_imm8
(
C
, 0, 
Shl0
);

211 
	`emô_¨m_mov_imm8
(
D
, 0, 
Shl0
);

212 
	`emô_¨m_mov_imm8
(
BP
, 0, 
Shl0
);

213 
	`emô_¨m_mov_imm8
(
SP
, 0, 
Shl0
);

214 
	}
}

216 
	$¨m_emô_ö°
(
In°
* 
ö°
, * 
pc2addr
) {

217 
Reg
 
ªg
;

219 
ö°
->
›
) {

220 
MOV
:

221 i‡(
ö°
->
§c
.
ty≥
 =
REG
) {

222 
	`emô_¨m_mov_ªg
(
ö°
->
d°
.
ªg
, in°->
§c
.reg);

224 
	`emô_¨m_mov_imm
(
ö°
->
d°
.
ªg
, in°->
§c
.
imm
);

228 
ADD
:

229 i‡(
ö°
->
§c
.
ty≥
 =
REG
) {

230 
	`emô_ªg2›
(
ARM_ADD
, 
ö°
->
d°
.
ªg
, in°->
§c
.reg);

232 
	`emô_¨m_add_imm
(
ö°
->
d°
.
ªg
, in°->
§c
.
imm
);

234 
	`emô_ªg2›
(
ARM_AND
, 
ö°
->
d°
.
ªg
, 
FFFFFF
);

237 
SUB
:

238 i‡(
ö°
->
§c
.
ty≥
 =
REG
) {

239 
	`emô_ªg2›
(
ARM_SUB
, 
ö°
->
d°
.
ªg
, in°->
§c
.reg);

241 
	`emô_¨m_sub_imm
(
ö°
->
d°
.
ªg
, in°->
§c
.
imm
);

243 
	`emô_ªg2›
(
ARM_AND
, 
ö°
->
d°
.
ªg
, 
FFFFFF
);

246 
LOAD
:

247 
STORE
:

248 i‡(
ö°
->
§c
.
ty≥
 =
REG
) {

249 
ªg
 = 
ö°
->
§c
.reg;

251 
	`emô_¨m_mov_imm
(
R0
, 
ö°
->
§c
.
imm
);

252 
ªg
 = 
R0
;

254 
	`emô_¨m_mem
(
ö°
->
›
 =
LOAD
 ? 
MEM_LOAD
 : 
MEM_STORE
,

255 
ö°
->
d°
.
ªg
, 
ARM_MEM
,Ñeg);

258 
PUTC
:

259 i‡(
ö°
->
§c
.
ty≥
 =
REG
) {

260 
ªg
 = 
ö°
->
§c
.reg;

262 
ªg
 = 
R0
;

263 
	`emô_¨m_mov_imm8
(
ªg
, 
ö°
->
§c
.
imm
, 
Shl0
);

265 
	`emô_4À
(0xe5, 0x2d, 
ARMREG
[
ªg
] * 16, 0x04);

266 
	`emô_¨m_mov_imm8
(
R0
, 1, 
Shl0
);

267 
	`emô_¨m_mov_ªg
(
R1
, 
ARM_SP
);

268 
	`emô_¨m_mov_imm8
(
R2
, 1, 
Shl0
);

269 
	`emô_¨m_mov_imm8
(
R7
, 4, 
Shl0
);

270 
	`emô_svc
();

271 
	`emô_4À
(0xe4, 0x9d, 
ARMREG
[
R0
] * 16, 0x04);

274 
GETC
:

275 
	`emô_¨m_mov_imm8
(
R0
, 0, 
Shl0
);

276 
	`emô_4À
(0xe5, 0x2d, 
ARMREG
[
R0
] * 16, 0x04);

277 
	`emô_¨m_mov_ªg
(
R1
, 
ARM_SP
);

278 
	`emô_¨m_mov_imm8
(
R2
, 1, 
Shl0
);

279 
	`emô_¨m_mov_imm8
(
R7
, 3, 
Shl0
);

280 
	`emô_svc
();

281 
	`emô_4À
(0xe4, 0x9d, 
ARMREG
[
ö°
->
d°
.
ªg
] * 16, 0x04);

284 
EXIT
:

285 
	`emô_¨m_mov_imm8
(
R0
, 0, 
Shl0
);

286 
	`emô_¨m_mov_imm8
(
R7
, 1, 
Shl0
);

287 
	`emô_svc
();

290 
DUMP
:

293 
EQ
:

294 
	`emô_¨m_£tcc
(
ö°
, 0x03);

297 
NE
:

298 
	`emô_¨m_£tcc
(
ö°
, 0x13);

301 
LT
:

302 
	`emô_¨m_£tcc
(
ö°
, 0xb3);

305 
GT
:

306 
	`emô_¨m_£tcc
(
ö°
, 0xc3);

309 
LE
:

310 
	`emô_¨m_£tcc
(
ö°
, 0xd3);

313 
GE
:

314 
	`emô_¨m_£tcc
(
ö°
, 0xa3);

317 
JEQ
:

318 
	`emô_¨m_jcc
(
ö°
, 0x0a, 
pc2addr
);

321 
JNE
:

322 
	`emô_¨m_jcc
(
ö°
, 0x1a, 
pc2addr
);

325 
JLT
:

326 
	`emô_¨m_jcc
(
ö°
, 0xba, 
pc2addr
);

329 
JGT
:

330 
	`emô_¨m_jcc
(
ö°
, 0xˇ, 
pc2addr
);

333 
JLE
:

334 
	`emô_¨m_jcc
(
ö°
, 0xda, 
pc2addr
);

337 
JGE
:

338 
	`emô_¨m_jcc
(
ö°
, 0xØ, 
pc2addr
);

341 
JMP
:

342 
	`emô_¨m_jcc
(
ö°
, 0xó, 
pc2addr
);

346 
	`îr‹
("oops");

348 
	}
}

350 
	$èrgë_¨m
(
ModuÀ
* 
moduÀ
) {

351 
	`emô_ª£t
();

352 
	`öô_°©e_¨m
(
moduÀ
->
d©a
, 0);

354 
pc_˙t
 = 0;

355 
In°
* 
ö°
 = 
moduÀ
->
ãxt
; in°; in° = in°->
√xt
) {

356 
pc_˙t
++;

359 * 
pc2addr
 = 
	`ˇŒoc
(
pc_˙t
, ());

360 
¥ev_pc
 = -1;

361 
In°
* 
ö°
 = 
moduÀ
->
ãxt
; in°; in° = in°->
√xt
) {

362 i‡(
¥ev_pc
 !
ö°
->
pc
) {

363 
pc2addr
[
ö°
->
pc
] = 
	`emô_˙t
();

365 
¥ev_pc
 = 
ö°
->
pc
;

366 
	`¨m_emô_ö°
(
ö°
, 
pc2addr
);

369 
rod©a_addr
 = 
ELF_TEXT_START
 + 
	`emô_˙t
(Ë+ 
ELF_HEADER_SIZE
;

371 
	`emô_ñf_hódî
(40, 
	`emô_˙t
(Ë+ 
pc_˙t
 * 4);

373 
	`emô_ª£t
();

374 
	`emô_°¨t
();

375 
	`öô_°©e_¨m
(
moduÀ
->
d©a
, 
rod©a_addr
);

377 
In°
* 
ö°
 = 
moduÀ
->
ãxt
; in°; in° = in°->
√xt
) {

378 
	`¨m_emô_ö°
(
ö°
, 
pc2addr
);

381 
i
 = 0; i < 
pc_˙t
; i++) {

382 
	`emô_À
(
ELF_TEXT_START
 + 
pc2addr
[
i
] + 
ELF_HEADER_SIZE
);

384 
	}
}

	@target/asmjs.c

1 
	~<ú/ú.h
>

2 
	~<èrgë/utû.h
>

4 
	$öô_°©e_asmjs
(
D©a
* 
d©a
) {

5 
	`emô_löe
("var main = function() {");

6 
	`emô_löe
("var mod = function(stdlib, foreign, heap) {");

7 
	`emô_löe
("\"useásm\";");

8 
	`emô_löe
("var mem =Çew stdlib.Int32Array(heap);");

9 
	`emô_löe
("varÖutchar = foreign.putchar;");

10 
	`emô_löe
("var getchar = foreign.getchar;");

11 
	`emô_löe
("varÑunning = 1;");

13 
i
 = 0; i < 7; i++) {

14 
	`emô_löe
("v¨ %†0;", 
ªg_«mes
[
i
]);

16 
	`emô_löe
("function init() {");

17 
mp
 = 0; 
d©a
; d©®d©a->
√xt
, mp++) {

18 i‡(
d©a
->
v
) {

19 
	`emô_löe
("mem[%d] = %d;", 
mp
, 
d©a
->
v
);

22 
	`emô_löe
("}");

23 
	}
}

25 
	$asmjs_emô_func_¥ﬁogue
(
func_id
) {

26 
	`emô_löe
("");

27 
	`emô_löe
("fun˘i⁄ func%d(Ë{", 
func_id
);

28 
	`öc_ödít
();

29 
	`emô_löe
("while ((%d <= (pc | 0)) & ((pc | 0) < %d) &Ñunning) {",

30 
func_id
 * 
CHUNKED_FUNC_SIZE
, (func_id + 1) * CHUNKED_FUNC_SIZE);

31 
	`öc_ödít
();

32 
	`emô_löe
("switch (pc | 0) {");

33 
	`emô_löe
("case -1: // dummy");

34 
	`öc_ödít
();

35 
	}
}

37 c⁄° *
	$unsig√d_cmp_°r
(
In°
 *
ö°
) {

38 
›
 = 
	`n‹mÆize_c⁄d
(
ö°
->op, 0);

39 c⁄° * 
›_°r
;

40 
›
) {

41 
JEQ
:

42 
›_°r
 = "=="; ;

43 
JNE
:

44 
›_°r
 = "!="; ;

45 
JLT
:

46 
›_°r
 = "<"; ;

47 
JGT
:

48 
›_°r
 = ">"; ;

49 
JLE
:

50 
›_°r
 = "<="; ;

51 
JGE
:

52 
›_°r
 = ">="; ;

53 
JMP
:

56 
	`îr‹
("oops");

58  
	`f‹m©
("(%†>>> 0Ë%†(%†>>> 0)", 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
›_°r
, 
	`§c_°r
(inst));

59 
	}
}

61 
	$asmjs_emô_func_ïûogue
() {

62 
	`dec_ödít
();

63 
	`emô_löe
("}");

64 
	`emô_löe
("pc = (pc + 1) | 0;");

65 
	`dec_ödít
();

66 
	`emô_löe
("}");

67 
	`dec_ödít
();

68 
	`emô_löe
("}");

69 
	}
}

71 
	$asmjs_emô_pc_ch™ge
(
pc
) {

72 
	`emô_löe
("break;");

73 
	`emô_löe
("");

74 
	`dec_ödít
();

75 
	`emô_löe
("ˇ£ %d:", 
pc
);

76 
	`öc_ödít
();

77 
	}
}

79 
	$asmjs_emô_ö°
(
In°
* 
ö°
) {

80 
ö°
->
›
) {

81 
MOV
:

82 
	`emô_löe
("%†%s;", 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
	`§c_°r
(inst));

85 
ADD
:

86 
	`emô_löe
("%†(%†+ %sË& " 
UINT_MAX_STR
 ";",

87 
ªg_«mes
[
ö°
->
d°
.
ªg
],

88 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
	`§c_°r
(inst));

91 
SUB
:

92 
	`emô_löe
("%†(%†- %sË& " 
UINT_MAX_STR
 ";",

93 
ªg_«mes
[
ö°
->
d°
.
ªg
],

94 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
	`§c_°r
(inst));

97 
LOAD
:

98 
	`emô_löe
("%†mem[(%†<< 2Ë>> 2] | 0;", 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
	`§c_°r
(inst));

101 
STORE
:

102 
	`emô_löe
("mem[(%†<< 2Ë>> 2] = %s;", 
	`§c_°r
(
ö°
), 
ªg_«mes
[ö°->
d°
.
ªg
]);

105 
PUTC
:

106 
	`emô_löe
("putch¨(%†| 0);", 
	`§c_°r
(
ö°
));

109 
GETC
:

110 
	`emô_löe
("%s = getchar() | 0;",

111 
ªg_«mes
[
ö°
->
d°
.
ªg
]);

114 
EXIT
:

115 
	`emô_löe
("running = 0; break;");

118 
DUMP
:

121 
EQ
:

122 
NE
:

123 
LT
:

124 
GT
:

125 
LE
:

126 
GE
:

127 
	`emô_löe
("%s = %s;",

128 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
	`unsig√d_cmp_°r
(inst));

131 
JEQ
:

132 
JNE
:

133 
JLT
:

134 
JGT
:

135 
JLE
:

136 
JGE
:

137 
JMP
:

138 
	`emô_löe
("if (%s)Öc = (%s - 1) | 0;",

139 
	`unsig√d_cmp_°r
(
ö°
), 
	`vÆue_°r
(&ö°->
jmp
));

143 
	`îr‹
("oops");

145 
	}
}

147 
	$èrgë_asmjs
(
ModuÀ
* 
moduÀ
) {

148 
	`öô_°©e_asmjs
(
moduÀ
->
d©a
);

150 
num_funcs
 = 
	`emô_chunked_maö_lo›
(
moduÀ
->
ãxt
,

151 
asmjs_emô_func_¥ﬁogue
,

152 
asmjs_emô_func_ïûogue
,

153 
asmjs_emô_pc_ch™ge
,

154 
asmjs_emô_ö°
);

156 
	`emô_löe
("");

157 
	`emô_löe
("function main() {");

158 
	`emô_löe
("init();");

159 
	`emô_löe
("while (running) {");

160 
	`öc_ödít
();

161 
	`emô_löe
("swôch (’¯| 0Ë/ %d | 0Ë{", 
CHUNKED_FUNC_SIZE
);

162 
i
 = 0; i < 
num_funcs
; i++) {

163 
	`emô_löe
("ˇ£ %d:", 
i
);

164 
	`emô_löe
(" func%d();", 
i
);

165 
	`emô_löe
(" break;");

167 
	`emô_löe
("}");

168 
	`dec_ödít
();

169 
	`emô_löe
("}");

170 
	`emô_löe
("}");

172 
	`emô_löe
("return main;");

173 
	`emô_löe
("};");

174 
	`emô_löe
("return function(getchar,Öutchar) {");

175 
	`emô_löe
("return mod((0,eval)('this'), {getchar: getchar,Öutchar:Öutchar},Çew ArrayBuffer(1 << 26))();");

176 
	`emô_löe
("};");

177 
	`emô_löe
("}();");

180 
	`emô_löe
("if (typeofÑequire != 'undefined') {");

181 
	`emô_löe
(" var sys =Ñequire('sys');");

182 
	`emô_löe
(" var input =Çull;");

183 
	`emô_löe
(" var ip = 0;");

184 
	`emô_löe
(" var getchar = function() {");

185 
	`emô_löe
(" if (input ===Çull)");

186 
	`emô_löe
(" input =Ñequire('fs').readFileSync('/dev/stdin');");

187 
	`emô_löe
("Ñeturn input[ip++] | 0;");

188 
	`emô_löe
(" };");

189 
	`emô_löe
(" varÖutchar = function(c) {");

190 
	`emô_löe
(" sys.print(String.fromCharCode(c & 255));");

191 
	`emô_löe
(" };");

192 
	`emô_löe
(" main(getchar,Öutchar);");

193 
	`emô_löe
("}");

194 
	}
}

	@target/bef.c

1 
	~<as£π.h
>

2 
	~<°dboﬁ.h
>

3 
	~<°dlib.h
>

4 
	~<°rög.h
>

6 
	~<ú/ú.h
>

7 
	~<èrgë/utû.h
>

9 c⁄° 
uöt
 
	gBEF_MEM
 = 4782969;

12 
	mblock
[299][80];

13 
uöt
 
	mx
;

14 
uöt
 
	my
;

15 
uöt
 
	mvx
;

16 
boﬁ
 
	mwas_jmp
;

17 } 
	tBefunge
;

19 
Befunge
 
	gg_bef
;

21 
bef_emô
(
uöt
 
c
);

23 
	$bef_˛ór_block_löe
(
y
) {

24 
	`as£π
(
y
 < 297);

25 
uöt
 
i
 = 0; i < 78; i++)

26 
g_bef
.
block
[
y
][
i
] = ' ';

27 
g_bef
.
block
[
y
][79] = '\0';

28 
	}
}

30 
	$bef_block_öô
() {

31 i‡(
g_bef
.
x
) {

32 
uöt
 
i
 = 0; i <
g_bef
.
y
; i++) {

33 
	`puts
(
g_bef
.
block
[
i
]);

37 
g_bef
.
x
 = 10;

38 
g_bef
.
y
 = 0;

39 
g_bef
.
vx
 = 1;

40 
g_bef
.
was_jmp
 = 
Ál£
;

41 
	`bef_˛ór_block_löe
(0);

42 
	`bef_emô
('>');

43 
	}
}

45 
	$bef_emô
(
uöt
 
c
) {

46 
g_bef
.
block
[g_bef.
y
][g_bef.
x
] = 
c
;

47 
g_bef
.
x
 +g_bef.
vx
;

48 i‡(
g_bef
.
x
 == 10 || g_bef.x == 78) {

49 
g_bef
.
block
[g_bef.
y
][g_bef.
x
] = 'v';

50 
g_bef
.
y
++;

51 
g_bef
.
vx
 *= -1;

52 
	`bef_˛ór_block_löe
(
g_bef
.
y
);

53 
	`bef_emô
(
g_bef
.
vx
 == 1 ? '>' : '<');

55 
	}
}

57 
	$bef_emô_s
(c⁄° * 
s
) {

58 ; *
s
; s++)

59 
	`bef_emô
(*
s
);

60 
	}
}

62 
	$bef_num_ba£9
(
uöt
 
v
, *
c
) {

63 *
cba£
 = 
c
;

64 
b9
[10];

65 
b9l
 = 0;

67 
b9
[
b9l
++] = 
v
 % 9;

68 
v
 /= 9;

69 } 
v
);

70 
i
 = 0; i < 
b9l
; i++) {

71 i‡(
i
 =0 && 
b9
[
b9l
 - 1] == 1) {

72 *
c
++ = '9';

73 i‡(
b9l
 == 1)  1;

74 
i
++;

75 } i‡(
i
 != 0) {

76 *
c
++ = '9';

77 *
c
++ = '*';

79 
uöt
 
n
 = 
b9
[
b9l
 - 
i
 - 1];

80 i‡(
n
) {

81 *
c
++ = '0' + 
n
;

82 i‡(
i
 != 0) {

83 *
c
++ = '+';

87  
c
 - 
cba£
;

88 
	}
}

90 #i‚de‡
BEFNUMCACHESIZE


91 
	#BEFNUMCACHESIZE
 6562

	)

93 #i‚de‡
BEFNUMMAXFACTOR


94 
	#BEFNUMMAXFACTOR
 59049

	)

96 * 
	gbe‚umˇche
[
BEFNUMCACHESIZE
] = {

100 
bef_num_digôs
(
uöt
 
v
, *
c
);

101 
	$bef_num_Á˘‹_c‹e
(
uöt
 
v
, *
c
) {

102 
sh‹éí
 = 36;

103 
ö¸
 = 1 + (
v
&1);

104 
uöt
 
i
 = 1 + 
ö¸
; i*ò<
v
; i += incr) {

105 i‡(
v
 % 
i
 == 0) {

106 
ijs
[74];

107 
uöt
 
j
 = 
v
 / 
i
;

108 
ijÀn
 = 
	`bef_num_digôs
(
i
, 
ijs
);

109 i‡(
i
 =
j
 && i > 9) {

110 
ijs
[
ijÀn
++] = ':';

112 
ijÀn
 +
	`bef_num_digôs
(
j
, 
ijs
 + ijlen);

114 i‡(
ijÀn
 < 
sh‹éí
) {

115 
sh‹éí
 = 
ijÀn
;

116 
	`mem˝y
(
c
, 
ijs
, 
ijÀn
);

117 
c
[
ijÀn
] = '*';

118 i‡(
ijÀn
 == 2)  3;

122  
sh‹éí
 < 36 ? shortlen + 1 : 99;

123 
	}
}

125 
	$bef_num_Á˘‹
(
uöt
 
v
, *
c
) {

126 
sh‹éí
 = 99;

127 
off
 = 0; off < 19; off++) {

128 
cs
[37];

129 
Àn
 = 
	`bef_num_Á˘‹_c‹e
(
v
 + 
off
 - 9, 
cs
);

130 i‡(
Àn
 < (
off
 !9 ? 
sh‹éí
-2 : shortlen)) {

131 i‡(
off
 != 9) {

132 
cs
[
Àn
] = 
off
 < 9 ? '9' - off : '0' + (off - 9);

133 
cs
[
Àn
+1] = 
off
 < 9 ? '+' : '-';

134 
Àn
 += 2;

136 
sh‹éí
 = 
Àn
;

137 
	`mem˝y
(
c
, 
cs
, 
Àn
);

138 i‡(
Àn
 == 3)  3;

141  
sh‹éí
;

142 
	}
}

144 
	$bef_num_digôs
(
uöt
 
v
, *
c
) {

145 i‡(
v
 < 
BEFNUMCACHESIZE
) {

146 *
code
 = 
be‚umˇche
[
v
];

147 i‡(
code
 !
NULL
) {

148 
	`°r˝y
(
c
, 
code
);

149  
	`°æí
(
code
);

151 } i‡(
v
 > 
BEFNUMMAXFACTOR
) {

152  
	`bef_num_ba£9
(
v
, 
c
);

154 
f9l
 = 
	`bef_num_Á˘‹
(
v
, 
c
);

155 i‡(0 && 
f9l
 > 3) {

156 
b9
[37];

157 
b9l
 = 
	`bef_num_ba£9
(
v
, 
b9
);

158 i‡(
b9l
 <
f9l
) {

159 
	`mem˝y
(
c
, 
b9
, 
b9l
);

160 i‡(
v
 < 
BEFNUMCACHESIZE
) {

161 
be‚umˇche
[
v
] = 
	`mÆloc
(
b9l
+1);

162 
	`mem˝y
(
be‚umˇche
[
v
], 
b9
, 
b9l
);

163 
be‚umˇche
[
v
][
b9l
] = 0;

165  
b9l
;

168 i‡(
v
 < 
BEFNUMCACHESIZE
) {

169 
be‚umˇche
[
v
] = 
	`mÆloc
(
f9l
+1);

170 
	`mem˝y
(
be‚umˇche
[
v
], 
c
, 
f9l
);

171 
be‚umˇche
[
v
][
f9l
] = 0;

173  
f9l
;

174 
	}
}

176 
	$bef_emô_num
(
uöt
 
v
) {

177 
c
[37];

178 
˛í
 = 
	`bef_num_digôs
(
v
, 
c
);

179 
i
 = 0; i < 
˛í
; i++) {

180 
	`bef_emô
(
c
[
i
]);

182 
	}
}

184 
	$bef_emô_uöt_mod
() {

185 
	`bef_emô_s
("88*:*:*");

186 
	}
}

188 
	$bef_emô_vÆue
(
VÆue
* 
v
) {

189 i‡(
v
->
ty≥
 =
REG
) {

190 
	`bef_emô
('0' + 
v
->
ªg
);

191 
	`bef_emô
('0');

192 
	`bef_emô
('g');

194 
	`bef_emô_num
(
v
->
imm
);

196 
	}
}

198 
	$bef_emô_§c
(
In°
* 
ö°
) {

199 
	`bef_emô_vÆue
(&
ö°
->
§c
);

200 
	}
}

202 
	$bef_emô_d°
(
In°
* 
ö°
) {

203 
	`bef_emô_vÆue
(&
ö°
->
d°
);

204 
	}
}

206 
	$bef_emô_°‹e_ªg
(
uöt
 
r
) {

207 
	`bef_emô
('0' + 
r
);

208 
	`bef_emô
('0');

209 
	`bef_emô
('p');

210 
	}
}

212 
	$bef_make_room
() {

213 
uöt
 
r
 = 
g_bef
.
vx
 =1 ? 79 - g_bef.
x
 : g_bef.x - 10;

214 i‡(
r
 < 10) {

215 
uöt
 
y
 = 
g_bef
.y;

216 
y
 =
g_bef
.y)

217 
	`bef_emô
(' ');

219 
	}
}

221 
	$bef_emô_cmp
(
In°
* 
ö°
, 
boﬁify
) {

222 
uöt
 
›
 = 
	`n‹mÆize_c⁄d
(
ö°
->›, 
Ál£
);

223 i‡(
›
 =
JLT
 || o∞=
JGE
) {

224 
	`bef_emô_§c
(
ö°
);

225 
	`bef_emô_d°
(
ö°
);

226 
›
 = o∞=
JLT
 ? 
JGT
 : 
JLE
;

228 
	`bef_emô_d°
(
ö°
);

229 
	`bef_emô_§c
(
ö°
);

231 
›
) {

232 
JEQ
:

233 
JNE
:

234 
	`bef_emô
('-');

236 
JGT
:

237 
JLE
:

238 
	`bef_emô
('`');

241 i‡(
›
 =
JEQ
 || o∞=
JLE
) {

242 
	`bef_emô
('!');

243 } i‡(
›
 =
JNE
 && 
boﬁify
) {

244 
	`bef_emô_s
("!!");

246 
	}
}

248 
	$bef_emô_jmp
(
In°
* 
ö°
) {

249 
	`bef_emô_cmp
(
ö°
, 0);

250 
	`bef_make_room
();

251 
	`bef_emô_s
("#v_v");

253 
x
 = 
g_bef
.x;

254 
y
 = 
g_bef
.y;

255 
	`bef_˛ór_block_löe
(
y
 + 1);

256 
	`bef_˛ór_block_löe
(
y
 + 2);

258 i‡(
g_bef
.
vx
 == 1) {

259 
x
 -= 1;

261 
x
 += 3;

264 
g_bef
.
block
[
y
 + 2][
x
] = '<';

265 
g_bef
.
block
[
y
 + 2][
x
 - 1] = '$';

267 
x
 -= 2;

268 
g_bef
.
block
[
y
 + 1][
x
] = '<';

269 
g_bef
.
block
[
y
 + 1][6] = '^';

271 
g_bef
.
x
 = x - 1;

272 
g_bef
.
y
 = y + 2;

273 
g_bef
.
vx
 = -1;

274 
	}
}

276 
	$bef_emô_ö°
(
In°
* 
ö°
) {

277 
ö°
->
›
) {

278 
MOV
:

279 
	`bef_emô_§c
(
ö°
);

280 
	`bef_emô_°‹e_ªg
(
ö°
->
d°
.
ªg
);

283 
ADD
:

284 
	`bef_emô_d°
(
ö°
);

285 
	`bef_emô_§c
(
ö°
);

286 
	`bef_emô
('+');

287 
	`bef_emô_uöt_mod
();

288 
	`bef_emô
('%');

289 
	`bef_emô_°‹e_ªg
(
ö°
->
d°
.
ªg
);

292 
SUB
:

293 
	`bef_emô_d°
(
ö°
);

294 
	`bef_emô_§c
(
ö°
);

295 
	`bef_emô
('-');

296 
	`bef_emô_uöt_mod
();

297 
	`bef_emô
('+');

298 
	`bef_emô_uöt_mod
();

299 
	`bef_emô
('%');

300 
	`bef_emô_°‹e_ªg
(
ö°
->
d°
.
ªg
);

303 
LOAD
:

304 
	`bef_emô
('0');

305 
	`bef_emô_§c
(
ö°
);

306 
	`bef_emô_num
(
BEF_MEM
);

307 
	`bef_emô
('+');

308 
	`bef_emô
('g');

309 
	`bef_emô_°‹e_ªg
(
ö°
->
d°
.
ªg
);

312 
STORE
:

313 
	`bef_emô_d°
(
ö°
);

314 
	`bef_emô
('0');

315 
	`bef_emô_§c
(
ö°
);

316 
	`bef_emô_num
(
BEF_MEM
);

317 
	`bef_emô
('+');

318 
	`bef_emô
('p');

321 
PUTC
:

322 
	`bef_emô_§c
(
ö°
);

323 
	`bef_emô
(',');

326 
GETC
: {

327 
	`bef_make_room
();

328 
	`bef_emô_s
("#v~v");

329 
g_bef
.
y
++;

330 
	`bef_˛ór_block_löe
(
g_bef
.
y
);

331 
g_bef
.
x
 +g_bef.
vx
 == 1 ? -3 : 3;

332 
	`bef_emô
(
g_bef
.
vx
 == 1 ? '>' : '<');

333 
	`bef_emô
('0');

334 
	`bef_emô
(
g_bef
.
vx
 == 1 ? '>' : '<');

336 
	`bef_emô_s
(":1+!+");

337 
	`bef_emô_°‹e_ªg
(
ö°
->
d°
.
ªg
);

341 
EXIT
:

342 
	`bef_emô
('@');

345 
DUMP
:

348 
EQ
:

349 
NE
:

350 
LT
:

351 
GT
:

352 
LE
:

353 
GE
:

354 
	`bef_emô_cmp
(
ö°
, 1);

355 
	`bef_emô_°‹e_ªg
(
ö°
->
d°
.
ªg
);

358 
JEQ
:

359 
JNE
:

360 
JLT
:

361 
JGT
:

362 
JLE
:

363 
JGE
:

364 
	`bef_emô_vÆue
(&
ö°
->
jmp
);

365 
	`bef_emô_jmp
(
ö°
);

368 
JMP
:

369 
	`bef_emô_vÆue
(&
ö°
->
jmp
);

370 
g_bef
.
was_jmp
 = 
åue
;

374 
	`îr‹
("oops");

376 
	}
}

378 
	$bef_Êush_code_block
() {

379 i‡(
g_bef
.
vx
 == 1) {

380 
g_bef
.
block
[g_bef.
y
][g_bef.
x
] = 'v';

381 
g_bef
.
y
++;

382 
	`bef_˛ór_block_löe
(
g_bef
.
y
);

383 
g_bef
.
block
[g_bef.
y
][g_bef.
x
] = '<';

385 i‡(
g_bef
.
was_jmp
) {

386 
g_bef
.
block
[g_bef.
y
][6] = '^';

388 
g_bef
.
block
[g_bef.
y
][10] = 'v';

391 
	`mem˝y
(
g_bef
.
block
[0], ">:#v_$", 6);

392 
	`mem˝y
(
g_bef
.
block
[1], "v-1<> ", 6);

393 
	`bef_block_öô
();

394 
	}
}

396 
	$bef_öô_°©e
(
D©a
* 
d©a
) {

397 
	`bef_block_öô
();

398 
uöt
 
mp
 = 0; 
d©a
; d©®d©a->
√xt
, mp++) {

399 i‡(
d©a
->
v
) {

400 
	`bef_emô_num
(
d©a
->
v
);

401 
	`bef_emô
('0');

402 
	`bef_emô_num
(
mp
);

403 
	`bef_emô_num
(
BEF_MEM
);

404 
	`bef_emô
('+');

405 
	`bef_emô
('p');

407 i‡(
g_bef
.
y
 > 90) {

408 
	`bef_Êush_code_block
();

413 
uöt
 
i
 = 0; i < 6; i++) {

414 
	`bef_emô
('0');

415 
	`bef_emô_°‹e_ªg
(
i
);

418 
	`bef_emô
('0');

420 
g_bef
.
y
 == 0) {

421 
	`bef_emô
(' ');

423 
g_bef
.
block
[g_bef.
y
][0] = 'v';

424 
g_bef
.
block
[g_bef.
y
][6] = '<';

425 
	}
}

427 
	$èrgë_bef
(
ModuÀ
* 
moduÀ
) {

428 
	`bef_öô_°©e
(
moduÀ
->
d©a
);

430 
¥ev_pc
 = -1;

431 
In°
* 
ö°
 = 
moduÀ
->
ãxt
; in°; in° = in°->
√xt
) {

432 i‡(
¥ev_pc
 !
ö°
->
pc
) {

433 i‡(
¥ev_pc
 == -1)

434 
	`bef_block_öô
();

436 
	`bef_Êush_code_block
();

438 
¥ev_pc
 = 
ö°
->
pc
;

439 
	`bef_emô_ö°
(
ö°
);

442 
	`bef_Êush_code_block
();

443 
	}
}

	@target/bf.c

1 
	~<as£π.h
>

2 
	~<°dboﬁ.h
>

4 
	~<ú/ú.h
>

5 
	~<èrgë/utû.h
>

8 
	mmp
;

9 
	mlo›_±r
;

10 
	mifzîo_˙t
;

11 
	mifzîo_off
[4];

12 
	mifzîo_omp
[4];

13 } 
	tBFGí
;

15 
BFGí
 
	gbf
;

17 c⁄° 
	gBF_RUNNING
 = 0;

18 c⁄° 
	gBF_PC
 = 2;

19 c⁄° 
	gBF_NPC
 = 8;

20 c⁄° 
	gBF_A
 = 14;

21 c⁄° 
	gBF_B
 = 20;

22 c⁄° 
	gBF_C
 = 26;

23 c⁄° 
	gBF_D
 = 32;

24 c⁄° 
	gBF_BP
 = 38;

25 c⁄° 
	gBF_SP
 = 44;

26 c⁄° 
	gBF_OP
 = 50;

28 c⁄° 
	gBF_DBG
 = 58;

30 c⁄° 
	gBF_WRK
 = 60;

32 c⁄° 
	gBF_LOAD_REQ
 = 67;

33 c⁄° 
	gBF_STORE_REQ
 = 68;

35 c⁄° 
	gBF_MEM
 = 70;

36 c⁄° 
	gBF_MEM_V
 = 1;

37 c⁄° 
	gBF_MEM_A
 = 4;

38 c⁄° 
	gBF_MEM_WRK
 = 7;

39 c⁄° 
	gBF_MEM_USE
 = 13;

40 
	#BF_MEM_CTL_LEN
 16

	)

41 c⁄° 
	gBF_MEM_BLK_LEN
 = (256*3Ë+ 
BF_MEM_CTL_LEN
;

43 
	$bf_emô
(c⁄° * 
s
) {

44 
	`Âuts
(
s
, 
°dout
);

45 
	}
}

47 
	$bf_commít
(c⁄° * 
s
) {

48 
	`¥ötf
("\n# %s\n", 
s
);

49 
	}
}

51 
	$bf_ªp
(
c
, 
n
) {

52 
i
 = 0; i < 
n
; i++)

53 
	`putch¨
(
c
);

54 
	}
}

56 
	$bf_£t_±r
(
±r
) {

57 
bf
.
mp
 = 
±r
;

58 
	}
}

60 
	$bf_move_±r
(
±r
) {

61 i‡(
±r
 > 
bf
.
mp
) {

62 
	`bf_ªp
('>', 
±r
 - 
bf
.
mp
);

64 
	`bf_ªp
('<', 
bf
.
mp
 - 
±r
);

66 
bf
.
mp
 = 
±r
;

67 
	}
}

69 
	$bf_move_√g
(
‰om
, 
to
) {

70 
	`bf_move_±r
(
‰om
);

71 
	`bf_emô
("[-");

72 
	`bf_move_±r
(
to
);

73 
	`putch¨
('-');

74 
	`bf_move_±r
(
‰om
);

75 
	`bf_emô
("]");

76 
	}
}

78 
	$bf_move
(
‰om
, 
to
) {

79 
	`bf_move_±r
(
‰om
);

80 
	`bf_emô
("[-");

81 
	`bf_move_±r
(
to
);

82 
	`putch¨
('+');

83 
	`bf_move_±r
(
‰om
);

84 
	`bf_emô
("]");

85 
	}
}

87 
	$bf_move2
(
‰om
, 
to
, 
to2
) {

88 
	`bf_move_±r
(
‰om
);

89 
	`bf_emô
("[-");

90 
	`bf_move_±r
(
to
);

91 
	`putch¨
('+');

92 
	`bf_move_±r
(
to2
);

93 
	`putch¨
('+');

94 
	`bf_move_±r
(
‰om
);

95 
	`bf_emô
("]");

96 
	}
}

98 
	$bf_move_w‹d
(
‰om
, 
to
) {

99 
	`bf_move
(
‰om
-1, 
to
-1);

100 
	`bf_move
(
‰om
, 
to
);

101 
	`bf_move
(
‰om
+1, 
to
+1);

102 
	}
}

104 
	$bf_move_w‹d2
(
‰om
, 
to
, 
to2
) {

105 
	`bf_move2
(
‰om
-1, 
to
-1, 
to2
-1);

106 
	`bf_move2
(
‰om
, 
to
, 
to2
);

107 
	`bf_move2
(
‰om
+1, 
to
+1, 
to2
+1);

108 
	}
}

111 
	$bf_c›y
(
‰om
, 
to
, 
wrk
) {

112 
	`bf_move2
(
‰om
, 
to
, 
wrk
);

113 
	`bf_move
(
wrk
, 
‰om
);

114 
	}
}

117 
	$bf_c›y_w‹d
(
‰om
, 
to
, 
wrk
) {

118 
	`bf_move_w‹d2
(
‰om
, 
to
, 
wrk
);

119 
	`bf_move_w‹d
(
wrk
, 
‰om
);

120 
	}
}

122 
	$bf_add
(
±r
, 
v
) {

123 
	`bf_move_±r
(
±r
);

124 #ifde‡
__eú__


125 
v
 %= 256;

127 
v
 &= 255;

129 i‡(
v
 > 127) {

130 
	`bf_ªp
('-', 256 - 
v
);

132 
	`bf_ªp
('+', 
v
);

134 
	}
}

136 
	$bf_add_w‹d
(
±r
, 
v
) {

137 
	`bf_add
(
±r
 - 1, 
v
 / 65536);

138 
	`bf_add
(
±r
, 
v
 / 256 % 256);

139 
	`bf_add
(
±r
 + 1, 
v
 % 256);

140 
	}
}

142 
	$bf_˛ór
(
±r
) {

143 
	`bf_move_±r
(
±r
);

144 
	`bf_emô
("[-]");

145 
	}
}

147 
	$bf_˛ór_w‹d
(
±r
) {

148 
	`bf_˛ór
(
±r
-1);

149 
	`bf_˛ór
(
±r
);

150 
	`bf_˛ór
(
±r
+1);

151 
	}
}

153 
	$bf_ªgpos
(
r
) {

154 
r
) {

155 
A
:  
BF_A
;

156 
B
:  
BF_B
;

157 
C
:  
BF_C
;

158 
D
:  
BF_D
;

159 
BP
:  
BF_BP
;

160 
SP
:  
BF_SP
;

162 
	`îr‹
("unknow¿ªg: %d", 
r
);

164 
	}
}

166 
	$bf_dbg
(c⁄° * 
s
) {

167 ; *
s
; s++) {

168 
	`bf_˛ór
(
BF_DBG
);

169 
	`bf_add
(
BF_DBG
, *
s
);

170 
	`bf_emô
(".");

172 
	`bf_˛ór
(
BF_DBG
);

173 
	}
}

175 
	$bf_öãΩªãr_check
() {

176 
	`bf_commít
("interpreter check");

179 
	`emô_löe
(">[-]<[-]++++++++[>++++++++<-]>[<++++>-]<[>>");

182 
	`emô_löe
(">++++[<++++>-]<+[>++++++>+++++++>++>+++>+++++<<<<<-]>>>>>--.<<<-");

183 
	`emô_löe
("-------.+++..+++++++.>--.<-----.<++.+.>-.>.<---.++.---.<--.>+++.");

184 
	`emô_löe
("<------.>-----.>.<+.<++++..-.>+++++.>.<<---.>-----.>.>+++++.<<<+");

185 
	`emô_löe
(".>-----.+++++++++++.>.<<+++++++.+++++.>.<---------.>--.--.++.<.>");

186 
	`emô_löe
("++.<.>--.<<++++++++++.");

189 
	`emô_löe
("<<[-]]");

192 
	`emô_löe
(">[-]<[-]++++++++[>++++++++<-]>[<++++>-]+<[>-<[-]]>[-<");

193 
	}
}

195 
	$bf_öô_°©e
(
D©a
* 
d©a
) {

196 
	`bf_öãΩªãr_check
();

198 
	`bf_commít
("init data");

199 
mp
 = 0; 
d©a
; d©®d©a->
√xt
, mp++) {

200 i‡(
d©a
->
v
) {

201 
hi
 = 
mp
 / 256;

202 
lo
 = 
mp
 % 256;

203 
±r
 = 
BF_MEM
 + 
BF_MEM_BLK_LEN
 * 
hi
 + 
BF_MEM_CTL_LEN
 + 
lo
 * 3;

204 
	`bf_add_w‹d
(
±r
, 
d©a
->
v
);

207 
	}
}

209 
	$bf_lo›_begö
(
±r
, 
c
) {

210 
	`bf_move_±r
(
±r
);

211 
	`bf_emô
("[");

212 i‡(
c
)

213 
	`putch¨
(
c
);

214 
bf
.
lo›_±r
 = 
±r
;

215 
	}
}

217 
	$bf_lo›_íd
() {

218 
	`bf_move_±r
(
bf
.
lo›_±r
);

219 
	`bf_emô
("]");

220 
	}
}

222 
	$bf_ifzîo_begö_im∂
(
off
, 
boﬁ
 
ª£t
, c⁄° * 
i‚z
) {

223 
bf
.
ifzîo_omp
[bf.
ifzîo_˙t
] = bf.
mp
;

224 
bf
.
mp
 = 0;

226 
	`bf_add
(
off
 * 2, -1);

227 
	`bf_move_±r
(0);

228 
	`bf_emô
("[");

229 i‡(
ª£t
)

230 
	`bf_emô
("[-]");

231 
	`bf_emô
(
i‚z
);

232 
	`bf_move_±r
(
off
);

233 
	`bf_emô
("]");

234 
	`bf_move_±r
(
off
 * 2);

235 
	`bf_emô
("+[-");

237 
bf
.
mp
 = bf.
ifzîo_omp
[bf.
ifzîo_˙t
] + 
off
;

238 
bf
.
ifzîo_off
[bf.
ifzîo_˙t
] = 
off
;

239 
bf
.
ifzîo_˙t
++;

240 
	}
}

242 
	$bf_ifzîo_begö
(
off
) {

243 
	`bf_ifzîo_begö_im∂
(
off
, 
Ál£
, "");

244 
	}
}

246 
	$bf_ifzîo_íd
() {

247 
bf
.
ifzîo_˙t
--;

248 
off
 = 
bf
.
ifzîo_off
[bf.
ifzîo_˙t
];

249 
omp
 = 
bf
.
ifzîo_omp
[bf.
ifzîo_˙t
];

251 
	`bf_move_±r
(
omp
 + 
off
);

253 
	`bf_£t_±r
(0);

254 
	`bf_move_±r
(
off
);

255 
	`bf_emô
("+]");

257 
bf
.
mp
 = 
omp
 + 
off
 * 2;

258 
	}
}

260 
	$bf_emô_addsub_¥ï
(
In°
* 
ö°
) {

261 
d°
 = 
	`bf_ªgpos
(
ö°
->d°.
ªg
);

262 i‡(
ö°
->
§c
.
ty≥
 =
REG
) {

263 
§c
 = 
	`bf_ªgpos
(
ö°
->§c.
ªg
);

264 
	`bf_c›y_w‹d
(
§c
, 
BF_WRK
, BF_WRK+3);

266 
	`bf_add_w‹d
(
BF_WRK
, 
ö°
->
§c
.
imm
);

268  
d°
;

269 
	}
}

271 
	$bf_emô_add
(
In°
* 
ö°
) {

272 
d°
 = 
	`bf_emô_addsub_¥ï
(
ö°
);

275 
	`bf_lo›_begö
(
BF_WRK
+1, '-'); {

277 
	`bf_move_±r
(
d°
+1);

278 
	`bf_emô
("+");

280 
	`bf_ifzîo_begö
(1); {

281 
	`bf_add
(
d°
, 1);

282 
	`bf_move_±r
(
d°
);

283 
	`bf_ifzîo_begö
(2); {

284 
	`bf_add
(
d°
-1, 1);

285 }; 
	`bf_ifzîo_íd
();

286 }; 
	`bf_ifzîo_íd
();

287 }; 
	`bf_lo›_íd
();

289 
	`bf_lo›_begö
(
BF_WRK
, '-'); {

291 
	`bf_move_±r
(
d°
);

292 
	`bf_emô
("+");

294 
	`bf_ifzîo_begö
(2); {

295 
	`bf_add
(
d°
-1, 1);

296 }; 
	`bf_ifzîo_íd
();

297 }; 
	`bf_lo›_íd
();

298 
	`bf_move
(
BF_WRK
-1, 
d°
-1);

299 
	}
}

301 
	$bf_emô_sub
(
In°
* 
ö°
) {

302 
d°
 = 
	`bf_emô_addsub_¥ï
(
ö°
);

305 
	`bf_lo›_begö
(
BF_WRK
+1, '-'); {

306 
	`bf_move_±r
(
d°
+1);

308 
	`bf_ifzîo_begö
(1); {

309 
	`bf_move_±r
(
d°
);

310 
	`bf_ifzîo_begö
(2); {

311 
	`bf_add
(
d°
-1, -1);

312 }; 
	`bf_ifzîo_íd
();

313 
	`bf_add
(
d°
, -1);

314 }; 
	`bf_ifzîo_íd
();

316 
	`bf_add
(
d°
+1, -1);

317 }; 
	`bf_lo›_íd
();

319 
	`bf_lo›_begö
(
BF_WRK
, '-'); {

320 
	`bf_move_±r
(
d°
);

322 
	`bf_ifzîo_begö
(2); {

323 
	`bf_add
(
d°
-1, -1);

324 }; 
	`bf_ifzîo_íd
();

326 
	`bf_add
(
d°
, -1);

327 }; 
	`bf_lo›_íd
();

328 
	`bf_move_√g
(
BF_WRK
-1, 
d°
-1);

329 
	}
}

331 
	$bf_emô_cmp
(
In°
* 
ö°
) {

332 i‡(
ö°
->
›
 =
JMP
) {

333 
	`bf_add
(
BF_WRK
, 1);

336 
›
 = 
	`n‹mÆize_c⁄d
(
ö°
->›, 
Ál£
);

338 
lh•os
 = 
BF_WRK
;

339 
rh•os
 = 
BF_WRK
+3;

340 i‡(
›
 =
JGT
 || o∞=
JLE
) {

341 
lh•os
 = 
BF_WRK
+3;

342 
rh•os
 = 
BF_WRK
;

345 
	`bf_c›y_w‹d
(
	`bf_ªgpos
(
ö°
->
d°
.
ªg
), 
lh•os
, 
BF_WRK
+6);

346 i‡(
ö°
->
§c
.
ty≥
 =
REG
) {

347 
	`bf_c›y_w‹d
(
	`bf_ªgpos
(
ö°
->
§c
.
ªg
), 
rh•os
, 
BF_WRK
+6);

349 
	`bf_add_w‹d
(
rh•os
, 
ö°
->
§c
.
imm
);

352 i‡(
›
 =
JEQ
 || o∞=
JNE
) {

353 
	`bf_move_√g
(
BF_WRK
-1, BF_WRK+3-1);

354 
	`bf_move_√g
(
BF_WRK
, BF_WRK+3);

355 
	`bf_move_√g
(
BF_WRK
+1, BF_WRK+3+1);

357 i‡(
›
 =
JEQ
) {

358 
	`bf_add
(
BF_WRK
, 1);

359 
i
 = 2; i < 5; i++) {

360 
	`bf_lo›_begö
(
BF_WRK
+
i
, 0); {

361 
	`bf_˛ór
(
BF_WRK
+
i
);

362 
	`bf_˛ór
(
BF_WRK
);

363 }; 
	`bf_lo›_íd
();

366 
i
 = 2; i < 5; i++) {

367 
	`bf_lo›_begö
(
BF_WRK
+
i
, 0); {

368 
	`bf_˛ór
(
BF_WRK
+
i
);

369 
	`bf_add
(
BF_WRK
, 1);

370 }; 
	`bf_lo›_íd
();

376 
	`bf_lo›_begö
(
BF_WRK
-1, '-'); {

377 
	`bf_move_±r
(
BF_WRK
+2);

380 
	`bf_ifzîo_begö
(5); {

381 
	`bf_˛ór
(
BF_WRK
-1);

382 
	`bf_˛ór
(
BF_WRK
);

383 
	`bf_˛ór
(
BF_WRK
+1);

384 
	`bf_˛ór
(
BF_WRK
+3);

385 
	`bf_˛ór
(
BF_WRK
+4);

386 
	`bf_add
(
BF_WRK
+2, 1);

387 }; 
	`bf_ifzîo_íd
();

388 
	`bf_add
(
BF_WRK
+2, -1);

389 }; 
	`bf_lo›_íd
();

391 
	`bf_move_±r
(
BF_WRK
+2);

392 
	`bf_ifzîo_begö_im∂
(4, 
åue
, "<<[-]>>"); {

394 
	`bf_lo›_begö
(
BF_WRK
, '-'); {

395 
	`bf_move_±r
(
BF_WRK
+3);

398 
	`bf_ifzîo_begö
(3); {

399 
	`bf_˛ór
(
BF_WRK
+4);

400 
	`bf_add
(
BF_WRK
+3, 1);

401 
	`bf_˛ór
(
BF_WRK
);

402 }; 
	`bf_ifzîo_íd
();

403 
	`bf_add
(
BF_WRK
+3, -1);

404 }; 
	`bf_lo›_íd
();

407 
	`bf_move_±r
(
BF_WRK
+3);

408 
	`bf_ifzîo_begö_im∂
(3, 
åue
, ""); {

410 
	`bf_lo›_begö
(
BF_WRK
+1, '-'); {

411 
	`bf_move_±r
(
BF_WRK
+4);

412 
	`bf_ifzîo_begö
(1); {

413 
	`bf_add
(
BF_WRK
, 1);

414 }; 
	`bf_ifzîo_íd
();

415 
	`bf_add
(
BF_WRK
+4, -1);

416 }; 
	`bf_lo›_íd
();

419 
	`bf_move_±r
(
BF_WRK
+4);

420 
	`bf_ifzîo_begö_im∂
(1, 
åue
, ""); {

421 
	`bf_add
(
BF_WRK
, 1);

422 }; 
	`bf_ifzîo_íd
();

423 }; 
	`bf_ifzîo_íd
();

424 }; 
	`bf_ifzîo_íd
();

426 
	`bf_˛ór
(
BF_WRK
+1);

427 
	`bf_˛ór_w‹d
(
BF_WRK
+3);

428 
	`bf_˛ór_w‹d
(
BF_WRK
+6);

431 i‡(
›
 =
JLT
 || o∞=
JGT
) {

432 
	`bf_move_±r
(
BF_WRK
);

433 
	`bf_ifzîo_begö_im∂
(1, 
åue
, ""); {

434 
	`bf_add
(
BF_WRK
, 1);

435 }; 
	`bf_ifzîo_íd
();

437 
	}
}

439 
	$bf_emô_›
(
In°
* 
ö°
) {

440 
ö°
->
›
) {

441 
MOV
: {

442 
d°
 = 
	`bf_ªgpos
(
ö°
->d°.
ªg
);

443 i‡(
ö°
->
§c
.
ty≥
 =
REG
) {

444 
§c
 = 
	`bf_ªgpos
(
ö°
->§c.
ªg
);

445 i‡(
§c
 !
d°
) {

446 
	`bf_˛ór_w‹d
(
d°
);

447 
	`bf_c›y_w‹d
(
§c
, 
d°
, 
BF_WRK
);

450 
	`bf_˛ór_w‹d
(
d°
);

451 
	`bf_add_w‹d
(
d°
, 
ö°
->
§c
.
imm
);

456 
ADD
:

457 
	`bf_emô_add
(
ö°
);

460 
SUB
:

461 
	`bf_emô_sub
(
ö°
);

464 
LOAD
:

465 
	`bf_add
(
BF_LOAD_REQ
, 1);

466 i‡(
ö°
->
d°
.
ªg
 !
A
)

467 
	`îr‹
("only \"loadá, X\" is supported");

469 i‡(
ö°
->
§c
.
ty≥
 =
REG
) {

470 
	`bf_c›y_w‹d
(
	`bf_ªgpos
(
ö°
->
§c
.
ªg
), 
BF_MEM
 + 
BF_MEM_A
, 
BF_WRK
);

472 
	`bf_add_w‹d
(
BF_MEM
 + 
BF_MEM_A
, 
ö°
->
§c
.
imm
);

476 
STORE
:

477 
	`bf_add
(
BF_STORE_REQ
, 1);

478 
	`bf_c›y_w‹d
(
	`bf_ªgpos
(
ö°
->
d°
.
ªg
), 
BF_MEM
 + 
BF_MEM_V
, 
BF_WRK
);

479 i‡(
ö°
->
§c
.
ty≥
 =
REG
) {

480 
	`bf_c›y_w‹d
(
	`bf_ªgpos
(
ö°
->
§c
.
ªg
), 
BF_MEM
 + 
BF_MEM_A
, 
BF_WRK
);

482 
	`bf_add_w‹d
(
BF_MEM
 + 
BF_MEM_A
, 
ö°
->
§c
.
imm
);

486 
EQ
:

487 
NE
:

488 
LT
:

489 
GT
:

490 
LE
:

491 
GE
: {

492 
	`bf_emô_cmp
(
ö°
);

493 
d°
 = 
	`bf_ªgpos
(
ö°
->d°.
ªg
);

494 
	`bf_˛ór_w‹d
(
d°
);

495 
	`bf_move_w‹d
(
BF_WRK
, 
d°
+1);

499 
PUTC
:

500 i‡(
ö°
->
§c
.
ty≥
 =
REG
) {

501 
§c
 = 
	`bf_ªgpos
(
ö°
->§c.
ªg
);

502 
	`bf_move_±r
(
§c
 + 1);

503 
	`bf_emô
(".");

505 
	`bf_add
(
BF_WRK
, 
ö°
->
§c
.
imm
 % 256);

506 
	`bf_emô
(".");

507 
	`bf_˛ór
(
BF_WRK
);

511 
GETC
: {

512 
§c
 = 
	`bf_ªgpos
(
ö°
->
d°
.
ªg
);

513 
	`bf_˛ór_w‹d
(
§c
);

514 
	`bf_move_±r
(
§c
+1);

515 
	`bf_emô
(",");

516 
	`bf_emô
("+");

517 
	`bf_ifzîo_begö
(1); {

518 
	`bf_add
(
§c
 + 1, 1);

519 }; 
	`bf_ifzîo_íd
();

520 
	`bf_add
(
§c
 + 1, -1);

524 
EXIT
:

525 
	`bf_˛ór
(
BF_RUNNING
);

528 
DUMP
:

531 
JEQ
:

532 
JNE
:

533 
JLT
:

534 
JGT
:

535 
JLE
:

536 
JGE
:

537 
JMP
: {

538 
	`bf_emô_cmp
(
ö°
);

539 
	`bf_move_±r
(
BF_WRK
);

540 
	`bf_emô
("[[-]");

541 
	`bf_˛ór_w‹d
(
BF_NPC
);

542 i‡(
ö°
->
jmp
.
ty≥
 =
REG
) {

543 
	`bf_c›y_w‹d
(
	`bf_ªgpos
(
ö°
->
jmp
.
ªg
), 
BF_NPC
, 
BF_WRK
);

545 
	`bf_add_w‹d
(
BF_NPC
, 
ö°
->
jmp
.
imm
);

547 
	`bf_move_±r
(
BF_WRK
);

548 
	`bf_emô
("]");

553 
	`îr‹
("oops");

555 
	}
}

557 
	$bf_emô_code
(
In°
* 
ö°
) {

558 
	`bf_commít
("fetchÖc");

559 
	`bf_move_w‹d2
(
BF_PC
, 
BF_NPC
, 
BF_OP
);

561 
	`bf_commít
("incrementÖc");

562 
	`bf_move_±r
(
BF_NPC
+3);

563 
	`bf_emô
("-");

564 
	`bf_move_±r
(
BF_NPC
+1);

565 
	`bf_emô
("+");

566 
	`bf_emô
("[>]>+");

568 
	`bf_emô
("[-<<+>>>+]");

569 
	`bf_£t_±r
(
BF_NPC
+3);

571 
pc_h
 = 0;Öc_h < 256;Öc_h++) {

572 
	`¥ötf
("\n#Öc_h=%d\n", 
pc_h
);

574 
	`bf_add
(
BF_OP
-2, -1);

575 
	`bf_move_±r
(
BF_OP
);

576 
	`bf_emô
("[<]<+[-<+");

577 
	`bf_£t_±r
(
BF_OP
-2);

579 
pc_l
 = 0;Öc_l < 256;Öc_l++) {

580 
pc
 = 
pc_h
 * 256 + 
pc_l
;

581 i‡(!
ö°
)

584 
	`bf_add
(
BF_OP
+3, -1);

585 
	`bf_move_±r
(
BF_OP
+1);

586 
	`bf_emô
("[>]>+[->+");

587 
	`bf_£t_±r
(
BF_OP
+3);

589 
	`¥ötf
("\n#Öc_l=%d\n", 
pc_l
);

591 ; 
ö°
 && in°->
pc
 =pc; in° = in°->
√xt
) {

592 
	`¥ötf
("\n# ");

593 
	`dump_ö°_Â
(
ö°
, 
°dout
);

596 
	`bf_emô
("@");

597 
	`bf_dbg
(
	`f‹m©
("%dÖc=%d\n", 
ö°
->
›
, 
pc
));

600 
	`bf_emô_›
(
ö°
);

603 
	`bf_move_±r
(
BF_OP
+3);

604 
	`bf_emô
("]");

605 
	`bf_add
(
BF_OP
+1, -1);

608 
	`bf_move_±r
(
BF_OP
-2);

609 
	`bf_emô
("]");

610 
	`bf_add
(
BF_OP
, -1);

613 
	`bf_˛ór_w‹d
(
BF_OP
);

614 
	}
}

617 
	$bf_emô_mem_lﬂd
() {

618 
	`bf_commít
("memory (load)");

620 
	`bf_move_±r
(
BF_LOAD_REQ
);

621 
	`bf_emô
("[-");

624 
	`bf_move_±r
(
BF_MEM
);

625 
	`bf_£t_±r
(0);

629 
	`bf_lo›_begö
(
BF_MEM_A
-1, '-'); {

631 
	`bf_move_w‹d
(
BF_MEM_A
, BF_MEM_A + 
BF_MEM_BLK_LEN
*256);

633 
	`bf_move_±r
(
BF_MEM_A
 + 
BF_MEM_BLK_LEN
*256);

636 
	`bf_£t_±r
(
BF_MEM_A
);

639 
	`bf_add
(
BF_MEM_USE
+1, 1);

640 }; 
	`bf_lo›_íd
();

642 
	`bf_lo›_begö
(
BF_MEM_A
, '-'); {

643 
	`bf_move_w‹d
(
BF_MEM_A
, BF_MEM_A + 
BF_MEM_BLK_LEN
);

644 
	`bf_move_±r
(
BF_MEM_A
 + 
BF_MEM_BLK_LEN
);

645 
	`bf_£t_±r
(
BF_MEM_A
);

646 
	`bf_add
(
BF_MEM_USE
, 1);

647 }; 
	`bf_lo›_íd
();

649 
Æ
 = 0;ál < 256;ál++) {

650 
	`bf_move_±r
(
BF_MEM_A
 + 1);

651 
	`bf_ifzîo_begö
(1); {

652 
	`bf_c›y_w‹d
(
BF_MEM_CTL_LEN
 + 
Æ
 * 3, 
BF_MEM_V
, 
BF_MEM_WRK
 + 2);

653 }; 
	`bf_ifzîo_íd
();

654 
	`bf_add
(
BF_MEM_A
 + 1, -1);

656 
	`bf_˛ór
(
BF_MEM_A
 + 1);

658 
	`bf_lo›_begö
(
BF_MEM_USE
, '-'); {

659 
	`bf_move_±r
(
BF_MEM_V
);

660 
	`bf_£t_±r
(
BF_MEM_V
 + 
BF_MEM_BLK_LEN
);

661 
	`bf_move_w‹d
(
BF_MEM_V
 + 
BF_MEM_BLK_LEN
, BF_MEM_V);

662 }; 
	`bf_lo›_íd
();

664 
	`bf_lo›_begö
(
BF_MEM_USE
+1, '-'); {

665 
	`bf_move_±r
(
BF_MEM_V
);

666 
	`bf_£t_±r
(
BF_MEM_V
 + 
BF_MEM_BLK_LEN
 * 256);

667 
	`bf_move_w‹d
(
BF_MEM_V
 + 
BF_MEM_BLK_LEN
 * 256, BF_MEM_V);

668 }; 
	`bf_lo›_íd
();

670 
	`bf_move_±r
(0);

671 
	`bf_£t_±r
(
BF_MEM
);

672 
	`bf_˛ór_w‹d
(
BF_A
);

673 
	`bf_move_w‹d
(
BF_MEM
 + 
BF_MEM_V
, 
BF_A
);

675 
	`bf_move_±r
(
BF_LOAD_REQ
);

676 
	`bf_emô
("]");

677 
	`bf_commít
("memory (load)/end");

678 
	}
}

680 
	$bf_emô_mem_°‹e
() {

681 
	`bf_commít
("memory (store)");

683 
	`bf_move_±r
(
BF_STORE_REQ
);

684 
	`bf_emô
("[-");

686 
	`bf_move_±r
(
BF_MEM
);

687 
	`bf_£t_±r
(0);

689 
	`bf_lo›_begö
(
BF_MEM_A
-1, '-'); {

690 
	`bf_move_w‹d
(
BF_MEM_V
, BF_MEM_V + 
BF_MEM_BLK_LEN
*256);

691 
	`bf_move_w‹d
(
BF_MEM_A
, BF_MEM_A + 
BF_MEM_BLK_LEN
*256);

692 
	`bf_move_±r
(
BF_MEM_A
 + 
BF_MEM_BLK_LEN
*256);

693 
	`bf_£t_±r
(
BF_MEM_A
);

694 
	`bf_add
(
BF_MEM_USE
+1, 1);

695 }; 
	`bf_lo›_íd
();

697 
	`bf_lo›_begö
(
BF_MEM_A
, '-'); {

698 
	`bf_move_w‹d
(
BF_MEM_V
, BF_MEM_V + 
BF_MEM_BLK_LEN
);

699 
	`bf_move_w‹d
(
BF_MEM_A
, BF_MEM_A + 
BF_MEM_BLK_LEN
);

700 
	`bf_move_±r
(
BF_MEM_A
 + 
BF_MEM_BLK_LEN
);

701 
	`bf_£t_±r
(
BF_MEM_A
);

702 
	`bf_add
(
BF_MEM_USE
, 1);

703 }; 
	`bf_lo›_íd
();

706 
Æ
 = 0;ál < 256;ál++) {

707 
	`bf_move_±r
(
BF_MEM_A
 + 1);

708 
	`bf_ifzîo_begö
(1); {

709 
	`bf_˛ór_w‹d
(
BF_MEM_CTL_LEN
 + 
Æ
 * 3);

710 
	`bf_move_w‹d
(
BF_MEM_V
, 
BF_MEM_CTL_LEN
 + 
Æ
 * 3);

711 }; 
	`bf_ifzîo_íd
();

712 
	`bf_add
(
BF_MEM_A
 + 1, -1);

714 
	`bf_˛ór
(
BF_MEM_A
 + 1);

716 
	`bf_move_±r
(
BF_MEM_USE
);

717 
	`bf_emô
("[-");

718 
i
 = 0; i < 
BF_MEM_BLK_LEN
; i++)

719 
	`putch¨
('<');

720 
	`bf_emô
("]");

722 
	`bf_move_±r
(
BF_MEM_USE
+1);

723 
	`bf_emô
("[-");

724 
i
 = 0; i < 
BF_MEM_BLK_LEN
*256; i++)

725 
	`putch¨
('<');

726 
	`bf_emô
("]");

728 
	`bf_move_±r
(0);

729 
	`bf_£t_±r
(
BF_MEM
);

731 
	`bf_move_±r
(
BF_STORE_REQ
);

732 
	`bf_emô
("]");

733 
	}
}

735 
	$èrgë_bf
(
ModuÀ
* 
moduÀ
) {

736 
	`bf_öô_°©e
(
moduÀ
->
d©a
);

738 
	`bf_commít
("prologue");

739 
	`bf_add
(
BF_RUNNING
, 1);

740 
	`emô_löe
("[");

742 
	`bf_emô_code
(
moduÀ
->
ãxt
);

743 
	`bf_emô_mem_lﬂd
();

744 
	`bf_emô_mem_°‹e
();

745 
	`bf_move_w‹d
(
BF_NPC
, 
BF_PC
);

747 
	`bf_commít
("epilogue");

748 
	`bf_move_±r
(
BF_RUNNING
);

749 
	`emô_löe
("]");

752 
	`emô_löe
("]");

754 
	`emô_löe
("[...THE END...]");

755 
	}
}

	@target/c.c

1 
	~<ú/ú.h
>

2 
	~<èrgë/utû.h
>

4 
	$c_öô_°©e
() {

5 
	`emô_löe
("#include <stdio.h>");

6 
	`emô_löe
("#include <stdlib.h>");

8 
i
 = 0; i < 7; i++) {

9 
	`emô_löe
("unsig√d i¡ %s;", 
ªg_«mes
[
i
]);

11 
	`emô_löe
("unsigned int mem[1<<24];");

12 
	}
}

14 
	$c_emô_func_¥ﬁogue
(
func_id
) {

15 
	`emô_löe
("");

16 
	`emô_löe
("void func%d(Ë{", 
func_id
);

17 
	`öc_ödít
();

18 
	`emô_löe
("while (%d <=Öc &&Öc < %d) {",

19 
func_id
 * 
CHUNKED_FUNC_SIZE
, (func_id + 1) * CHUNKED_FUNC_SIZE);

20 
	`öc_ödít
();

21 
	`emô_löe
("switch (pc) {");

22 
	`emô_löe
("case -1: /* dummy */");

23 
	`öc_ödít
();

24 
	}
}

26 
	$c_emô_func_ïûogue
() {

27 
	`dec_ödít
();

28 
	`emô_löe
("}");

29 
	`emô_löe
("pc++;");

30 
	`dec_ödít
();

31 
	`emô_löe
("}");

32 
	`dec_ödít
();

33 
	`emô_löe
("}");

34 
	}
}

36 
	$c_emô_pc_ch™ge
(
pc
) {

37 
	`emô_löe
("break;");

38 
	`emô_löe
("");

39 
	`dec_ödít
();

40 
	`emô_löe
("ˇ£ %d:", 
pc
);

41 
	`öc_ödít
();

42 
	}
}

44 
	$c_emô_ö°
(
In°
* 
ö°
) {

45 
ö°
->
›
) {

46 
MOV
:

47 
	`emô_löe
("%†%s;", 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
	`§c_°r
(inst));

50 
ADD
:

51 
	`emô_löe
("%†(%†+ %sË& " 
UINT_MAX_STR
 ";",

52 
ªg_«mes
[
ö°
->
d°
.
ªg
],

53 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
	`§c_°r
(inst));

56 
SUB
:

57 
	`emô_löe
("%†(%†- %sË& " 
UINT_MAX_STR
 ";",

58 
ªg_«mes
[
ö°
->
d°
.
ªg
],

59 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
	`§c_°r
(inst));

62 
LOAD
:

63 
	`emô_löe
("%†mem[%s];", 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
	`§c_°r
(inst));

66 
STORE
:

67 
	`emô_löe
("mem[%s] = %s;", 
	`§c_°r
(
ö°
), 
ªg_«mes
[ö°->
d°
.
ªg
]);

70 
PUTC
:

71 
	`emô_löe
("putch¨(%s);", 
	`§c_°r
(
ö°
));

74 
GETC
:

75 
	`emô_löe
("{ int _ = getchar(); %s = _ != EOF ? _ : 0; }",

76 
ªg_«mes
[
ö°
->
d°
.
ªg
]);

79 
EXIT
:

80 
	`emô_löe
("exit(0);");

83 
DUMP
:

86 
EQ
:

87 
NE
:

88 
LT
:

89 
GT
:

90 
LE
:

91 
GE
:

92 
	`emô_löe
("%s = %s;",

93 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
	`cmp_°r
(inst, "1"));

96 
JEQ
:

97 
JNE
:

98 
JLT
:

99 
JGT
:

100 
JLE
:

101 
JGE
:

102 
JMP
:

103 
	`emô_löe
("if (%s)Öc = %s - 1;",

104 
	`cmp_°r
(
ö°
, "1"), 
	`vÆue_°r
(&ö°->
jmp
));

108 
	`îr‹
("oops");

110 
	}
}

112 
	$èrgë_c
(
ModuÀ
* 
moduÀ
) {

113 
	`c_öô_°©e
();

115 
num_funcs
 = 
	`emô_chunked_maö_lo›
(
moduÀ
->
ãxt
,

116 
c_emô_func_¥ﬁogue
,

117 
c_emô_func_ïûogue
,

118 
c_emô_pc_ch™ge
,

119 
c_emô_ö°
);

121 
	`emô_löe
("int main() {");

122 
	`öc_ödít
();

124 
D©a
* 
d©a
 = 
moduÀ
->data;

125 
mp
 = 0; 
d©a
; d©®d©a->
√xt
, mp++) {

126 i‡(
d©a
->
v
) {

127 
	`emô_löe
("mem[%d] = %d;", 
mp
, 
d©a
->
v
);

131 
	`emô_löe
("");

132 
	`emô_löe
("while (1) {");

133 
	`öc_ödít
();

134 
	`emô_löe
("swôch (p¯/ %d | 0Ë{", 
CHUNKED_FUNC_SIZE
);

135 
i
 = 0; i < 
num_funcs
; i++) {

136 
	`emô_löe
("ˇ£ %d:", 
i
);

137 
	`emô_löe
(" func%d();", 
i
);

138 
	`emô_löe
(" break;");

140 
	`emô_löe
("}");

141 
	`dec_ödít
();

142 
	`emô_löe
("}");

144 
	`emô_löe
("return 1;");

145 
	`dec_ödít
();

146 
	`emô_löe
("}");

147 
	}
}

	@target/cl.c

1 
	~<ú/ú.h
>

2 
	~<èrgë/utû.h
>

4 
	$öô_°©e_˛
(
D©a
* 
d©a
) {

5 
	`emô_löe
("(declaim (optimize (debug 0) (safety 0) (speed 3)))");

6 
	`emô_löe
("(defpackage #:elvm-compiled (:use #:cl) (:export #:elvm-main))");

7 
	`emô_löe
("(in-package #:elvm-compiled)");

8 
i
 = 0; i < 7; i++) {

9 
	`emô_löe
("(defv¨ %†0)", 
ªg_«mes
[
i
]);

11 
	`emô_löe
("(declaim (type fixnum");

12 
i
 = 0; i < 7; i++) {

13 
	`emô_löe
(" %s", 
ªg_«mes
[
i
]);

15 
	`emô_löe
("))");

16 
	`emô_löe
("(defvar memÇil)");

17 
	`emô_löe
("(defparameter mem-init '(");

18 
mp
 = 0; 
d©a
; d©®d©a->
√xt
, mp++) {

19 i‡(
d©a
->
v
) {

20 
	`emô_löe
(" (%d . %d)", 
mp
, 
d©a
->
v
);

23 
	`emô_löe
("))");

24 
	`emô_löe
("(defvarÉlvm-runningÇil)");

25 
	`emô_löe
("(defvarÉlvm-inputÇil)");

26 
	`emô_löe
("(defvarÉlvm-outputÇil)");

27 
	}
}

29 
	$˛_emô_func_¥ﬁogue
(
func_id
) {

30 
	`emô_löe
("");

31 
	`emô_löe
("(defu¿ñvm-func%d ()", 
func_id
);

32 
	`öc_ödít
();

33 
	`emô_löe
("(loop while (and (<= %dÖc) (<Öc %d)Élvm-running) do",

34 
func_id
 * 
CHUNKED_FUNC_SIZE
, (func_id + 1) * CHUNKED_FUNC_SIZE);

35 
	`öc_ödít
();

36 
	`emô_löe
("(caseÖc");

37 
	`emô_löe
("(-1Çil");

38 
	`öc_ödít
();

39 
	}
}

41 
	$˛_emô_func_ïûogue
() {

42 
	`dec_ödít
();

43 
	`emô_löe
("))");

44 
	`emô_löe
("(setqÖc (+Öc 1))");

45 
	`dec_ödít
();

46 
	`emô_löe
(")");

47 
	`dec_ödít
();

48 
	`emô_löe
(")");

49 
	}
}

51 
	$˛_emô_pc_ch™ge
(
pc
) {

52 
	`emô_löe
(")");

53 
	`emô_löe
("");

54 
	`dec_ödít
();

55 
	`emô_löe
("(%d", 
pc
);

56 
	`öc_ödít
();

57 
	}
}

59 c⁄° * 
	$˛_cmp_°r
(
In°
* 
ö°
) {

60 
›
 = 
	`n‹mÆize_c⁄d
(
ö°
->›, 
Ál£
);

61 c⁄° * 
fmt
;

62 
›
) {

63 
JEQ
: 
fmt
 = "(= %s %s)"; ;

64 
JNE
: 
fmt
 = "(/= %s %s)"; ;

65 
JLT
: 
fmt
 = "(< %s %s)"; ;

66 
JGT
: 
fmt
 = "(> %s %s)"; ;

67 
JLE
: 
fmt
 = "(<= %s %s)"; ;

68 
JGE
: 
fmt
 = "(>= %s %s)"; ;

70 
	`îr‹
("oops");

72  
	`f‹m©
(
fmt
, 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
	`§c_°r
(inst));

73 
	}
}

75 
	$˛_emô_ö°
(
In°
* 
ö°
) {

76 
ö°
->
›
) {

77 
MOV
:

78 
	`emô_löe
("(£tq %†%s)", 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
	`§c_°r
(inst));

81 
ADD
:

82 
	`emô_löe
("(£tq %†÷og™d (+ %†%sË" 
UINT_MAX_STR
 "))",

83 
ªg_«mes
[
ö°
->
d°
.
ªg
],

84 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
	`§c_°r
(inst));

87 
SUB
:

88 
	`emô_löe
("(£tq %†÷og™d (- %†%sË" 
UINT_MAX_STR
 "))",

89 
ªg_«mes
[
ö°
->
d°
.
ªg
],

90 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
	`§c_°r
(inst));

93 
LOAD
:

94 
	`emô_löe
("(setq %s (aref mem %s))",

95 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
	`§c_°r
(inst));

98 
STORE
:

99 
	`emô_löe
("(£t‡◊ª‡mem %sË%s)", 
	`§c_°r
(
ö°
), 
ªg_«mes
[ö°->
d°
.
ªg
]);

102 
PUTC
:

103 
	`emô_löe
("’utch¨ %s)", 
	`§c_°r
(
ö°
));

106 
GETC
:

107 
	`emô_löe
("(setq %s (getchar))",

108 
ªg_«mes
[
ö°
->
d°
.
ªg
]);

111 
EXIT
:

112 
	`emô_löe
("(setqÉlvm-runningÇil)");

115 
DUMP
:

118 
EQ
:

119 
NE
:

120 
LT
:

121 
GT
:

122 
LE
:

123 
GE
:

124 
	`emô_löe
("(setq %s (if %s 1 0))",

125 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
	`˛_cmp_°r
(inst));

128 
JEQ
:

129 
JNE
:

130 
JLT
:

131 
JGT
:

132 
JLE
:

133 
JGE
:

134 
	`emô_löe
("(if %s (setqÖc (- %s 1)))",

135 
	`˛_cmp_°r
(
ö°
), 
	`vÆue_°r
(&ö°->
jmp
));

138 
JMP
:

139 
	`emô_löe
("(£tqÖ¯(- %†1))", 
	`vÆue_°r
(&
ö°
->
jmp
));

143 
	`îr‹
("oops");

145 
	}
}

147 
	$èrgë_˛
(
ModuÀ
* 
moduÀ
) {

148 
	`öô_°©e_˛
(
moduÀ
->
d©a
);

149 
	`emô_löe
("(defun getchar ()");

150 
	`emô_löe
(" (if (listenÉlvm-input)");

151 
	`emô_löe
(" (char-code (read-charÉlvm-input))");

152 
	`emô_löe
(" 0))");

153 
	`emô_löe
("(defunÖutchar (c)");

154 
	`emô_löe
(" (princ (code-char c)Élvm-output))");

156 
num_funcs
 = 
	`emô_chunked_maö_lo›
(
moduÀ
->
ãxt
,

157 
˛_emô_func_¥ﬁogue
,

158 
˛_emô_func_ïûogue
,

159 
˛_emô_pc_ch™ge
,

160 
˛_emô_ö°
);

162 
	`emô_löe
("(defunÉlvm-main (&optional (input-stream *standard-input*) (output-stream *standard-output*))");

163 
	`öc_ödít
();

164 
	`emô_löe
("(setqÉlvm-input input-stream)");

165 
	`emô_löe
("(setqÉlvm-output output-stream)");

166 
i
 = 0; i < 7; i++) {

167 
	`emô_löe
("(£tq %†0)", 
ªg_«mes
[
i
]);

169 
	`emô_löe
("(setq mem (make-array 16777216 :element-type 'fixnum :initial-element 0))");

170 
	`emô_löe
("(dolist (p mem-init)");

171 
	`emô_löe
(" (setf (aref mem (carÖ)) (cdrÖ)))");

172 
	`emô_löe
("(setqÉlvm-runningÅ)");

173 
	`emô_löe
("(loop whileÉlvm-running do");

174 
	`öc_ödít
();

175 
	`emô_löe
("(ˇ£ (åunˇãÖ¯%d)", 
CHUNKED_FUNC_SIZE
);

176 
	`öc_ödít
();

177 
i
 = 0; i < 
num_funcs
; i++) {

178 
	`emô_löe
("(%d (ñvm-func%d))", 
i
, i);

180 
	`emô_löe
(")))");

181 
	`dec_ödít
();

182 
	`dec_ödít
();

183 
	`dec_ödít
();

184 
	`emô_löe
("(elvm-main)");

185 
	}
}

	@target/cpp.c

1 
	~<ú/ú.h
>

2 
	~<èrgë/utû.h
>

4 
size_t
 
	gBUF_SIZE
 = 10000;

6 
	$˝p_defs
() {

7 
	`emô_löe
("#include <cstdio>");

8 
	`emô_löe
("#include <utility>");

9 
	`emô_löe
("");

10 
	`emô_löe
("c⁄° size_àBUF_SIZE = %d;", 
BUF_SIZE
);

11 
	`emô_löe
("");

12 
	`emô_löe
("constexpr char input[] =");

13 
	`emô_löe
("#include \"input.txt\"");

14 
	`emô_löe
(";");

15 
	`emô_löe
("");

16 
	`emô_löe
("struct buffer {");

17 
	`emô_löe
(" unsigned int size;");

18 
	`emô_löe
(" unsigned int b[BUF_SIZE];");

19 
	`emô_löe
("};");

20 
	`emô_löe
("template <size_t... I>");

21 
	`emô_löe
("constexpr buffer make_buf_impl(unsigned int size, unsigned int* buf, std::index_sequence<I...>) {");

22 
	`emô_löe
("Ñeturn buffer{size, {buf[I]...}};");

23 
	`emô_löe
("}");

24 
	`emô_löe
("constexpr buffer make_buf(unsigned int size, unsigned int* buf) {");

25 
	`emô_löe
("Ñeturn make_buf_impl(size, buf, std::make_index_sequence<BUF_SIZE>{});");

26 
	`emô_löe
("}");

27 
	}
}

29 
	$˝p_öô_°©e
(
D©a
* 
d©a
) {

30 
i
 = 0; i < 7; i++) {

31 
	`emô_löe
("unsig√d i¡ %†0;", 
ªg_«mes
[
i
]);

34 
	`emô_löe
("unsigned int i_cur = 0;");

35 
	`emô_löe
("unsigned int o_cur = 0;");

36 
	`emô_löe
("unsigned int mem[1<<24] = {0};");

37 
	`emô_löe
("unsigned int buf[BUF_SIZE] = {0};");

39 
mp
 = 0; 
d©a
; d©®d©a->
√xt
, mp++) {

40 i‡(
d©a
->
v
) {

41 
	`emô_löe
("mem[%d] = %d;", 
mp
, 
d©a
->
v
);

44 
	}
}

46 
	$˝p_emô_¥ﬁogue
() {

47 
	`emô_löe
("");

48 
	`emô_löe
("while (1) {");

49 
	`öc_ödít
();

50 
	`emô_löe
("switch (pc) {");

51 
	`emô_löe
("case 0:");

52 
	`öc_ödít
();

53 
	}
}

55 
	$˝p_emô_ïûogue
() {

56 
	`dec_ödít
();

57 
	`emô_löe
("}");

58 
	`emô_löe
("pc++;");

59 
	`dec_ödít
();

60 
	`emô_löe
("}");

61 
	`emô_löe
("return make_buf(o_cur, buf);");

62 
	`dec_ödít
();

63 
	`emô_löe
("}");

64 
	}
}

66 
	$˝p_emô_pc_ch™ge
(
pc
) {

67 
	`emô_löe
("break;");

68 
	`emô_löe
("");

69 
	`dec_ödít
();

70 
	`emô_löe
("ˇ£ %d:", 
pc
);

71 
	`öc_ödít
();

72 
	}
}

74 
	$˝p_emô_ö°
(
In°
* 
ö°
) {

75 
ö°
->
›
) {

76 
MOV
:

77 
	`emô_löe
("%†%s;", 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
	`§c_°r
(inst));

80 
ADD
:

81 
	`emô_löe
("%†(%†+ %sË& " 
UINT_MAX_STR
 ";",

82 
ªg_«mes
[
ö°
->
d°
.
ªg
],

83 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
	`§c_°r
(inst));

86 
SUB
:

87 
	`emô_löe
("%†(%†- %sË& " 
UINT_MAX_STR
 ";",

88 
ªg_«mes
[
ö°
->
d°
.
ªg
],

89 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
	`§c_°r
(inst));

92 
LOAD
:

93 
	`emô_löe
("%†mem[%s];", 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
	`§c_°r
(inst));

96 
STORE
:

97 
	`emô_löe
("mem[%s] = %s;", 
	`§c_°r
(
ö°
), 
ªg_«mes
[ö°->
d°
.
ªg
]);

100 
PUTC
:

101 
	`emô_löe
("buf[o_cur++] = %s;", 
	`§c_°r
(
ö°
));

104 
GETC
:

105 
	`emô_löe
("%s = (input[i_cur] ? input[i_cur++] : 0);",

106 
ªg_«mes
[
ö°
->
d°
.
ªg
]);

109 
EXIT
:

110 
	`emô_löe
("return make_buf(o_cur, buf);");

113 
DUMP
:

116 
EQ
:

117 
NE
:

118 
LT
:

119 
GT
:

120 
LE
:

121 
GE
:

122 
	`emô_löe
("%s = %s;",

123 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
	`cmp_°r
(inst, "1"));

126 
JEQ
:

127 
JNE
:

128 
JLT
:

129 
JGT
:

130 
JLE
:

131 
JGE
:

132 
JMP
:

133 
	`emô_löe
("if (%s)Öc = %s - 1;",

134 
	`cmp_°r
(
ö°
, "1"), 
	`vÆue_°r
(&ö°->
jmp
));

138 
	`îr‹
("oops");

140 
	}
}

142 
	$˝p_emô_maö_lo›
(
In°
* 
ö°
) {

143 
¥ev_pc
 = 0;

144 ; 
ö°
; in° = in°->
√xt
) {

145 i‡(
¥ev_pc
 !
ö°
->
pc
) {

146 
	`˝p_emô_pc_ch™ge
(
ö°
->
pc
);

148 
¥ev_pc
 = 
ö°
->
pc
;

149 
	`˝p_emô_ö°
(
ö°
);

151 
	}
}

153 
	$èrgë_˝p
(
ModuÀ
* 
moduÀ
) {

154 
	`˝p_defs
();

155 
	`emô_löe
("");

156 
	`emô_löe
("constexpr buffer constexpr_main() {");

157 
	`öc_ödít
();

159 
	`˝p_öô_°©e
(
moduÀ
->
d©a
);

160 
	`˝p_emô_¥ﬁogue
();

161 
	`˝p_emô_maö_lo›
(
moduÀ
->
ãxt
);

162 
	`˝p_emô_ïûogue
();

164 
	`emô_löe
("");

165 
	`emô_löe
("int main() {");

166 
	`emô_löe
(" constexpr buffer buf = constexpr_main();");

167 
	`emô_löe
(" constexpr unsigned int output_size = buf.size;");

168 
	`emô_löe
("");

169 
	`emô_löe
(" for(int i = 0; i < output_size; ++i) {");

170 
	`emô_löe
("Öutchar(buf.b[i]);");

171 
	`emô_löe
(" }");

172 
	`emô_löe
("}");

173 
	}
}

	@target/cpp_template.c

1 
	~<ú/ú.h
>

2 
	~<èrgë/utû.h
>

3 
	~<èrgë/˝p_ãm∂©e_lib.h
>

5 
	$˝p_ãm∂©e_emô_fûe_¥ﬁogue
() {

6 
	`emô_löe
("#include <cstdio>");

7 
	`emô_löe
("");

8 
	`emô_löe
(
˝p_ãm∂©e_lib
);

9 
	`emô_löe
("");

10 
	`emô_löe
("typedefÉnum {á, b, c, d, bp, sp } Reg_Name;");

11 
	}
}

13 c⁄° * 
	$˝p_ãm∂©e_›_°r
(
In°
* 
ö°
) {

14 c⁄° * 
›_°r
;

15 c⁄° * 
§c_°r
 = 
ö°
->
§c
.
ty≥
 =
REG
 ? "reg" : "imm";

16 
ö°
->
›
) {

17 
MOV
:

18 
›_°r
 = "mov"; ;

19 
ADD
:

20 
›_°r
 = "add"; ;

21 
SUB
:

22 
›_°r
 = "sub"; ;

23 
LOAD
:

24 
›_°r
 = "load"; ;

25 
STORE
:

26 
›_°r
 = "store"; ;

27 
PUTC
:

28 
›_°r
 = "putc"; ;

29 
EQ
:

30 
NE
:

31 
LT
:

32 
GT
:

33 
LE
:

34 
GE
:

35 
›_°r
 = "cmp"; ;

36 
JEQ
:

37 
JNE
:

38 
JLT
:

39 
JGT
:

40 
JLE
:

41 
JGE
:

42 
›_°r
 = "jcmp"; ;

44 
	`îr‹
("oops");

46  
	`f‹m©
("%s_%s", 
›_°r
, 
§c_°r
);

47 
	}
}

50 
	gªg_id
 = 0;

51 
	gmem_id
 = 0;

52 
	gbuf_id
 = 0;

53 
	gexô_Êag
 = 0;

55 
	$˝p_ãm∂©e_emô_ö°
(
In°
* 
ö°
) {

56 
ö°
->
›
) {

57 
MOV
:

58 
ADD
:

59 
SUB
:

60 
	`emô_löe
("typedef %s<r%d, %s, %s>Ñ%d;",

61 
	`˝p_ãm∂©e_›_°r
(
ö°
),

62 
ªg_id
, 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
	`§c_°r
(inst),Ñeg_id + 1);

63 
ªg_id
++;

66 
LOAD
:

67 
	`emô_löe
("typedef %s<r%d, m%d, %s, %s>Ñ%d;",

68 
	`˝p_ãm∂©e_›_°r
(
ö°
),

69 
ªg_id
, 
mem_id
, 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
	`§c_°r
(inst),Ñeg_id + 1);

70 
ªg_id
++;

73 
STORE
:

74 
	`emô_löe
("typedef %s<r%d, m%d, %s, %s> m%d;",

75 
	`˝p_ãm∂©e_›_°r
(
ö°
),

76 
ªg_id
, 
mem_id
, 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
	`§c_°r
(inst), mem_id + 1);

77 
mem_id
++;

80 
PUTC
:

81 
	`emô_löe
("typedef %s<r%d, b%d,%s> b%d;",

82 
	`˝p_ãm∂©e_›_°r
(
ö°
),

83 
ªg_id
, 
buf_id
, 
	`§c_°r
(
ö°
), buf_id + 1);

84 
buf_id
++;

87 
GETC
:

88 
	`emô_löe
("typedef getc_reg<r%d, %s>Ñ%d;",

89 
ªg_id
, 
ªg_«mes
[
ö°
->
d°
.
ªg
],Ñeg_id + 1);

90 
ªg_id
++;

93 
EXIT
:

94 
	`emô_löe
("typedefÉxit_inst<r%d>Ñ%d;",

95 
ªg_id
,Ñeg_id + 1);

96 
exô_Êag
 = 1;

97 
ªg_id
++;

100 
DUMP
:

103 
EQ
:

104 
NE
:

105 
LT
:

106 
GT
:

107 
LE
:

108 
GE
:

109 
	`emô_löe
("typedef %s<r%d, %s, %s, %d>Ñ%d;",

110 
	`˝p_ãm∂©e_›_°r
(
ö°
),

111 
ªg_id
,

112 
ªg_«mes
[
ö°
->
d°
.
ªg
],

113 
	`§c_°r
(
ö°
),

114 
ö°
->
›
 - 
EQ
,

115 
ªg_id
 + 1);

116 
ªg_id
++;

119 
JEQ
:

120 
JNE
:

121 
JLT
:

122 
JGT
:

123 
JLE
:

124 
JGE
:

125 
	`emô_löe
("typedef %s<r%d, %s - 1, %s, %s, %d>Ñ%d;",

126 
	`˝p_ãm∂©e_›_°r
(
ö°
),

127 
ªg_id
,

128 
	`vÆue_°r
(&
ö°
->
jmp
),

129 
ªg_«mes
[
ö°
->
d°
.
ªg
],

130 
	`§c_°r
(
ö°
),

131 
ö°
->
›
 - 
JEQ
,

132 
ªg_id
 + 1);

133 
ªg_id
++;

136 
JMP
:

137 
	`emô_löe
("typedef jmp_%s<r%d, %s>Ñ%d;",

138 
ö°
->
jmp
.
ty≥
 =
REG
 ? "reg" : "imm",

139 
ªg_id
, 
	`vÆue_°r
(&
ö°
->
jmp
),Ñeg_id + 1);

140 
ªg_id
++;

144 
	`îr‹
("oops");

147 
	}
}

149 
	$˝p_ãm∂©e_emô_pc_ch™ge
(
pc
) {

150 
	`emô_löe
("ty≥de‡öc_pc<r%d, m%d, b%d>Ñesu…;", 
ªg_id
, 
mem_id
, 
buf_id
);

151 
	`dec_ödít
();

152 
	`emô_löe
("};");

153 
	`emô_löe
("");

154 
	`emô_löe
("template <typenameÑ0,Åypename m0,Åypename b0>");

155 
	`emô_löe
("°ru˘ func_swôch_im∂<r0, m0, b0, %d> {", 
pc
);

156 
	`öc_ödít
();

157 
	}
}

159 
	$˝p_ãm∂©e_emô_func_ïûogue
() {

160 
	`emô_löe
("ty≥de‡öc_pc<r%d, m%d, b%d>Ñesu…;", 
ªg_id
, 
mem_id
, 
buf_id
);

161 
	`dec_ödít
();

162 
	`emô_löe
("};");

163 
	`emô_löe
("");

164 
	`emô_löe
("template <typenameÉnv, intÖc>");

165 
	`emô_löe
("struct func_switch : func_switch_impl<"

168 
	}
}

170 
	$˝p_ãm∂©e_emô_func_swôch_im∂
(
In°
* 
ö°
) {

171 
¥ev_pc
 = 0;

172 
	`emô_löe
("template <typenameÑ0,Åypename m0,Åypename b0, intÖc>");

173 
	`emô_löe
("struct func_switch_impl {Åypedef inc_pc<r0, m0, b0>Ñesult; };");

174 
	`emô_löe
("");

175 
	`emô_löe
("template <typenameÑ0,Åypename m0,Åypename b0>");

176 
	`emô_löe
("struct func_switch_impl<r0, m0, b0, 0> {");

177 
	`öc_ödít
();

178 ; 
ö°
; in° = in°->
√xt
) {

179 i‡(
¥ev_pc
 !
ö°
->
pc
) {

180 
	`˝p_ãm∂©e_emô_pc_ch™ge
(
ö°
->
pc
);

181 
ªg_id
 = 0;

182 
mem_id
 = 0;

183 
buf_id
 = 0;

184 
exô_Êag
 = 0;

186 
¥ev_pc
 = 
ö°
->
pc
;

188 
	`˝p_ãm∂©e_emô_ö°
(
ö°
);

190 
	`˝p_ãm∂©e_emô_func_ïûogue
();

191 
	}
}

193 
	$˝p_ãm∂©e_emô_maö_lo›
() {

194 
	`emô_löe
("template <typenameÉnv, bool, int>");

195 
	`emô_löe
("struct main_loop {ÅypedefÉnvÑesult; };");

196 
	`emô_löe
("template <typenameÉnv, intÖc>");

197 
	`emô_löe
("struct main_loop<env, false,Öc> {");

198 
	`öc_ödít
();

199 
	`emô_löe
("typedef func_switch<env,Öc>Énv2;");

200 
	`emô_löe
("typedefÅypename main_loop<env2,Énv2::regs::exit_flag,Énv2::regs::pc>::resultÑesult;");

201 
	`dec_ödít
();

202 
	`emô_löe
("};");

203 
	}
}

205 
	$˝p_ãm∂©e_emô_ˇlc_maö
(
D©a
* 
d©a
) {

206 
	`emô_löe
("struct calc_main {");

207 
	`öc_ödít
();

208 
	`emô_löe
("typedef init_memory<MEM_SIZE> mem0;");

209 
mp
;

210 
mp
 = 0; 
d©a
; d©®d©a->
√xt
, mp++) {

211 i‡(
d©a
->
v
) {

212 
	`emô_löe
("ty≥de‡°‹e_vÆue<mem%d, %d, %d> mem%d;", 
mp
, mp, 
d©a
->
v
, mp + 1);

214 
	`emô_löe
("ty≥de‡mem%d mem%d;", 
mp
, mp + 1);

217 
	`emô_löe
("typedef init_regs<0>Ñegs;");

218 
	`emô_löe
("Åy≥de‡make_ív<ªgs, mem%d, Nû>Énv;", 
mp
);

219 
	`emô_löe
("typedef main_loop<env, false, 0>::resultÑesult;");

220 
	`dec_ödít
();

221 
	`emô_löe
("};");

222 
	}
}

224 
	$èrgë_˝p_ãm∂©e
(
ModuÀ
* 
moduÀ
) {

225 
	`˝p_ãm∂©e_emô_fûe_¥ﬁogue
();

226 
	`emô_löe
("");

228 
	`˝p_ãm∂©e_emô_func_swôch_im∂
(
moduÀ
->
ãxt
);

229 
	`emô_löe
("");

231 
	`˝p_ãm∂©e_emô_maö_lo›
();

232 
	`emô_löe
("");

234 
	`˝p_ãm∂©e_emô_ˇlc_maö
(
moduÀ
->
d©a
);

235 
	`emô_löe
("");

237 
	`emô_löe
("int main() {");

238 
	`öc_ödít
();

239 
	`emô_löe
("typedef calc_main::resultÑesult;");

240 
	`emô_löe
("print_buffer<result::buf>::run();");

241 
	`dec_ödít
();

242 
	`emô_löe
("}");

243 
	}
}

	@target/cpp_template_lib.h

8 
	g˝p_ãm∂©e_lib
[] =

	@target/cr.c

1 
	~<ú/ú.h
>

2 
	~<èrgë/utû.h
>

4 c⁄° * 
	gCR_REG_NAMES
[] = {

8 
	$¸_öô_°©e
(
D©a
* 
d©a
) {

9 
	`emô_löe
("{%% if flag?(:cr_elvm_input) %%}");

10 
	`emô_löe
("Örint \"#{STDIN.each_byte.to_a.map(&.to_i32).inspect} of Int32\"");

11 
	`emô_löe
("{%%Élsif flag?(:cr_elvm_output) %%}");

12 
	`emô_löe
(" STDERR.write_byte ARGV[0].to_u8");

13 
	`emô_löe
("{%%Élse %%}");

14 
	`öc_ödít
();

16 
	`emô_löe
("STATE = {input: 0,Éxit: 0}");

17 
	`emô_löe
("");

19 
ªg_«mes
 = 
CR_REG_NAMES
;

20 
	`emô_löe
("REG = {a: 0, b: 0, c: 0, d: 0, bp: 0, sp: 0,Öc: 0}");

21 
	`emô_löe
("");

23 
	`emô_löe
("MEM = {");

24 
mp
 = 0; 
d©a
; d©®d©a->
√xt
, mp++) {

25 i‡(
d©a
->
v
) {

26 
	`emô_löe
(" %d => %d,", 
mp
, 
d©a
->
v
);

29 
	`emô_löe
("}");

30 
	`emô_löe
("");

32 
	`emô_löe
("INPUT = {{ `crystalÑun -D cr_elvm_input #{1.filename}` }}");

33 
	`dec_ödít
();

34 
	`emô_löe
("{%%Énd %%}");

35 
	}
}

37 
	$¸_emô_func_¥ﬁogue
(
func_id
) {

38 
	`emô_löe
("{%% if %d <= REG[:pc] && REG[:pc] < %d %%}",

39 
func_id
 * 
CHUNKED_FUNC_SIZE
, (func_id + 1) * CHUNKED_FUNC_SIZE);

40 
	`öc_ödít
();

41 
	`emô_löe
("{%%Üoop2 = STATE[:exit] == 1 ? [] of Int32 : [0] %%}");

42 
	`emô_löe
("{%% for x inÜoop2 %%}");

43 
	`öc_ödít
();

44 
	`emô_löe
("{%% if STATE[:exit] == 0 &&Üoop2.size < 100000 && (%d <= REG[:pc] && REG[:pc] < %d)",

45 
func_id
 * 
CHUNKED_FUNC_SIZE
, (func_id + 1) * CHUNKED_FUNC_SIZE);

46 
	`öc_ödít
();

47 
	`emô_löe
("loop2.push 0");

48 
	`emô_löe
("if false");

49 
	`öc_ödít
();

50 
	}
}

52 
	$¸_emô_func_ïûogue
() {

53 
	`dec_ödít
();

54 
	`emô_löe
("end");

55 
	`emô_löe
("REG[:pc] = REG[:pc] + 1");

56 
	`dec_ödít
();

57 
	`emô_löe
("end %%}");

58 
	`dec_ödít
();

59 
	`emô_löe
("{%%Énd %%}");

60 
	`dec_ödít
();

61 
	`emô_löe
("{%%Énd %%}");

62 
	}
}

64 
	$¸_emô_pc_ch™ge
(
pc
) {

65 
	`dec_ödít
();

66 
	`emô_löe
("ñsi‡REG[:pc] =%d", 
pc
);

67 
	`öc_ödít
();

68 
	}
}

70 
	$¸_emô_ö°
(
In°
* 
ö°
) {

71 
ö°
->
›
) {

72 
MOV
:

73 
	`emô_löe
("%†%s", 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
	`§c_°r
(inst));

76 
ADD
:

77 
	`emô_löe
("%†(%†+ %sË& " 
UINT_MAX_STR
,

78 
ªg_«mes
[
ö°
->
d°
.
ªg
],

79 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
	`§c_°r
(inst));

82 
SUB
:

83 
	`emô_löe
("%†(%†- %sË& " 
UINT_MAX_STR
,

84 
ªg_«mes
[
ö°
->
d°
.
ªg
],

85 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
	`§c_°r
(inst));

88 
LOAD
:

89 
	`emô_löe
("%†MEM[%s] || 0", 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
	`§c_°r
(inst));

92 
STORE
:

93 
	`emô_löe
("MEM[%s] = %s", 
	`§c_°r
(
ö°
), 
ªg_«mes
[ö°->
d°
.
ªg
]);

96 
PUTC
:

97 
	`emô_löe
("`¸y°ÆÑu¿-D cr_ñvm_ouçuà#{1.fûíame} -- #{%†& 255}`", 
	`§c_°r
(
ö°
));

100 
GETC
:

101 
	`emô_löe
("if c = INPUT[STATE[:input]]");

102 
	`emô_löe
(" %†c", 
ªg_«mes
[
ö°
->
d°
.
ªg
]);

103 
	`emô_löe
(" STATE[:input] = STATE[:input] + 1");

104 
	`emô_löe
("else");

105 
	`emô_löe
(" %†0", 
ªg_«mes
[
ö°
->
d°
.
ªg
]);

106 
	`emô_löe
("end");

109 
EXIT
:

110 
	`emô_löe
("STATE[:exit] = 1");

113 
DUMP
:

116 
EQ
:

117 
NE
:

118 
LT
:

119 
GT
:

120 
LE
:

121 
GE
:

122 
	`emô_löe
("%s = %s ? 1 : 0",

123 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
	`cmp_°r
(inst, "true"));

126 
JEQ
:

127 
JNE
:

128 
JLT
:

129 
JGT
:

130 
JLE
:

131 
JGE
:

132 
	`emô_löe
("REG[:pc] = %s ? %s - 1 : REG[:pc]",

133 
	`cmp_°r
(
ö°
, "åue"), 
	`vÆue_°r
(&ö°->
jmp
));

136 
JMP
:

137 
	`emô_löe
("REG[:pc] = %†- 1", 
	`vÆue_°r
(&
ö°
->
jmp
));

141 
	`îr‹
("oops");

143 
	}
}

145 
	$èrgë_¸
(
ModuÀ
* 
moduÀ
) {

146 
	`¸_öô_°©e
(
moduÀ
->
d©a
);

147 
	`emô_löe
("{%% unless flag?(:cr_elvm_input) || flag?(:cr_elvm_output) %%}");

148 
	`öc_ödít
();

149 
	`emô_löe
("{%%Üoop1 = [0] %%}");

150 
	`emô_löe
("{%% for x inÜoop1 %%}");

151 
	`öc_ödít
();

152 
	`emô_löe
("{%%Üoop2 = [] of Int32 %%}");

153 
	`emô_löe
("{%% unless STATE[:exit] == 1 %%}");

154 
	`emô_löe
(" {%%Üoop1.push 0 %%}");

155 
	`emô_löe
("{%%Énd %%}");

156 
	`emô_chunked_maö_lo›
(
moduÀ
->
ãxt
,

157 
¸_emô_func_¥ﬁogue
,

158 
¸_emô_func_ïûogue
,

159 
¸_emô_pc_ch™ge
,

160 
¸_emô_ö°
);

161 
	`dec_ödít
();

162 
	`emô_löe
("{%%Énd %%}");

163 
	`dec_ödít
();

164 
	`emô_löe
("{%%Énd %%}");

165 
	}
}

	@target/cs.c

1 
	~<ú/ú.h
>

2 
	~<èrgë/utû.h
>

4 
	$cs_emô_func_¥ﬁogue
(
func_id
) {

5 
	`emô_löe
("");

6 
	`emô_löe
("¥iv©ê°©i¯void func%d(Ë{", 
func_id
);

7 
	`öc_ödít
();

8 
	`emô_löe
("while (%d <=Öc &&Öc < %d) {",

9 
func_id
 * 
CHUNKED_FUNC_SIZE
, (func_id + 1) * CHUNKED_FUNC_SIZE);

10 
	`öc_ödít
();

11 
	`emô_löe
("switch (pc) {");

12 
	`emô_löe
("case -1: /* dummy */");

13 
	`öc_ödít
();

14 
	}
}

16 
	$cs_emô_func_ïûogue
() {

17 
	`emô_löe
("break;");

18 
	`dec_ödít
();

19 
	`emô_löe
("}");

20 
	`emô_löe
("pc++;");

21 
	`dec_ödít
();

22 
	`emô_löe
("}");

23 
	`dec_ödít
();

24 
	`emô_löe
("}");

25 
	}
}

27 
	$cs_emô_pc_ch™ge
(
pc
) {

28 
	`emô_löe
("break;");

29 
	`emô_löe
("");

30 
	`dec_ödít
();

31 
	`emô_löe
("ˇ£ %d:", 
pc
);

32 
	`öc_ödít
();

33 
	}
}

35 
	$cs_emô_ö°
(
In°
* 
ö°
) {

36 
ö°
->
›
) {

37 
MOV
:

38 
	`emô_löe
("%†%s;", 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
	`§c_°r
(inst));

41 
ADD
:

42 
	`emô_löe
("%†(%†+ %sË& " 
UINT_MAX_STR
 ";",

43 
ªg_«mes
[
ö°
->
d°
.
ªg
],

44 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
	`§c_°r
(inst));

47 
SUB
:

48 
	`emô_löe
("%†(%†- %sË& " 
UINT_MAX_STR
 ";",

49 
ªg_«mes
[
ö°
->
d°
.
ªg
],

50 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
	`§c_°r
(inst));

53 
LOAD
:

54 
	`emô_löe
("%†mem[%s];", 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
	`§c_°r
(inst));

57 
STORE
:

58 
	`emô_löe
("mem[%s] = %s;", 
	`§c_°r
(
ö°
), 
ªg_«mes
[ö°->
d°
.
ªg
]);

61 
PUTC
:

62 
	`emô_löe
("C⁄sﬁe.Out.Wrôe((ch¨)%s);", 
	`§c_°r
(
ö°
));

65 
GETC
:

66 
	`emô_löe
("try { int _ = Console.In.Read(); "

69 
ªg_«mes
[
ö°
->
d°
.
ªg
]);

72 
EXIT
:

73 
	`emô_löe
("Environment.Exit(0);");

76 
DUMP
:

79 
EQ
:

80 
NE
:

81 
LT
:

82 
GT
:

83 
LE
:

84 
GE
:

85 
	`emô_löe
("%s = %s ? 1 : 0;",

86 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
	`cmp_°r
(inst, "true"));

89 
JEQ
:

90 
JNE
:

91 
JLT
:

92 
JGT
:

93 
JLE
:

94 
JGE
:

95 
JMP
:

96 
	`emô_löe
("if (%s)Öc = %s - 1;",

97 
	`cmp_°r
(
ö°
, "åue"), 
	`vÆue_°r
(&ö°->
jmp
));

101 
	`îr‹
("oops");

103 
	}
}

105 
	$cs_öô_°©e
(
D©a
* 
d©a
) {

106 
¥ev_mc
 = -1;

107 
mp
 = 0; 
d©a
; d©®d©a->
√xt
, mp++) {

108 i‡(
d©a
->
v
) {

109 
mc
 = 
mp
 / 1000;

110 
¥ev_mc
 !
mc
) {

111 i‡(
¥ev_mc
 != -1) {

112 
	`dec_ödít
();

113 
	`emô_löe
("}");

115 
¥ev_mc
++;

116 
	`emô_löe
("°©i¯void inô%d(Ë{", 
¥ev_mc
);

117 
	`öc_ödít
();

119 
	`emô_löe
("mem[%d] = %d;", 
mp
, 
d©a
->
v
);

123 i‡(
¥ev_mc
 != -1) {

124 
	`dec_ödít
();

125 
	`emô_löe
("}");

128  
¥ev_mc
 + 1;

129 
	}
}

131 
	$èrgë_cs
(
ModuÀ
* 
moduÀ
) {

132 
	`emô_löe
("using System;");

133 
	`emô_löe
("namespace ConsoleApplication {");

134 
	`öc_ödít
();

135 
	`emô_löe
("public class Program {");

136 
	`öc_ödít
();

137 
i
 = 0; i < 7; i++) {

138 
	`emô_löe
("°©i¯öà%s;", 
ªg_«mes
[
i
]);

140 
	`emô_löe
("static int[] mem =Çew int[1<<24];");

142 
num_öôs
 = 
	`cs_öô_°©e
(
moduÀ
->
d©a
);

144 
CHUNKED_FUNC_SIZE
 = 256;

145 
num_funcs
 = 
	`emô_chunked_maö_lo›
(
moduÀ
->
ãxt
,

146 
cs_emô_func_¥ﬁogue
,

147 
cs_emô_func_ïûogue
,

148 
cs_emô_pc_ch™ge
,

149 
cs_emô_ö°
);

151 
	`emô_löe
("public static void Main(string[]árgs) {");

152 
	`öc_ödít
();

154 
i
 = 0; i < 
num_öôs
; i++) {

155 
	`emô_löe
("öô%d();", 
i
);

158 
	`emô_löe
("");

159 
	`emô_löe
("while (true) {");

160 
	`öc_ödít
();

161 
	`emô_löe
("swôch (p¯/ %d | 0Ë{", 
CHUNKED_FUNC_SIZE
);

162 
i
 = 0; i < 
num_funcs
; i++) {

163 
	`emô_löe
("ˇ£ %d:", 
i
);

164 
	`emô_löe
(" func%d();", 
i
);

165 
	`emô_löe
(" break;");

167 
	`emô_löe
("}");

168 
	`dec_ödít
();

169 
	`emô_löe
("}");

171 
	`dec_ödít
();

172 
	`emô_löe
("}");

173 
	`dec_ödít
();

174 
	`emô_löe
("}");

175 
	`dec_ödít
();

176 
	`emô_löe
("}");

177 
	}
}

	@target/el.c

1 
	~<ú/ú.h
>

2 
	~<èrgë/utû.h
>

4 
	$öô_°©e_ñ
(
D©a
* 
d©a
) {

5 
	`emô_löe
("(setqÉlvm-main (lambda ()");

6 
	`emô_löe
("(load \"cl\"ÇilÅ)");

7 
i
 = 0; i < 7; i++) {

8 
	`emô_löe
("(£tq %†0)", 
ªg_«mes
[
i
]);

10 
	`emô_löe
("(setq mem (make-vector 16777216 0))");

11 
mp
 = 0; 
d©a
; d©®d©a->
√xt
, mp++) {

12 i‡(
d©a
->
v
) {

13 
	`emô_löe
("◊£àmem %d %d)", 
mp
, 
d©a
->
v
);

16 
	}
}

18 
	$ñ_emô_func_¥ﬁogue
(
func_id
) {

19 
	`emô_löe
("");

20 
	`emô_löe
("(defu¿ñvm-func%d ()", 
func_id
);

21 
	`öc_ödít
();

22 
	`emô_löe
("(while (and (<= %dÖc) (<Öc %d)Élvm-running)",

23 
func_id
 * 
CHUNKED_FUNC_SIZE
, (func_id + 1) * CHUNKED_FUNC_SIZE);

24 
	`öc_ödít
();

25 
	`emô_löe
("(cl-caseÖc");

26 
	`emô_löe
("(-1Çil");

27 
	`öc_ödít
();

28 
	}
}

30 
	$ñ_emô_func_ïûogue
() {

31 
	`dec_ödít
();

32 
	`emô_löe
("))");

33 
	`emô_löe
("(setqÖc (+Öc 1))");

34 
	`dec_ödít
();

35 
	`emô_löe
(")");

36 
	`dec_ödít
();

37 
	`emô_löe
(")");

38 
	}
}

40 
	$ñ_emô_pc_ch™ge
(
pc
) {

41 
	`emô_löe
(")");

42 
	`emô_löe
("");

43 
	`dec_ödít
();

44 
	`emô_löe
("(%d", 
pc
);

45 
	`öc_ödít
();

46 
	}
}

48 c⁄° * 
	$ñ_cmp_°r
(
In°
* 
ö°
) {

49 
›
 = 
	`n‹mÆize_c⁄d
(
ö°
->›, 
Ál£
);

50 c⁄° * 
fmt
;

51 
›
) {

52 
JEQ
: 
fmt
 = "(eq %s %s)"; ;

53 
JNE
: 
fmt
 = "(not (eq %s %s))"; ;

54 
JLT
: 
fmt
 = "(< %s %s)"; ;

55 
JGT
: 
fmt
 = "(> %s %s)"; ;

56 
JLE
: 
fmt
 = "(<= %s %s)"; ;

57 
JGE
: 
fmt
 = "(>= %s %s)"; ;

59 
	`îr‹
("oops");

61  
	`f‹m©
(
fmt
, 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
	`§c_°r
(inst));

62 
	}
}

64 
	$ñ_emô_ö°
(
In°
* 
ö°
) {

65 
ö°
->
›
) {

66 
MOV
:

67 
	`emô_löe
("(£tq %†%s)", 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
	`§c_°r
(inst));

70 
ADD
:

71 
	`emô_löe
("(£tq %†÷og™d (+ %†%sË" 
UINT_MAX_STR
 "))",

72 
ªg_«mes
[
ö°
->
d°
.
ªg
],

73 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
	`§c_°r
(inst));

76 
SUB
:

77 
	`emô_löe
("(£tq %†÷og™d (- %†%sË" 
UINT_MAX_STR
 "))",

78 
ªg_«mes
[
ö°
->
d°
.
ªg
],

79 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
	`§c_°r
(inst));

82 
LOAD
:

83 
	`emô_löe
("(setq %s (aref mem %s))",

84 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
	`§c_°r
(inst));

87 
STORE
:

88 
	`emô_löe
("◊£àmem %†%s)", 
	`§c_°r
(
ö°
), 
ªg_«mes
[ö°->
d°
.
ªg
]);

91 
PUTC
:

92 
	`emô_löe
("’utch¨ %s)", 
	`§c_°r
(
ö°
));

95 
GETC
:

96 
	`emô_löe
("(setq %s (getchar))",

97 
ªg_«mes
[
ö°
->
d°
.
ªg
]);

100 
EXIT
:

101 
	`emô_löe
("(setqÉlvm-runningÇil)");

104 
DUMP
:

107 
EQ
:

108 
NE
:

109 
LT
:

110 
GT
:

111 
LE
:

112 
GE
:

113 
	`emô_löe
("(setq %s (if %s 1 0))",

114 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
	`ñ_cmp_°r
(inst));

117 
JEQ
:

118 
JNE
:

119 
JLT
:

120 
JGT
:

121 
JLE
:

122 
JGE
:

123 
	`emô_löe
("(if %s (setqÖc (- %s 1)))",

124 
	`ñ_cmp_°r
(
ö°
), 
	`vÆue_°r
(&ö°->
jmp
));

127 
JMP
:

128 
	`emô_löe
("(£tqÖ¯(- %†1))", 
	`vÆue_°r
(&
ö°
->
jmp
));

132 
	`îr‹
("oops");

134 
	}
}

136 
	$èrgë_ñ
(
ModuÀ
* 
moduÀ
) {

137 
	`öô_°©e_ñ
(
moduÀ
->
d©a
);

138 
	`emô_löe
("(setqÉlvm-runningÅ)");

140 
num_funcs
 = 
	`emô_chunked_maö_lo›
(
moduÀ
->
ãxt
,

141 
ñ_emô_func_¥ﬁogue
,

142 
ñ_emô_func_ïûogue
,

143 
ñ_emô_pc_ch™ge
,

144 
ñ_emô_ö°
);

146 
	`emô_löe
("");

147 
	`emô_löe
("(whileÉlvm-running");

148 
	`öc_ödít
();

149 
	`emô_löe
("(˛-ˇ£ (/Ö¯%d)", 
CHUNKED_FUNC_SIZE
);

150 
i
 = 0; i < 
num_funcs
; i++) {

151 
	`emô_löe
("(%d (ñvm-func%d))", 
i
, i);

153 
	`emô_löe
(")");

154 
	`dec_ödít
();

155 
	`emô_löe
(")");

157 
	`emô_löe
("))");

159 
	`emô_löe
("(defun getchar ()");

160 
	`emô_löe
(" (if (eq (lengthÉlvm-input) 0) 0");

161 
	`emô_löe
(" (setqÑ (string-to-charÉlvm-input))");

162 
	`emô_löe
(" (setqÉlvm-input (substringÉlvm-input 1))");

163 
	`emô_löe
("Ñ))");

164 
	`emô_löe
("(ifÇoninteractive (progn");

165 
	`emô_löe
(" (setqÉlvm-input");

166 
	`emô_löe
(" (with-temp-buffer");

167 
	`emô_löe
(" (insert-file-contents \"/dev/stdin\")");

168 
	`emô_löe
(" (buffer-string)))");

169 
	`emô_löe
(" (defunÖutchar (c) (princ (char-to-string c)))");

170 
	`emô_löe
(" (funcallÉlvm-main)))");

171 
	}
}

	@target/elc.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<°rög.h
>

5 
	~<ú/ú.h
>

6 
	~<èrgë/utû.h
>

8 
èrgë_¨m
(
ModuÀ
* 
moduÀ
);

9 
èrgë_asmjs
(
ModuÀ
* 
moduÀ
);

10 
èrgë_bef
(
ModuÀ
* 
moduÀ
);

11 
èrgë_bf
(
ModuÀ
* 
moduÀ
);

12 
èrgë_c
(
ModuÀ
* 
moduÀ
);

13 
èrgë_˛
(
ModuÀ
* 
moduÀ
);

14 
èrgë_˝p
(
ModuÀ
* 
moduÀ
);

15 
èrgë_˝p_ãm∂©e
(
ModuÀ
* 
moduÀ
);

16 
èrgë_¸
(
ModuÀ
* 
moduÀ
);

17 
èrgë_cs
(
ModuÀ
* 
moduÀ
);

18 
èrgë_ñ
(
ModuÀ
* 
moduÀ
);

19 
èrgë_f‹th
(
ModuÀ
* 
moduÀ
);

20 
èrgë_fs
(
ModuÀ
* 
moduÀ
);

21 
èrgë_go
(
ModuÀ
* 
moduÀ
);

22 
èrgë_hs
(
ModuÀ
* 
moduÀ
);

23 
èrgë_i
(
ModuÀ
* 
moduÀ
);

24 
èrgë_java
(
ModuÀ
* 
moduÀ
);

25 
èrgë_js
(
ModuÀ
* 
moduÀ
);

26 
èrgë_lua
(
ModuÀ
* 
moduÀ
);

27 
èrgë_Œ
(
ModuÀ
* 
moduÀ
);

28 
èrgë_php
(
ModuÀ
* 
moduÀ
);

29 
èrgë_põt
(
ModuÀ
* 
moduÀ
);

30 
èrgë_põèsm
(
ModuÀ
* 
moduÀ
);

31 
èrgë_∂
(
ModuÀ
* 
moduÀ
);

32 
èrgë_po°_èg
(
ModuÀ
* 
moduÀ
);

33 
èrgë_py
(
ModuÀ
* 
moduÀ
);

34 
èrgë_ps
(
ModuÀ
* 
moduÀ
);

35 
èrgë_rb
(
ModuÀ
* 
moduÀ
);

36 
èrgë_sˇœ
(
ModuÀ
* 
moduÀ
);

37 
èrgë_scm_§
(
ModuÀ
* 
moduÀ
);

38 
èrgë_£d
(
ModuÀ
* 
moduÀ
);

39 
èrgë_sh
(
ModuÀ
* 
moduÀ
);

40 
èrgë_sqlôe3
(
ModuÀ
* 
moduÀ
);

41 
èrgë_swi·
(
ModuÀ
* 
moduÀ
);

42 
èrgë_ãx
(
ModuÀ
* 
moduÀ
);

43 
èrgë_tf
(
ModuÀ
* 
moduÀ
);

44 
èrgë_tm
(
ModuÀ
* 
moduÀ
);

45 
èrgë_u∆
(
ModuÀ
* 
moduÀ
);

46 
èrgë_vim
(
ModuÀ
* 
moduÀ
);

47 
èrgë_ws
(
ModuÀ
* 
moduÀ
);

48 
èrgë_x86
(
ModuÀ
* 
moduÀ
);

50 (*
	tèrgë_func_t
)(
	tModuÀ
*);

52 
èrgë_func_t
 
	$gë_èrgë_func
(c⁄° * 
ext
) {

53 i‡(!
	`°rcmp
(
ext
, "¨m")Ë 
èrgë_¨m
;

54 i‡(!
	`°rcmp
(
ext
, "asmjs")Ë 
èrgë_asmjs
;

55 i‡(!
	`°rcmp
(
ext
, "bef")Ë 
èrgë_bef
;

56 i‡(!
	`°rcmp
(
ext
, "bf")) {

57 
	`•lô_basic_block_by_mem
();

58  
èrgë_bf
;

60 i‡(!
	`°rcmp
(
ext
, "c")Ë 
èrgë_c
;

61 i‡(!
	`°rcmp
(
ext
, "˛")Ë 
èrgë_˛
;

62 i‡(!
	`°rcmp
(
ext
, "˝p")Ë 
èrgë_˝p
;

63 i‡(!
	`°rcmp
(
ext
, "˝p_ãm∂©e")Ë 
èrgë_˝p_ãm∂©e
;

64 i‡(!
	`°rcmp
(
ext
, "¸")Ë 
èrgë_¸
;

65 i‡(!
	`°rcmp
(
ext
, "cs")Ë 
èrgë_cs
;

66 i‡(!
	`°rcmp
(
ext
, "ñ")Ë 
èrgë_ñ
;

67 i‡(!
	`°rcmp
(
ext
, "f‹th")Ë 
èrgë_f‹th
;

68 i‡(!
	`°rcmp
(
ext
, "fs")Ë 
èrgë_fs
;

69 i‡(!
	`°rcmp
(
ext
, "go")Ë 
èrgë_go
;

70 i‡(!
	`°rcmp
(
ext
, "hs")Ë 
èrgë_hs
;

71 i‡(!
	`°rcmp
(
ext
, "i")Ë 
èrgë_i
;

72 i‡(!
	`°rcmp
(
ext
, "java")Ë 
èrgë_java
;

73 i‡(!
	`°rcmp
(
ext
, "js")Ë 
èrgë_js
;

74 i‡(!
	`°rcmp
(
ext
, "lua")Ë 
èrgë_lua
;

75 i‡(!
	`°rcmp
(
ext
, "Œ")Ë 
èrgë_Œ
;

76 i‡(!
	`°rcmp
(
ext
, "php")Ë 
èrgë_php
;

77 i‡(!
	`°rcmp
(
ext
, "põt")Ë 
èrgë_põt
;

78 i‡(!
	`°rcmp
(
ext
, "põèsm")Ë 
èrgë_põèsm
;

79 i‡(!
	`°rcmp
(
ext
, "∂")Ë 
èrgë_∂
;

80 i‡(!
	`°rcmp
(
ext
, "po°_èg")Ë 
èrgë_po°_èg
;

81 i‡(!
	`°rcmp
(
ext
, "py")Ë 
èrgë_py
;

82 i‡(!
	`°rcmp
(
ext
, "ps")Ë 
èrgë_ps
;

83 i‡(!
	`°rcmp
(
ext
, "rb")Ë 
èrgë_rb
;

84 i‡(!
	`°rcmp
(
ext
, "sˇœ")Ë 
èrgë_sˇœ
;

85 i‡(!
	`°rcmp
(
ext
, "scm_§")Ë 
èrgë_scm_§
;

86 i‡(!
	`°rcmp
(
ext
, "£d")Ë 
èrgë_£d
;

87 i‡(!
	`°rcmp
(
ext
, "sh")Ë 
èrgë_sh
;

88 i‡(!
	`°rcmp
(
ext
, "sqlôe3")Ë 
èrgë_sqlôe3
;

89 i‡(!
	`°rcmp
(
ext
, "swi·")Ë 
èrgë_swi·
;

90 i‡(!
	`°rcmp
(
ext
, "ãx")Ë 
èrgë_ãx
;

91 i‡(!
	`°rcmp
(
ext
, "tf")Ë 
èrgë_tf
;

92 i‡(!
	`°rcmp
(
ext
, "tm")Ë 
èrgë_tm
;

93 i‡(!
	`°rcmp
(
ext
, "u∆")Ë 
èrgë_u∆
;

94 i‡(!
	`°rcmp
(
ext
, "vim")Ë 
èrgë_vim
;

95 i‡(!
	`°rcmp
(
ext
, "ws")Ë 
èrgë_ws
;

96 i‡(!
	`°rcmp
(
ext
, "x86")Ë 
èrgë_x86
;

97 
	`îr‹
("unknow¿Êag: %s", 
ext
);

98 
	}
}

100 
	$maö
(
¨gc
, * 
¨gv
[]) {

101 #i‡
	`deföed
(
NOFILE
Ë|| deföed(
__eú__
)

102 
buf
[32];

103 
i
 = 0;; i++) {

104 
c
 = 
	`gëch¨
();

105 i‡(
c
 ='\n' || c =
EOF
) {

106 
buf
[
i
] = 0;

109 
buf
[
i
] = 
c
;

111 
èrgë_func_t
 
èrgë_func
 = 
	`gë_èrgë_func
(
buf
);

112 
ModuÀ
* 
moduÀ
 = 
	`lﬂd_eú
(
°dö
);

114 
èrgë_func_t
 
èrgë_func
 = 
NULL
;

115 c⁄° * 
fûíame
 = 
NULL
;

116 
i
 = 1; i < 
¨gc
; i++) {

117 c⁄° * 
¨g
 = 
¨gv
[
i
];

118 i‡(
¨g
[0] == '-') {

119 
èrgë_func
 = 
	`gë_èrgë_func
(
¨g
 + 1);

121 
fûíame
 = 
¨g
;

125 i‡(!
fûíame
) {

126 
	`îr‹
("no input file");

128 i‡(!
èrgë_func
) {

129 
	`îr‹
("noÅarget");

132 
ModuÀ
* 
moduÀ
 = 
	`lﬂd_eú_‰om_fûe
(
fûíame
);

134 
	`èrgë_func
(
moduÀ
);

135 
	}
}

	@target/forth.c

1 
	~<ú/ú.h
>

2 
	~<èrgë/utû.h
>

4 
	#FORTH_MEM_SIZE_STR
 "16777216"

	)

5 
	#FORTH_ADDR_MASK
 
UINT_MAX


	)

7 c⁄° * 
	gFORTH_REG_NAMES
[] = {

11 
	$öô_°©e_f‹th
(
D©a
* 
d©a
) {

12 
ªg_«mes
 = 
FORTH_REG_NAMES
;

13 
i
 = 0; i < 7; i++) {

14 
	`emô_löe
("v¨übÀ %s", 
ªg_«mes
[
i
]);

15 
	`emô_löe
("0 %†!", 
ªg_«mes
[
i
]);

17 
	`emô_löe
("variable mem");

18 
	`emô_löe
(
FORTH_MEM_SIZE_STR
 " cellsállocateÅhrow mem !");

19 
mp
 = 0; 
d©a
; d©®d©a->
√xt
, mp++) {

20 i‡(
d©a
->
v
) {

21 
	`emô_löe
("%d mem @ %d cñl†+ !", 
d©a
->
v
, 
mp
);

24 
	`emô_löe
("");

25 
	`emô_löe
("variableÅmpchar");

26 
	`emô_löe
(": getc");

27 
	`öc_ödít
();

28 
	`emô_löe
("tmpchar 1 stdinÑead-file");

29 
	`emô_löe
("0= swap 1 =ánd ifÅmpchar @Élse 0Åhen");

30 
	`dec_ödít
();

31 
	`emô_löe
(";");

32 
	}
}

34 
	$f‹th_emô_func_¥ﬁogue
(
func_id
) {

35 
	`emô_löe
("");

36 
	`emô_löe
(": func%d", 
func_id
);

37 
	`öc_ödít
();

38 
	`emô_löe
("begin");

39 
	`öc_ödít
();

40 
	`emô_löe
("reg-pc @ dup %d >= swap %d <ánd",

41 
func_id
 * 
CHUNKED_FUNC_SIZE
, (func_id + 1) * CHUNKED_FUNC_SIZE);

42 
	`dec_ödít
();

43 
	`emô_löe
("while");

44 
	`öc_ödít
();

45 
	`emô_löe
("reg-pc @");

46 
	`emô_löe
("dup -1 = if");

47 
	`öc_ödít
();

48 
	}
}

50 
	$f‹th_emô_func_ïûogue
() {

51 
	`dec_ödít
();

52 
	`emô_löe
("then");

53 
	`emô_löe
("drop");

54 
	`emô_löe
("1Ñeg-pc +!");

55 
	`dec_ödít
();

56 
	`emô_löe
("repeat");

57 
	`dec_ödít
();

58 
	`emô_löe
(";");

59 
	}
}

61 
	$f‹th_emô_pc_ch™ge
(
pc
) {

62 
	`dec_ödít
();

63 
	`emô_löe
("then");

64 
	`emô_löe
("du∞%d = if", 
pc
);

65 
	`öc_ödít
();

66 
	}
}

68 c⁄° * 
	$f‹th_vÆue_°r
(
VÆue
* 
v
) {

69 i‡(
v
->
ty≥
 =
REG
) {

70  
	`f‹m©
("%†@", 
ªg_«mes
[
v
->
ªg
]);

71 } i‡(
v
->
ty≥
 =
IMM
) {

72  
	`f‹m©
("%d", 
v
->
imm
);

74 
	`îr‹
("invalid value");

76 
	}
}

78 c⁄° * 
	$f‹th_§c_°r
(
In°
* 
ö°
) {

79  
	`f‹th_vÆue_°r
(&
ö°
->
§c
);

80 
	}
}

82 
	$emô_cmp
(
In°
* 
ö°
, c⁄° * 
cmp_›
) {

83 
	`emô_löe
("%s @ %s %s if 1Élse 0Åhen %s !",

84 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
	`f‹th_§c_°r
(inst),

85 
cmp_›
, 
ªg_«mes
[
ö°
->
d°
.
ªg
]);

86 
	}
}

88 
	$emô_jump
(
In°
* 
ö°
) {

89 
	`emô_löe
("%†1 -Ñeg-p¯!", 
	`f‹th_vÆue_°r
(&
ö°
->
jmp
));

90 
	}
}

92 
	$emô_c⁄d_jump
(
In°
* 
ö°
, c⁄° * 
cmp_›
) {

93 
	`emô_löe
("%s @ %s %s if",

94 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
	`f‹th_§c_°r
(ö°), 
cmp_›
);

95 
	`öc_ödít
();

96 
	`emô_jump
(
ö°
);

97 
	`dec_ödít
();

98 
	`emô_löe
("then");

99 
	}
}

101 
	$f‹th_emô_ö°
(
In°
* 
ö°
) {

102 
ö°
->
›
) {

103 
MOV
:

104 
	`emô_löe
("%†%†!", 
	`f‹th_§c_°r
(
ö°
), 
ªg_«mes
[ö°->
d°
.
ªg
]);

107 
ADD
:

108 
	`emô_löe
("%s @ %s + %dánd",

109 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
	`f‹th_§c_°r
(ö°), 
FORTH_ADDR_MASK
);

110 
	`emô_löe
("%†!", 
ªg_«mes
[
ö°
->
d°
.
ªg
]);

113 
SUB
:

114 
	`emô_löe
("%s @ %s - %dánd",

115 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
	`f‹th_§c_°r
(ö°), 
FORTH_ADDR_MASK
);

116 
	`emô_löe
("%†!", 
ªg_«mes
[
ö°
->
d°
.
ªg
]);

119 
LOAD
:

120 
	`emô_löe
("mem @ %s cells + @ %s !",

121 
	`f‹th_§c_°r
(
ö°
), 
ªg_«mes
[ö°->
d°
.
ªg
]);

124 
STORE
:

125 
	`emô_löe
("%s @ mem @ %s cells + !",

126 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
	`f‹th_§c_°r
(inst));

129 
PUTC
:

130 
	`emô_löe
("%†emô", 
	`f‹th_§c_°r
(
ö°
));

133 
GETC
:

134 
	`emô_löe
("gë¯%†!", 
ªg_«mes
[
ö°
->
d°
.
ªg
]);

137 
EXIT
:

138 
	`emô_löe
("bye");

141 
DUMP
:

144 
EQ
:

145 
	`emô_cmp
(
ö°
, "=");

147 
NE
:

148 
	`emô_cmp
(
ö°
, "<>");

150 
LT
:

151 
	`emô_cmp
(
ö°
, "<");

153 
GT
:

154 
	`emô_cmp
(
ö°
, ">");

156 
LE
:

157 
	`emô_cmp
(
ö°
, "<=");

159 
GE
:

160 
	`emô_cmp
(
ö°
, ">=");

163 
JEQ
:

164 
	`emô_c⁄d_jump
(
ö°
, "=");

166 
JNE
:

167 
	`emô_c⁄d_jump
(
ö°
, "<>");

169 
JLT
:

170 
	`emô_c⁄d_jump
(
ö°
, "<");

172 
JGT
:

173 
	`emô_c⁄d_jump
(
ö°
, ">");

175 
JLE
:

176 
	`emô_c⁄d_jump
(
ö°
, "<=");

178 
JGE
:

179 
	`emô_c⁄d_jump
(
ö°
, ">=");

181 
JMP
:

182 
	`emô_jump
(
ö°
);

186 
	`îr‹
("oops");

188 
	}
}

190 
	$èrgë_f‹th
(
ModuÀ
* 
moduÀ
) {

191 
	`öô_°©e_f‹th
(
moduÀ
->
d©a
);

192 
	`emô_löe
("");

194 
num_funcs
 = 
	`emô_chunked_maö_lo›
(
moduÀ
->
ãxt
,

195 
f‹th_emô_func_¥ﬁogue
,

196 
f‹th_emô_func_ïûogue
,

197 
f‹th_emô_pc_ch™ge
,

198 
f‹th_emô_ö°
);

200 
	`emô_löe
("");

201 
	`emô_löe
(": main");

202 
	`öc_ödít
();

203 
	`emô_löe
("begin");

204 
	`öc_ödít
();

205 
	`emô_löe
("ªg-p¯@ %d /", 
CHUNKED_FUNC_SIZE
);

206 
i
 = 0; i < 
num_funcs
; i++) {

207 
	`emô_löe
("du∞%d = i‡func%dÉl£", 
i
, i);

209 
i
 = 0; i < 
num_funcs
; i++) {

210 
	`emô_löe
("then");

212 
	`emô_löe
("drop");

213 
	`dec_ödít
();

214 
	`emô_löe
("0 until");

215 
	`dec_ödít
();

216 
	`emô_löe
(";");

217 
	`emô_löe
("");

218 
	`emô_löe
("main");

219 
	}
}

	@target/fs.c

1 
	~<ú/ú.h
>

2 
	~<èrgë/utû.h
>

4 c⁄° * 
	gFS_REG_NAMES
[] = {

8 
	$öô_°©e_fs
(
D©a
* 
d©a
) {

9 
ªg_«mes
 = 
FS_REG_NAMES
;

10 
i
 = 0; i < 7; i++) {

11 
	`emô_löe
("ÀàmuèbÀ %†0", 
ªg_«mes
[
i
]);

13 
	`emô_löe
("let mem : intárray = Array.zeroCreate (1 <<< 24)");

14 
	`emô_löe
("");

15 
mp
 = 0; 
d©a
; d©®d©a->
√xt
, mp++) {

16 i‡(
d©a
->
v
) {

17 
	`emô_löe
("Aºay.£àmem %d %d", 
mp
, 
d©a
->
v
);

20 
	}
}

22 
	$fs_emô_func_¥ﬁogue
(
func_id
) {

23 
	`emô_löe
("");

24 
	`emô_löe
("Ààfunc%d(Ë=", 
func_id
);

25 
	`öc_ödít
();

26 
	`emô_löe
("while %d <=Öc &&Öc < %d do",

27 
func_id
 * 
CHUNKED_FUNC_SIZE
, (func_id + 1) * CHUNKED_FUNC_SIZE);

28 
	`öc_ödít
();

29 
	`emô_löe
("matchÖc with");

30 
	`öc_ödít
();

31 
	}
}

33 
	$fs_emô_func_ïûogue
() {

34 
	`dec_ödít
();

35 
	`emô_löe
("| _ -> failwith(\"oops\")");

36 
	`emô_löe
("pc <-Öc + 1");

37 
	`dec_ödít
();

38 
	`dec_ödít
();

39 
	}
}

41 
	$fs_emô_pc_ch™ge
(
pc
) {

42 
	`dec_ödít
();

43 
	`emô_löe
("| %d ->", 
pc
);

44 
	`öc_ödít
();

45 
	}
}

47 c⁄° * 
	$fs_cmp_°r
(
In°
* 
ö°
, c⁄° * 
åue_°r
) {

48 
›
 = 
	`n‹mÆize_c⁄d
(
ö°
->op, 0);

49 c⁄° * 
›_°r
;

50 
›
) {

51 
JEQ
:

52 
›_°r
 = "="; ;

53 
JNE
:

54 
›_°r
 = "<>"; ;

55 
JLT
:

56 
›_°r
 = "<"; ;

57 
JGT
:

58 
›_°r
 = ">"; ;

59 
JLE
:

60 
›_°r
 = "<="; ;

61 
JGE
:

62 
›_°r
 = ">="; ;

63 
JMP
:

64  
åue_°r
;

66 
	`îr‹
("oops");

68  
	`f‹m©
("%†%†%s", 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
›_°r
, 
	`§c_°r
(inst));

69 
	}
}

71 
	$fs_emô_ö°
(
In°
* 
ö°
) {

72 
ö°
->
›
) {

73 
MOV
:

74 
	`emô_löe
("%†<- %s", 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
	`§c_°r
(inst));

77 
ADD
:

78 
	`emô_löe
("%†<- (%†+ %sË&&& " 
UINT_MAX_STR
,

79 
ªg_«mes
[
ö°
->
d°
.
ªg
],

80 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
	`§c_°r
(inst));

83 
SUB
:

84 
	`emô_löe
("%†<- (%†- %sË&&& " 
UINT_MAX_STR
,

85 
ªg_«mes
[
ö°
->
d°
.
ªg
],

86 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
	`§c_°r
(inst));

89 
LOAD
:

90 
	`emô_löe
("%†<- mem.[%s]", 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
	`§c_°r
(inst));

93 
STORE
:

94 
	`emô_löe
("Aºay.£àmem %†%s", 
	`§c_°r
(
ö°
), 
ªg_«mes
[ö°->
d°
.
ªg
]);

97 
PUTC
:

98 
	`emô_löe
("¥öt‡\"%%c\" (ch¨ %s)", 
	`§c_°r
(
ö°
));

101 
GETC
:

102 
	`emô_löe
("%s <-Üet x = Console.Read() in if x <> -1Åhen xÉlse 0",

103 
ªg_«mes
[
ö°
->
d°
.
ªg
]);

106 
EXIT
:

107 
	`emô_löe
("Environment.Exit(0)");

110 
DUMP
:

113 
EQ
:

114 
NE
:

115 
LT
:

116 
GT
:

117 
LE
:

118 
GE
:

119 
	`emô_löe
("%s <- if %sÅhen 1Élse 0",

120 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
	`fs_cmp_°r
(inst, "true"));

123 
JEQ
:

124 
JNE
:

125 
JLT
:

126 
JGT
:

127 
JLE
:

128 
JGE
:

129 
JMP
:

130 
	`emô_löe
("if %sÅhenÖc <- %s - 1",

131 
	`fs_cmp_°r
(
ö°
, "åue"), 
	`vÆue_°r
(&ö°->
jmp
));

135 
	`îr‹
("oops");

137 
	}
}

139 
	$èrgë_fs
(
ModuÀ
* 
moduÀ
) {

140 
	`emô_löe
("open System");

141 
	`emô_löe
("");

143 
	`öô_°©e_fs
(
moduÀ
->
d©a
);

145 
num_funcs
 = 
	`emô_chunked_maö_lo›
(
moduÀ
->
ãxt
,

146 
fs_emô_func_¥ﬁogue
,

147 
fs_emô_func_ïûogue
,

148 
fs_emô_pc_ch™ge
,

149 
fs_emô_ö°
);

151 
	`emô_löe
("");

152 
	`emô_löe
("[<EntryPoint>]");

153 
	`emô_löe
("let mainárgv =");

154 
	`öc_ödít
();

156 
	`emô_löe
("whileÅrue do");

157 
	`öc_ödít
();

158 
	`emô_löe
("m©chÖ¯/ %d wôh", 
CHUNKED_FUNC_SIZE
);

159 
i
 = 0; i < 
num_funcs
; i++) {

160 
	`emô_löe
("| %d -> func%d()", 
i
, i);

162 
	`emô_löe
("| _ -> failwith(\"oops\")");

163 
	`dec_ödít
();

164 
	`emô_löe
("0");

165 
	}
}

	@target/go.c

1 
	~<ú/ú.h
>

2 
	~<èrgë/utû.h
>

4 
	#GO_INT_TYPE
 "öt32"

	)

6 
	$go_emô_ö°
(
In°
* 
ö°
) {

7 
ö°
->
›
) {

8 
MOV
:

9 
	`emô_löe
("%†%s", 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
	`§c_°r
(inst));

12 
ADD
:

13 
	`emô_löe
("%†(%†+ %sË& " 
UINT_MAX_STR
,

14 
ªg_«mes
[
ö°
->
d°
.
ªg
],

15 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
	`§c_°r
(inst));

18 
SUB
:

19 
	`emô_löe
("%†(%†- %sË& " 
UINT_MAX_STR
,

20 
ªg_«mes
[
ö°
->
d°
.
ªg
],

21 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
	`§c_°r
(inst));

24 
LOAD
:

25 
	`emô_löe
("%†mem[%s]", 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
	`§c_°r
(inst));

28 
STORE
:

29 
	`emô_löe
("mem[%s] = %s", 
	`§c_°r
(
ö°
), 
ªg_«mes
[ö°->
d°
.
ªg
]);

32 
PUTC
:

33 
	`emô_löe
("buf[0] = byã(%s); os.Stdout.Wrôe(buf[:])", 
	`§c_°r
(
ö°
));

36 
GETC
:

37 
	`emô_löe
("i‡n,Éº :os.Stdö.Ród(buf[:]);Ç !0 &&Éº =nû { %†" 
GO_INT_TYPE
 "(buf[0]) }Élse { %s = 0 }",

38 
ªg_«mes
[
ö°
->
d°
.
ªg
],Ñeg_names[inst->dst.reg]);

41 
EXIT
:

42 
	`emô_löe
("os.Exit(0)");

45 
DUMP
:

48 
EQ
:

49 
NE
:

50 
LT
:

51 
GT
:

52 
LE
:

53 
GE
:

54 
	`emô_löe
("if %s { %s = 1 }Élse { %s = 0 }",

55 
	`cmp_°r
(
ö°
, "åue"), 
ªg_«mes
[ö°->
d°
.
ªg
],Ñeg_names[inst->dst.reg]);

58 
JEQ
:

59 
JNE
:

60 
JLT
:

61 
JGT
:

62 
JLE
:

63 
JGE
:

64 
JMP
:

65 
	`emô_löe
("if %s {Öc = %s - 1 }",

66 
	`cmp_°r
(
ö°
, "åue"), 
	`vÆue_°r
(&ö°->
jmp
));

70 
	`îr‹
("oops");

72 
	}
}

74 
	$go_öô_°©e
(
D©a
* 
d©a
) {

75 
	`emô_löe
("c›y(mem, []" 
GO_INT_TYPE
 "{");

76 
mp
 = 0; 
d©a
; d©®d©a->
√xt
, mp++) {

77 
	`emô_löe
(" %d,", 
d©a
->
v
);

79 
	`emô_löe
("})");

80 
	}
}

82 
	$èrgë_go
(
ModuÀ
* 
moduÀ
) {

83 
	`emô_löe
("package main");

84 
	`emô_löe
("import \"os\"");

86 
	`emô_löe
("func main() {");

87 
	`öc_ödít
();

89 
i
 = 0; i < 7; i++) {

90 
	`emô_löe
("v¨ %†" 
GO_INT_TYPE
, 
ªg_«mes
[
i
]);

91 
	`emô_löe
("_ = %s", 
ªg_«mes
[
i
]);

93 
	`emô_löe
("var buf [1]byte");

94 
	`emô_löe
("_ = buf");

96 
	`emô_löe
("mem :make([]" 
GO_INT_TYPE
 ", 1<<24)");

97 
	`go_öô_°©e
(
moduÀ
->
d©a
);

99 
	`emô_löe
("");

100 
	`emô_löe
("for {");

101 
	`öc_ödít
();

103 
	`emô_löe
("switchÖc {");

104 
	`öc_ödít
();

105 
¥ev_pc
 = -1;

106 
In°
* 
ö°
 = 
moduÀ
->
ãxt
; in°; in° = in°->
√xt
) {

107 i‡(
¥ev_pc
 !
ö°
->
pc
) {

108 
	`dec_ödít
();

109 
	`emô_löe
("");

110 
	`emô_löe
("ˇ£ %d:", 
ö°
->
pc
);

111 
¥ev_pc
 = 
ö°
->
pc
;

112 
	`öc_ödít
();

114 
	`go_emô_ö°
(
ö°
);

117 
	`dec_ödít
();

118 
	`emô_löe
("}");

119 
	`emô_löe
("pc++");

122 
	`dec_ödít
();

123 
	`emô_löe
("}");

126 
	`dec_ödít
();

127 
	`emô_löe
("}");

128 
	}
}

	@target/hs.c

1 
	~<ú/ú.h
>

2 
	~<èrgë/utû.h
>

6 c⁄° * 
	$hs_vÆue_°r
(
VÆue
* 
v
) {

7 i‡(
v
->
ty≥
 =
REG
) {

9 
	`emô_löe
("%†<-ÑódIORe‡%sRef", 
ªg_«mes
[
v
->
ªg
],Ñeg_names[v->reg]);

10  
ªg_«mes
[
v
->
ªg
];

11 } i‡(
v
->
ty≥
 =
IMM
) {

12  
	`f‹m©
("%d", 
v
->
imm
);

14 
	`îr‹
("invalid value");

16 
	}
}

19 c⁄° * 
	$hs_§c_°r
(
In°
* 
ö°
) {

20  
	`hs_vÆue_°r
(&
ö°
->
§c
);

21 
	}
}

25 c⁄° * 
	$hs_cmp_°r
(
In°
* 
ö°
, c⁄° * 
åue_°r
) {

26 
›
 = 
	`n‹mÆize_c⁄d
(
ö°
->op, 0);

27 c⁄° * 
›_°r
;

28 
›
) {

29 
JEQ
:

30 
›_°r
 = "=="; ;

31 
JNE
:

32 
›_°r
 = "/="; ;

33 
JLT
:

34 
›_°r
 = "<"; ;

35 
JGT
:

36 
›_°r
 = ">"; ;

37 
JLE
:

38 
›_°r
 = "<="; ;

39 
JGE
:

40 
›_°r
 = ">="; ;

41 
JMP
:

42  
åue_°r
;

44 
	`îr‹
("oops");

46 
	`emô_löe
("%†<-ÑódIORe‡%sRef", 
ªg_«mes
[
ö°
->
d°
.
ªg
],Ñeg_names[inst->dst.reg]);

47  
	`f‹m©
("%†%†%s", 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
›_°r
, 
	`hs_§c_°r
(inst));

48 
	}
}

51 
	$n_öc_ödít
(
n_times
) {

52 
i
 = 0; i < 
n_times
; i++)

53 
	`öc_ödít
();

54 
	}
}

56 
	$n_dec_ödít
(
n_times
) {

57 
i
 = 0; i < 
n_times
; i++)

58 
	`dec_ödít
();

59 
	}
}

61 
	$hs_emô_func_¥ﬁogue
(
func_id
) {

62 
	`emô_löe
("");

63 
	`n_öc_ödít
(2);

64 
	`emô_löe
("Ààfunc%d :: IO ()", 
func_id
);

65 
	`emô_löe
(" func%d = do", 
func_id
);

66 
	`n_öc_ödít
(5);

68 
	`emô_löe
("let whileLoop :: IO ()");

69 
	`emô_löe
(" whileLoop = do");

70 
	`n_öc_ödít
(5);

71 
	`emô_löe
("pc <-ÑeadIORefÖcRef");

72 
	`emô_löe
("if %d <=Öc &&Öc < %d",

73 
func_id
 * 
CHUNKED_FUNC_SIZE
, (func_id + 1) * CHUNKED_FUNC_SIZE);

74 
	`öc_ödít
();

75 
	`emô_löe
("then do");

76 
	`öc_ödít
();

77 
	`emô_löe
("caseÖc of");

78 
	`öc_ödít
();

79 
	`emô_löe
("-1 ->Ñeturn () -- dummy");

80 
	`öc_ödít
();

81 
	}
}

83 
	$hs_emô_func_ïûogue
() {

84 
	`dec_ödít
();

85 
	`dec_ödít
();

86 
	`emô_löe
("modifyIORefÖcRef (+1)");

87 
	`emô_löe
("whileLoop");

88 
	`dec_ödít
();

89 
	`emô_löe
("elseÑeturn ()");

90 
	`dec_ödít
();

91 
	`n_dec_ödít
(5);

92 
	`emô_löe
("whileLoop");

93 
	`n_dec_ödít
(5);

94 
	`n_dec_ödít
(2);

95 
	}
}

97 
	$hs_emô_pc_ch™ge
(
pc
) {

98 
	`emô_löe
("");

99 
	`dec_ödít
();

100 
	`emô_löe
("%d -> do", 
pc
);

101 
	`öc_ödít
();

102 
	}
}

104 
	$hs_emô_ö°
(
In°
* 
ö°
) {

105 
ö°
->
›
) {

106 
MOV
:

107 
	`emô_löe
("wrôeIORe‡%sRe‡%s;", 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
	`hs_§c_°r
(inst));

110 
ADD
:

111 
	`emô_löe
("%†<-ÑódIORe‡%sRef", 
ªg_«mes
[
ö°
->
d°
.
ªg
],Ñeg_names[inst->dst.reg]);

112 
	`emô_löe
("wrôeIORe‡%sRe‡((%†+ %sË.&. " 
UINT_MAX_STR
 ")",

113 
ªg_«mes
[
ö°
->
d°
.
ªg
],

114 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
	`hs_§c_°r
(inst));

117 
SUB
:

118 
	`emô_löe
("%†<-ÑódIORe‡%sRef", 
ªg_«mes
[
ö°
->
d°
.
ªg
],Ñeg_names[inst->dst.reg]);

119 
	`emô_löe
("wrôeIORe‡%sRe‡((%†- %sË.&. " 
UINT_MAX_STR
 ")",

120 
ªg_«mes
[
ö°
->
d°
.
ªg
],

121 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
	`hs_§c_°r
(inst));

124 
LOAD
:

125 
	`emô_löe
("%†<-ÑódAºay mem %s", 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
	`hs_§c_°r
(inst));

126 
	`emô_löe
("wrôeIORe‡%sRe‡%s", 
ªg_«mes
[
ö°
->
d°
.
ªg
],Ñeg_names[inst->dst.reg]);

129 
STORE
:

130 
	`emô_löe
("%†<-ÑódIORe‡%sRef", 
ªg_«mes
[
ö°
->
d°
.
ªg
],Ñeg_names[inst->dst.reg]);

131 
	`emô_löe
("wrôeAºay mem %†%s", 
	`hs_§c_°r
(
ö°
), 
ªg_«mes
[ö°->
d°
.
ªg
]);

134 
PUTC
:

135 
	`emô_löe
("putCh¨(ch∏%s)", 
	`hs_§c_°r
(
ö°
));

138 
GETC
:

139 
	`emô_löe
("catch (do");

140 
	`n_öc_ödít
(5);

141 
	`emô_löe
("%s <- fmap ord getChar",

142 
ªg_«mes
[
ö°
->
d°
.
ªg
]);

143 
	`emô_löe
("writeIORef %sRef %s",

144 
ªg_«mes
[
ö°
->
d°
.
ªg
],Ñeg_names[inst->dst.reg]);

145 
	`n_dec_ödít
(5);

146 
	`n_öc_ödít
(2);

147 
	`emô_löe
(")");

148 
	`emô_löe
("(\\(SomeEx˚±i⁄ÉË-> wrôeIORe‡%sRe‡0)", 
ªg_«mes
[
ö°
->
d°
.
ªg
]);

149 
	`n_dec_ödít
(2);

152 
EXIT
:

153 
	`emô_löe
("exitSuccess");

156 
DUMP
:

159 
EQ
:

160 
NE
:

161 
LT
:

162 
GT
:

163 
LE
:

164 
GE
:

165 
	`emô_löe
("writeIORef %sRef (if %sÅhen 1Élse 0)",

166 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
	`hs_cmp_°r
(inst, "True"));

169 
JEQ
:

170 
JNE
:

171 
JLT
:

172 
JGT
:

173 
JLE
:

174 
JGE
:

175 
JMP
:

176 
	`emô_löe
("if (%s)Åhen (writeIORefÖcRef (%s - 1))ÉlseÑeturn ()",

177 
	`hs_cmp_°r
(
ö°
, "True"), 
	`hs_vÆue_°r
(&ö°->
jmp
));

181 
	`îr‹
("oops");

183 
	}
}

185 
	$hs_öô_°©e
(
D©a
* 
d©a
) {

186 
¥ev_mc
 = -1;

187 
mp
 = 0; 
d©a
; d©®d©a->
√xt
, mp++) {

188 i‡(
d©a
->
v
) {

189 
mc
 = 
mp
 / 1000;

190 
¥ev_mc
 !
mc
) {

191 i‡(
¥ev_mc
 != -1) {

192 
	`emô_löe
("return ()");

193 
	`n_dec_ödít
(5);

195 
¥ev_mc
++;

196 
	`emô_löe
("Ààöô%d :: IO ()", 
¥ev_mc
);

197 
	`emô_löe
(" inô%d = do", 
¥ev_mc
);

198 
	`n_öc_ödít
(5);

200 
	`emô_löe
("wrôeAºay mem %d %d", 
mp
, 
d©a
->
v
);

203 
	`emô_löe
("return ()");

205 i‡(
¥ev_mc
 != -1) {

206 
	`n_dec_ödít
(7);

209  
¥ev_mc
 + 1;

210 
	}
}

212 
	$èrgë_hs
(
ModuÀ
* 
moduÀ
) {

213 
	`emô_löe
("import Data.Array.IO");

214 
	`emô_löe
("import Data.IORef");

215 
	`emô_löe
("import Data.Char");

216 
	`emô_löe
("import Data.Bits");

217 
	`emô_löe
("import System.Exit");

218 
	`emô_löe
("import Control.Exception");

219 
	`emô_löe
("");

220 
	`emô_löe
("main :: IO ()");

221 
	`emô_löe
("main = do");

222 
	`öc_ödít
();

223 
i
 = 0; i < 7; i++) {

224 
	`emô_löe
("%sRe‡<-ÇewIORe‡0 :: IO (IORe‡I¡)", 
ªg_«mes
[
i
]);

226 
	`emô_löe
("mem <-ÇewArray (0, %d) 0 :: IO (IOArray Int Int)", (1<<24)-1);

228 
num_öôs
 = 
	`hs_öô_°©e
(
moduÀ
->
d©a
);

230 
CHUNKED_FUNC_SIZE
 = 128;

231 
num_funcs
 = 
	`emô_chunked_maö_lo›
(
moduÀ
->
ãxt
,

232 
hs_emô_func_¥ﬁogue
,

233 
hs_emô_func_ïûogue
,

234 
hs_emô_pc_ch™ge
,

235 
hs_emô_ö°
);

237 
	`öc_ödít
();

238 
	`öc_ödít
();

240 
i
 = 0; i < 
num_öôs
; i++) {

241 
	`emô_löe
("öô%d", 
i
);

244 
	`emô_löe
("");

245 
	`emô_löe
("let mainLoop :: IO ()");

246 
	`emô_löe
(" mainLoop = do");

247 
	`n_öc_ödít
(5);

248 
	`emô_löe
("pc <-ÑeadIORefÖcRef");

249 
	`emô_löe
("ˇ£Ö¯`div` %d .|. 0 of", 
CHUNKED_FUNC_SIZE
);

250 
	`öc_ödít
();

251 
i
 = 0; i < 
num_funcs
; i++) {

252 
	`emô_löe
("%d -> func%d", 
i
, i);

254 
	`dec_ödít
();

255 
	`emô_löe
("mainLoop");

256 
	`n_dec_ödít
(5);

257 
	`emô_löe
("mainLoop");

259 
	}
}

	@target/i.c

1 
	~<°d¨g.h
>

3 
	~<ú/ú.h
>

4 
	~<èrgë/utû.h
>

6 c⁄° * 
	gI_REG_NAMES
[] = {

21 
	#USE_C_INTERCAL


	)

23 #i‡
deföed
(
USE_C_INTERCAL
)

25 
	#I_INT
 "$"

	)

27 c⁄° 
	gI_PUTC_TBL
[] = {

48 
	#I_INT
 "C\x08/"

	)

50 c⁄° 
	gI_PUTC_TBL
[] = {

71 
uöt
 
	$i_öãæóve
(
uöt
 
a
, uöà
b
) {

72 
uöt
 
r
 = 0;

73 
uöt
 
m
 = 1;

74 
a
 > 0 || 
b
 > 0) {

75 
r
 +(
a
 % 2 * 2 + 
b
 % 2Ë* 
m
;

76 
m
 *= 4;

77 
a
 /= 2;

78 
b
 /= 2;

80  
r
;

81 
	}
}

83 
uöt
 
	gi_emô_∂ó£_˙t
;

84 
	$i_emô_löe
(c⁄° * 
fmt
, ...) {

85 
va_li°
 
≠
;

86 
	`va_°¨t
(
≠
, 
fmt
);

87 * 
r
 = 
	`vf‹m©
(
fmt
, 
≠
);

88 
	`va_íd
(
≠
);

90 i‡(++
i_emô_∂ó£_˙t
 == 3) {

91 
	`¥ötf
("PLEASE ");

92 
i_emô_∂ó£_˙t
 = 0;

94 
	`¥ötf
("DO %s\n", 
r
);

95 
	}
}

97 * 
	$i_imm
(
uöt
 
v
) {

98  
	`f‹m©
("#%d", 
v
 % 65536);

100 i‡(
v
 < 65536) {

101  
	`f‹m©
("#%d", 
v
);

103 
uöt
 
a
 = 0, 
b
 = 0;

104 
v
) {

105 
uöt
 
b0
 = 
v
 % 2;

106 
v
 /= 2;

107 
uöt
 
a0
 = 
v
 % 2;

108 
v
 /= 2;

109 
b
 = b * 2 + 
b0
;

110 
a
 =á * 2 + 
a0
;

112  
	`f‹m©
("#%d"
I_INT
"#%d", 
a
, 
b
);

114 
	}
}

116 
	$i_öô_°©e
(
D©a
* 
d©a
) {

117 
i
 = 0; i < 7; i++) {

118 i‡(
i
 =
SP
) {

121 
	`i_emô_löe
("%†<- #65534", 
I_REG_NAMES
[
i
]);

123 
	`i_emô_löe
("%†<- #0", 
I_REG_NAMES
[
i
]);

126 
	`i_emô_löe
(":10 <- #0"
I_INT
"#65535");

127 
	`i_emô_löe
(":12 <- #0");

128 
	`i_emô_löe
(":13 <- #0");

131 
	`i_emô_löe
(";1 <- #65535");

132 
mp
 = 1; 
d©a
; d©®d©a->
√xt
, mp++) {

133 
	`i_emô_löe
(";1 SUB #%d <- %s", 
mp
, 
	`i_imm
(
d©a
->
v
));

136 
	`i_emô_löe
(";2 <- #%d", 
	`i_öãæóve
(1, 255) + 1);

137 
	`i_emô_löe
(";3 <- #%d", 
	`i_öãæóve
(1, 255) + 1);

138 
i
 = 1; i < 256; i++) {

139 
	`i_emô_löe
(";2 SUB #%d <- #%d", 
	`i_öãæóve
(1, 
i
), 
I_PUTC_TBL
[i]);

140 
	`i_emô_löe
(";3 SUB #%d <- #%d", 
	`i_öãæóve
(1, 
I_PUTC_TBL
[
i
] % 256), i);

142 
	}
}

144 c⁄° * 
	$i_vÆue_°r
(
VÆue
* 
v
) {

145 i‡(
v
->
ty≥
 =
REG
) {

146  
I_REG_NAMES
[
v
->
ªg
];

147 } i‡(
v
->
ty≥
 =
IMM
) {

148  
	`i_imm
(
v
->
imm
);

150 
	`îr‹
("invalid value");

152 
	}
}

154 c⁄° * 
	$i_§c_°r
(
In°
* 
ö°
) {

155  
	`i_vÆue_°r
(&
ö°
->
§c
);

156 
	}
}

158 
	$i_emô_bô›
(c⁄° * 
›
, 
d°
,

159 c⁄° * 
a
, c⁄° * 
b
) {

160 
	`i_emô_löe
(":%d <- %†" 
I_INT
 " %s", 
d°
, 
a
, 
b
);

161 
	`i_emô_löe
(":%d <- ':%s%d' ~ :10", 
d°
, 
›
, dst);

162 
	}
}

164 
	$i_emô_™d
(
d°
, c⁄° * 
a
, c⁄° * 
b
) {

165 
	`i_emô_bô›
("&", 
d°
, 
a
, 
b
);

166 
	}
}

168 
	$i_emô_x‹
(
d°
, c⁄° * 
a
, c⁄° * 
b
) {

169 
	`i_emô_bô›
("V\x08-", 
d°
, 
a
, 
b
);

170 
	}
}

172 
	$i_emô_add
(
add_‚
) {

173 
	`i_emô_löe
("(%dËNEXT", 
add_‚
);

174 
	}
}

176 
	$i_emô_sub
(
add_‚
) {

177 
	`i_emô_x‹
(9, ":9", "#65535");

178 
	`i_emô_löe
(":9 <- :9 ~ #65535");

179 
	`i_emô_add
(
add_‚
);

180 
	`i_emô_löe
(":9 <- #1");

181 
	`i_emô_add
(
add_‚
);

182 
	}
}

185 
	$i_emô_öãrˇl_boﬁize
() {

186 
	`i_emô_löe
(":8 <- :8" 
I_INT
 "#1");

187 
	`i_emô_löe
(":8 <- :V\x08-8");

188 
	`i_emô_löe
(":8 <- :8 ~ #3");

189 
	}
}

191 
	$i_emô_cmp
(
In°
* 
ö°
, 
add_‚
) {

192 
›
 = 
	`n‹mÆize_c⁄d
(
ö°
->›, 
Ál£
);

193 i‡(
›
 =
JGT
 || o∞=
JLE
) {

194 
›
 = o∞=
JGT
 ? 
JLT
 : 
JGE
;

195 
	`i_emô_löe
(":9 <- %s", 
I_REG_NAMES
[
ö°
->
d°
.
ªg
]);

196 
	`i_emô_löe
(":8 <- %s", 
	`i_§c_°r
(
ö°
));

198 
	`i_emô_löe
(":8 <- %s", 
I_REG_NAMES
[
ö°
->
d°
.
ªg
]);

199 
	`i_emô_löe
(":9 <- %s", 
	`i_§c_°r
(
ö°
));

201 
	`i_emô_sub
(
add_‚
);

203 
›
) {

204 
JEQ
:

205 
	`i_emô_löe
(":8 <- #65535 ~ :8");

206 
	`i_emô_löe
(":8 <- :8 ~ #1");

207 
	`i_emô_x‹
(8, ":8", "#1");

210 
JNE
:

211 
	`i_emô_löe
(":8 <- #65535 ~ :8");

212 
	`i_emô_löe
(":8 <- :8 ~ #1");

215 
JGE
:

216 
	`i_emô_x‹
(8, ":8", "#32768");

217 
FALLTHROUGH
;

219 
JLT
:

220 
	`i_emô_™d
(8, ":8", "#32768");

221 
	`i_emô_löe
(":8 <- #32768 ~ :8");

225 
	`îr‹
("o›†%d", 
›
);

227 
	}
}

229 
	$i_emô_jmp
(
In°
* 
ö°
, 
ªg_jmp
) {

230 i‡(
ö°
->
jmp
.
ty≥
 =
REG
) {

231 
	`i_emô_löe
(":11 <- %s", 
I_REG_NAMES
[
ö°
->
jmp
.
ªg
]);

232 
	`i_emô_löe
("(%dËNEXT", 
ªg_jmp
);

234 
	`i_emô_löe
("(%dËNEXT", 
ö°
->
jmp
.
imm
);

236 
	}
}

238 
	$i_emô_ö°
(
In°
* 
ö°
, 
add_‚
, 
ªg_jmp
, * 
œbñ
) {

239 
ö°
->
›
) {

240 
MOV
:

241 
	`i_emô_löe
("%†<- %s", 
I_REG_NAMES
[
ö°
->
d°
.
ªg
], 
	`i_§c_°r
(inst));

244 
ADD
:

245 
	`i_emô_löe
(":8 <- %s", 
I_REG_NAMES
[
ö°
->
d°
.
ªg
]);

246 
	`i_emô_löe
(":9 <- %s", 
	`i_§c_°r
(
ö°
));

247 
	`i_emô_add
(
add_‚
);

248 
	`i_emô_löe
("%†<- :8", 
I_REG_NAMES
[
ö°
->
d°
.
ªg
]);

251 
SUB
:

252 
	`i_emô_löe
(":8 <- %s", 
I_REG_NAMES
[
ö°
->
d°
.
ªg
]);

253 
	`i_emô_löe
(":9 <- %s", 
	`i_§c_°r
(
ö°
));

254 
	`i_emô_sub
(
add_‚
);

255 
	`i_emô_löe
("%†<- :8", 
I_REG_NAMES
[
ö°
->
d°
.
ªg
]);

258 
LOAD
:

259 
	`i_emô_löe
(":8 <- %s", 
	`i_§c_°r
(
ö°
));

260 
	`i_emô_löe
(":9 <- #1");

261 
	`i_emô_add
(
add_‚
);

262 
	`i_emô_löe
("%†<- ;1 SUB :8", 
I_REG_NAMES
[
ö°
->
d°
.
ªg
]);

265 
STORE
:

266 
	`i_emô_löe
(":8 <- %s", 
	`i_§c_°r
(
ö°
));

267 
	`i_emô_löe
(":9 <- #1");

268 
	`i_emô_add
(
add_‚
);

269 
	`i_emô_löe
(";1 SUB :8 <- %s", 
I_REG_NAMES
[
ö°
->
d°
.
ªg
]);

272 
PUTC
:

273 #i‡
	`deföed
(
USE_C_INTERCAL
)

274 
	`i_emô_löe
(":9 <- %s~#255", 
	`i_§c_°r
(
ö°
));

275 
	`i_emô_löe
(":9 <- #1"
I_INT
":9");

276 
	`i_emô_löe
(":8 <- ;2 SUB :9");

277 
	`i_emô_löe
(":9 <- :12");

278 
	`i_emô_löe
(":12 <- :8");

279 
	`i_emô_sub
(
add_‚
);

280 
	`i_emô_löe
(";4 <- #1");

281 
	`i_emô_löe
(";4 SUB #1 <- :8");

282 
	`i_emô_löe
("READ OUT ;4");

284 
	`i_emô_löe
(":9 <- %s~#255", 
	`i_§c_°r
(
ö°
));

285 
	`i_emô_löe
(":9 <- #1"
I_INT
":9");

286 
	`i_emô_löe
(";4 <- #1");

287 
	`i_emô_löe
(";4 SUB #1 <- ;2 SUB :9");

288 
	`i_emô_löe
("READ OUT ;4");

292 
GETC
:

293 
	`i_emô_löe
(";4 <- #1");

294 
	`i_emô_löe
(";4 SUB #1 <- #0");

295 
	`i_emô_löe
("WRITE IN ;4");

296 #i‡
	`deföed
(
USE_C_INTERCAL
)

297 
	`i_emô_löe
(":8 <- ;4 SUB #1");

299 
	`i_emô_löe
(":7 <- :8 ~ #256");

300 
i
 = 0; i < 16; i++) {

301 
	`i_emô_löe
(":7 <- :7"
I_INT
":7");

302 
	`i_emô_löe
(":7 <- :7 ~ #65535");

304 
	`i_emô_x‹
(7, ":7", "#255");

305 
	`i_emô_löe
(":7 <- :7 ~ #255");

307 
	`i_emô_löe
(":9 <- :13");

308 
	`i_emô_add
(
add_‚
);

309 
	`i_emô_löe
(":13 <- :8");

311 
	`i_emô_™d
(8, ":8", ":7");

313 
	`i_emô_löe
("%†<- :8", 
I_REG_NAMES
[
ö°
->
d°
.
ªg
]);

315 
	`i_emô_löe
(":9 <- ;4 SUB #1");

316 
	`i_emô_löe
(":9 <- :9~#255");

317 
	`i_emô_löe
(":9 <- #1"
I_INT
":9");

318 
	`i_emô_löe
("%†<- ;3 SUB :9", 
I_REG_NAMES
[
ö°
->
d°
.
ªg
]);

322 
EXIT
:

323 
	`i_emô_löe
("GIVE UP");

326 
DUMP
:

329 
EQ
:

330 
NE
:

331 
LT
:

332 
GT
:

333 
LE
:

334 
GE
:

335 
	`i_emô_cmp
(
ö°
, 
add_‚
);

336 
	`i_emô_löe
("%†<- :8", 
I_REG_NAMES
[
ö°
->
d°
.
ªg
]);

339 
JEQ
:

340 
JNE
:

341 
JLT
:

342 
JGT
:

343 
JLE
:

344 
JGE
: {

345 i‡(
ö°
->
jmp
.
ty≥
 =
REG
) {

346 
	`îr‹
("jccÑeg");

349 
	`i_emô_cmp
(
ö°
, 
add_‚
);

350 
	`i_emô_öãrˇl_boﬁize
();

352 
l1
 = ++*
œbñ
;

353 
l2
 = ++*
œbñ
;

354 
	`i_emô_löe
("(%dËNEXT", 
l1
);

355 
	`i_emô_löe
("(%dËNEXT", 
ö°
->
jmp
.
imm
);

357 
	`emô_löe
("(%dËDO RESUME :8", 
l2
);

358 
	`emô_löe
("(%dËDO (%dËNEXT", 
l1
, 
l2
);

359 
	`i_emô_löe
("FORGET #1");

363 
JMP
: {

364 
	`i_emô_jmp
(
ö°
, 
ªg_jmp
);

369 
	`îr‹
("oops");

371 
	}
}

373 
	$i_emô_ªg_jmp_èbÀ
(
uöt
 
pc
, uöà
bô
, uöà
max_pc
, * 
œbñ
) {

374 i‡(
bô
 > 
max_pc
) {

375 i‡(
pc
 >
max_pc
 ||Öc == 0) {

376 
	`i_emô_löe
("ERR %d", 
pc
);

378 
	`i_emô_löe
("(%dËNEXT", 
pc
);

383 
	`i_emô_löe
(":8 <- :11 ~ #%d", 
bô
);

384 
	`i_emô_öãrˇl_boﬁize
();

386 
l1
 = ++*
œbñ
;

387 
l2
 = ++*
œbñ
;

388 
	`i_emô_löe
("(%dËNEXT", 
l1
);

390 
	`i_emô_ªg_jmp_èbÀ
(
pc
 + 
bô
, bô * 2, 
max_pc
, 
œbñ
);

392 
	`emô_löe
("(%dËDO RESUME :8", 
l2
);

393 
	`emô_löe
("(%dËDO (%dËNEXT", 
l1
, 
l2
);

394 
	`i_emô_löe
("FORGET #1");

396 
	`i_emô_ªg_jmp_èbÀ
(
pc
, 
bô
 * 2, 
max_pc
, 
œbñ
);

397 
	}
}

399 
	$èrgë_i
(
ModuÀ
* 
moduÀ
) {

400 
	`i_öô_°©e
(
moduÀ
->
d©a
);

402 
œbñ
 = 0;

403 
In°
* 
ö°
 = 
moduÀ
->
ãxt
; in°; in° = in°->
√xt
) {

404 
œbñ
 = 
ö°
->
pc
;

406 
ªg_jmp
 = ++
œbñ
;

407 
add_‚
 = ++
œbñ
;

409 
¥ev_pc
 = 0;

410 
In°
* 
ö°
 = 
moduÀ
->
ãxt
; in°; in° = in°->
√xt
) {

411 i‡(
¥ev_pc
 !
ö°
->
pc
) {

412 
	`emô_löe
("(%dËDO FORGET #1", 
ö°
->
pc
);

414 
¥ev_pc
 = 
ö°
->
pc
;

415 
	`emô_löe
("");

416 
	`i_emô_ö°
(
ö°
, 
add_‚
, 
ªg_jmp
, &
œbñ
);

419 
	`emô_löe
("");

420 
	`emô_löe
("(%dËDO NOTêadd fun˘i⁄", 
add_‚
);

421 
i
 = 0; i < 16; i++) {

422 
	`i_emô_löe
(":9 <- :8"
I_INT
":9");

423 
	`i_emô_löe
(":8 <- :V\x08-9");

424 
	`i_emô_löe
(":8 <- :8 ~ :10");

425 
	`i_emô_löe
(":9 <- :&9");

426 
	`i_emô_löe
(":9 <- :9 ~ :10");

427 
	`i_emô_löe
(":9 <- ':9"
I_INT
"#0'~'#32767"I_INT"#1'");

429 
	`i_emô_löe
("RESUME #1");

431 
	`emô_löe
("");

432 
	`i_emô_löe
("NOTeÑeg jmp");

433 
	`emô_löe
("(%dËDO FORGET #1", 
ªg_jmp
);

434 
	`i_emô_ªg_jmp_èbÀ
(0, 1, 
ªg_jmp
, &
œbñ
);

435 
	}
}

	@target/java.c

1 
	~<ú/ú.h
>

2 
	~<èrgë/utû.h
>

4 
	$java_emô_func_¥ﬁogue
(
func_id
) {

5 
	`emô_löe
("");

6 
	`emô_löe
("¥iv©ê°©i¯void func%d(Ë{", 
func_id
);

7 
	`öc_ödít
();

8 
	`emô_löe
("while (%d <=Öc &&Öc < %d) {",

9 
func_id
 * 
CHUNKED_FUNC_SIZE
, (func_id + 1) * CHUNKED_FUNC_SIZE);

10 
	`öc_ödít
();

11 
	`emô_löe
("switch (pc) {");

12 
	`emô_löe
("case -1: /* dummy */");

13 
	`öc_ödít
();

14 
	}
}

16 
	$java_emô_func_ïûogue
() {

17 
	`dec_ödít
();

18 
	`emô_löe
("}");

19 
	`emô_löe
("pc++;");

20 
	`dec_ödít
();

21 
	`emô_löe
("}");

22 
	`dec_ödít
();

23 
	`emô_löe
("}");

24 
	}
}

26 
	$java_emô_pc_ch™ge
(
pc
) {

27 
	`emô_löe
("break;");

28 
	`emô_löe
("");

29 
	`dec_ödít
();

30 
	`emô_löe
("ˇ£ %d:", 
pc
);

31 
	`öc_ödít
();

32 
	}
}

34 
	$java_emô_ö°
(
In°
* 
ö°
) {

35 
ö°
->
›
) {

36 
MOV
:

37 
	`emô_löe
("%†%s;", 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
	`§c_°r
(inst));

40 
ADD
:

41 
	`emô_löe
("%†(%†+ %sË& " 
UINT_MAX_STR
 ";",

42 
ªg_«mes
[
ö°
->
d°
.
ªg
],

43 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
	`§c_°r
(inst));

46 
SUB
:

47 
	`emô_löe
("%†(%†- %sË& " 
UINT_MAX_STR
 ";",

48 
ªg_«mes
[
ö°
->
d°
.
ªg
],

49 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
	`§c_°r
(inst));

52 
LOAD
:

53 
	`emô_löe
("%†mem[%s];", 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
	`§c_°r
(inst));

56 
STORE
:

57 
	`emô_löe
("mem[%s] = %s;", 
	`§c_°r
(
ö°
), 
ªg_«mes
[ö°->
d°
.
ªg
]);

60 
PUTC
:

61 
	`emô_löe
("Sy°em.out.¥öt(Såög.vÆueOf((ch¨)%s));", 
	`§c_°r
(
ö°
));

64 
GETC
:

65 
	`emô_löe
("try { int __ = System.in.read(); "

68 
ªg_«mes
[
ö°
->
d°
.
ªg
]);

71 
EXIT
:

72 
	`emô_löe
("System.exit(0);");

75 
DUMP
:

78 
EQ
:

79 
NE
:

80 
LT
:

81 
GT
:

82 
LE
:

83 
GE
:

84 
	`emô_löe
("%s = %s ? 1 : 0;",

85 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
	`cmp_°r
(inst, "true"));

88 
JEQ
:

89 
JNE
:

90 
JLT
:

91 
JGT
:

92 
JLE
:

93 
JGE
:

94 
JMP
:

95 
	`emô_löe
("if (%s)Öc = %s - 1;",

96 
	`cmp_°r
(
ö°
, "åue"), 
	`vÆue_°r
(&ö°->
jmp
));

100 
	`îr‹
("oops");

102 
	}
}

104 
	$java_öô_°©e
(
D©a
* 
d©a
) {

105 
¥ev_mc
 = -1;

106 
mp
 = 0; 
d©a
; d©®d©a->
√xt
, mp++) {

107 i‡(
d©a
->
v
) {

108 
mc
 = 
mp
 / 1000;

109 
¥ev_mc
 !
mc
) {

110 i‡(
¥ev_mc
 != -1) {

111 
	`dec_ödít
();

112 
	`emô_löe
("}");

114 
¥ev_mc
++;

115 
	`emô_löe
("°©i¯void inô%d(Ë{", 
¥ev_mc
);

116 
	`öc_ödít
();

118 
	`emô_löe
("mem[%d] = %d;", 
mp
, 
d©a
->
v
);

122 i‡(
¥ev_mc
 != -1) {

123 
	`dec_ödít
();

124 
	`emô_löe
("}");

127  
¥ev_mc
 + 1;

128 
	}
}

130 
	$èrgë_java
(
ModuÀ
* 
moduÀ
) {

131 
	`emô_löe
("public class Main {");

132 
	`öc_ödít
();

133 
i
 = 0; i < 7; i++) {

134 
	`emô_löe
("°©i¯öà%s;", 
ªg_«mes
[
i
]);

136 
	`emô_löe
("static int[] mem;");

138 
num_öôs
 = 
	`java_öô_°©e
(
moduÀ
->
d©a
);

140 
CHUNKED_FUNC_SIZE
 = 256;

141 
num_funcs
 = 
	`emô_chunked_maö_lo›
(
moduÀ
->
ãxt
,

142 
java_emô_func_¥ﬁogue
,

143 
java_emô_func_ïûogue
,

144 
java_emô_pc_ch™ge
,

145 
java_emô_ö°
);

147 
	`emô_löe
("public static void main(String[]árgs) {");

148 
	`öc_ödít
();

150 
	`emô_löe
("mem =Çew int[1<<24];");

151 
i
 = 0; i < 
num_öôs
; i++) {

152 
	`emô_löe
("öô%d();", 
i
);

155 
	`emô_löe
("");

156 
	`emô_löe
("while (true) {");

157 
	`öc_ödít
();

158 
	`emô_löe
("swôch (p¯/ %d | 0Ë{", 
CHUNKED_FUNC_SIZE
);

159 
i
 = 0; i < 
num_funcs
; i++) {

160 
	`emô_löe
("ˇ£ %d:", 
i
);

161 
	`emô_löe
(" func%d();", 
i
);

162 
	`emô_löe
(" break;");

164 
	`emô_löe
("}");

165 
	`dec_ödít
();

166 
	`emô_löe
("}");

168 
	`dec_ödít
();

169 
	`emô_löe
("}");

170 
	`dec_ödít
();

171 
	`emô_löe
("}");

172 
	}
}

	@target/js.c

1 
	~<ú/ú.h
>

2 
	~<èrgë/utû.h
>

4 
	$öô_°©e_js
(
D©a
* 
d©a
) {

5 
	`emô_löe
("var main = function(getchar,Öutchar) {");

7 
i
 = 0; i < 7; i++) {

8 
	`emô_löe
("v¨ %†0;", 
ªg_«mes
[
i
]);

10 
	`emô_löe
("var mem =Çew Int32Array(1 << 24);");

11 
mp
 = 0; 
d©a
; d©®d©a->
√xt
, mp++) {

12 i‡(
d©a
->
v
) {

13 
	`emô_löe
("mem[%d] = %d;", 
mp
, 
d©a
->
v
);

16 
	}
}

18 
	$js_emô_func_¥ﬁogue
(
func_id
) {

19 
	`emô_löe
("");

20 
	`emô_löe
("v¨ func%d = fun˘i⁄(Ë{", 
func_id
);

21 
	`öc_ödít
();

22 
	`emô_löe
("while (%d <=Öc &&Öc < %d &&Ñunning) {",

23 
func_id
 * 
CHUNKED_FUNC_SIZE
, (func_id + 1) * CHUNKED_FUNC_SIZE);

24 
	`öc_ödít
();

25 
	`emô_löe
("switch (pc) {");

26 
	`emô_löe
("case -1: // dummy");

27 
	`öc_ödít
();

28 
	}
}

30 
	$js_emô_func_ïûogue
() {

31 
	`dec_ödít
();

32 
	`emô_löe
("}");

33 
	`emô_löe
("pc++;");

34 
	`dec_ödít
();

35 
	`emô_löe
("}");

36 
	`dec_ödít
();

37 
	`emô_löe
("};");

38 
	}
}

40 
	$js_emô_pc_ch™ge
(
pc
) {

41 
	`emô_löe
("break;");

42 
	`emô_löe
("");

43 
	`dec_ödít
();

44 
	`emô_löe
("ˇ£ %d:", 
pc
);

45 
	`öc_ödít
();

46 
	}
}

48 
	$js_emô_ö°
(
In°
* 
ö°
) {

49 
ö°
->
›
) {

50 
MOV
:

51 
	`emô_löe
("%†%s;", 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
	`§c_°r
(inst));

54 
ADD
:

55 
	`emô_löe
("%†(%†+ %sË& " 
UINT_MAX_STR
 ";",

56 
ªg_«mes
[
ö°
->
d°
.
ªg
],

57 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
	`§c_°r
(inst));

60 
SUB
:

61 
	`emô_löe
("%†(%†- %sË& " 
UINT_MAX_STR
 ";",

62 
ªg_«mes
[
ö°
->
d°
.
ªg
],

63 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
	`§c_°r
(inst));

66 
LOAD
:

67 
	`emô_löe
("%†mem[%s];", 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
	`§c_°r
(inst));

70 
STORE
:

71 
	`emô_löe
("mem[%s] = %s;", 
	`§c_°r
(
ö°
), 
ªg_«mes
[ö°->
d°
.
ªg
]);

74 
PUTC
:

75 
	`emô_löe
("putch¨(%s);", 
	`§c_°r
(
ö°
));

78 
GETC
:

79 
	`emô_löe
("%s = getchar();",

80 
ªg_«mes
[
ö°
->
d°
.
ªg
]);

83 
EXIT
:

84 
	`emô_löe
("running = false; break;");

87 
DUMP
:

90 
EQ
:

91 
NE
:

92 
LT
:

93 
GT
:

94 
LE
:

95 
GE
:

96 
	`emô_löe
("%s = (%s) | 0;",

97 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
	`cmp_°r
(inst, "true"));

100 
JEQ
:

101 
JNE
:

102 
JLT
:

103 
JGT
:

104 
JLE
:

105 
JGE
:

106 
JMP
:

107 
	`emô_löe
("if (%s)Öc = %s - 1;",

108 
	`cmp_°r
(
ö°
, "åue"), 
	`vÆue_°r
(&ö°->
jmp
));

112 
	`îr‹
("oops");

114 
	}
}

116 
	$èrgë_js
(
ModuÀ
* 
moduÀ
) {

117 
	`öô_°©e_js
(
moduÀ
->
d©a
);

119 
	`emô_löe
("varÑunning =Årue;");

121 
num_funcs
 = 
	`emô_chunked_maö_lo›
(
moduÀ
->
ãxt
,

122 
js_emô_func_¥ﬁogue
,

123 
js_emô_func_ïûogue
,

124 
js_emô_pc_ch™ge
,

125 
js_emô_ö°
);

127 
	`emô_löe
("");

128 
	`emô_löe
("while (running) {");

129 
	`öc_ödít
();

130 
	`emô_löe
("swôch (p¯/ %d | 0Ë{", 
CHUNKED_FUNC_SIZE
);

131 
i
 = 0; i < 
num_funcs
; i++) {

132 
	`emô_löe
("ˇ£ %d:", 
i
);

133 
	`emô_löe
(" func%d();", 
i
);

134 
	`emô_löe
(" break;");

136 
	`emô_löe
("}");

137 
	`dec_ödít
();

138 
	`emô_löe
("}");

140 
	`emô_löe
("};");

143 
	`emô_löe
("if (typeofÑequire != 'undefined') {");

144 
	`emô_löe
(" var sys =Ñequire('sys');");

145 
	`emô_löe
(" var input =Çull;");

146 
	`emô_löe
(" var ip = 0;");

147 
	`emô_löe
(" var getchar = function() {");

148 
	`emô_löe
(" if (input ===Çull)");

149 
	`emô_löe
(" input =Ñequire('fs').readFileSync('/dev/stdin');");

150 
	`emô_löe
("Ñeturn input[ip++] | 0;");

151 
	`emô_löe
(" };");

152 
	`emô_löe
(" varÖutchar = function(c) {");

153 
	`emô_löe
(" sys.print(String.fromCharCode(c & 255));");

154 
	`emô_löe
(" };");

155 
	`emô_löe
(" main(getchar,Öutchar);");

156 
	`emô_löe
("}");

157 
	}
}

	@target/ll.c

1 
	~<ú/ú.h
>

2 
	~<èrgë/utû.h
>

4 
	gfunc_idx
;

5 
	gˇ£_idx
;

6 
	gˇ£_pc
[512];

7 
	gˇ£_œbñ
[512];

8 
	gputc_idx
;

10 
	$Œ_öô_°©e
() {

11 
func_idx
 = 1;

12 
ˇ£_idx
 = 0;

13 
putc_idx
 = 0;

14 
i
 = 0; i < 7; i++) {

15 
	`emô_löe
("@%†comm⁄ globÆ i32 0,álig¿4", 
ªg_«mes
[
i
]);

17 
	`emô_löe
("@mem = common global [16777216 x i32] zeroinitializer,álign 16");

18 
	}
}

20 
	$Œ_emô_func_¥ﬁogue
(
func_id
) {

21 
	`emô_löe
("");

22 
	`emô_löe
("deföêvoid @func%d(Ë{", 
func_id
);

23 
	`öc_ödít
();

25 
	`emô_löe
("brÜabel %%1");

27 
	`emô_löe
("");

28 
	`emô_löe
("; <label>:1");

29 
	`emô_löe
("%%2 =Üoad i32, i32* @pc,álign 4");

30 
	`emô_löe
("%%3 = icm∞uÀ i32 %d, %%2", 
func_id
 * 
CHUNKED_FUNC_SIZE
);

31 
	`emô_löe
("br i1 %%3,Üabel %%4,Üabel %%7");

33 
	`emô_löe
("");

34 
	`emô_löe
("; <label>:4");

35 
	`emô_löe
("%%5 =Üoad i32, i32* @pc,álign 4");

36 
	`emô_löe
("%%6 = icm∞u… i32 %%5, %d", (
func_id
 + 1Ë* 
CHUNKED_FUNC_SIZE
);

37 
	`emô_löe
("brÜabel %%7");

39 
	`emô_löe
("");

40 
	`emô_löe
("; <label>:7");

41 
	`emô_löe
("%%8 =Öhi i1 [ false, %%1 ], [ %%6, %%4 ]");

42 
	`emô_löe
("br i1 %%8,Üabel %%switch_top,Üabel %%func_bottom");

44 
	`emô_löe
("");

45 
	`emô_löe
("; <label>:9");

47 
func_idx
 = 10;

48 
	}
}

50 
	$Œ_emô_func_ïûogue
() {

51 
	`emô_löe
("brÜabel %%case_bottom");

52 
	`emô_löe
("");

53 
	`emô_löe
("switch_top:");

54 
	`emô_löe
("%%%d =Üﬂd i32, i32* @pc,álig¿4", 
func_idx
);

55 
	`emô_löe
("swôch i32 %%%d,Üabñ %%ˇ£_bŸtom [", 
func_idx
);

56 
	`öc_ödít
();

57 
	`emô_löe
("i32 -1,Üabel %%9");

58 
i
=0; i<
ˇ£_idx
; i++) {

59 
	`emô_löe
("i32 %d,Üabñ %%%d", 
ˇ£_pc
[
i
], 
ˇ£_œbñ
[i]);

61 
	`dec_ödít
();

62 
	`emô_löe
("]");

64 
	`emô_löe
("");

65 
	`emô_löe
("case_bottom:");

66 
	`emô_löe
("%%%d =Üﬂd i32, i32* @pc,álig¿4", 
func_idx
+1);

67 
	`emô_löe
("%%%d =ádd i32 %%%d, 1", 
func_idx
+2, func_idx+1);

68 
	`emô_löe
("°‹êi32 %%%d, i32* @pc,álig¿4", 
func_idx
+2);

69 
	`emô_löe
("brÜabel %%1");

71 
	`emô_löe
("");

72 
	`emô_löe
("func_bottom:");

73 
	`emô_löe
("ret void");

74 
	`dec_ödít
();

75 
	`emô_löe
("}");

77 
func_idx
 = 1;

78 
ˇ£_idx
 = 0;

79 
putc_idx
 = 0;

80 
	}
}

82 
	$Œ_emô_pc_ch™ge
(
pc
) {

83 
	`emô_löe
("brÜabel %%case_bottom");

85 
	`emô_löe
("");

86 
	`emô_löe
("; <œbñ>:%d", 
func_idx
);

87 
ˇ£_pc
[
ˇ£_idx
] = 
pc
;

88 
ˇ£_œbñ
[
ˇ£_idx
] = 
func_idx
;

89 
ˇ£_idx
 += 1;

90 
func_idx
 += 1;

91 
	}
}

93 c⁄° * 
	$Œ_cmp_°r
(
In°
* 
ö°
) {

94 
›
 = 
	`n‹mÆize_c⁄d
(
ö°
->op, 0);

95 
›
) {

96 
JEQ
:

98 
JNE
:

100 
JLT
:

102 
JGT
:

104 
JLE
:

106 
JGE
:

109 
	`îr‹
("oops");

111 
	}
}

113 
	$Œ_emô_cmp
(
In°
* 
ö°
) {

114 i‡(
ö°
->
§c
.
ty≥
 =
REG
) {

115 
	`emô_löe
("%%%d =Üﬂd i32, i32* @%s,álig¿4", 
func_idx
, 
ªg_«mes
[
ö°
->
d°
.
ªg
]);

116 
	`emô_löe
("%%%d =Üﬂd i32, i32* @%s,álig¿4", 
func_idx
+1, 
	`§c_°r
(
ö°
));

117 
	`emô_löe
("%%%d = icmp %s i32 %%%d, %%%d",

118 
func_idx
+2, 
	`Œ_cmp_°r
(
ö°
), func_idx, func_idx+1);

119 
func_idx
 += 3;

120 } i‡(
ö°
->
§c
.
ty≥
 =
IMM
) {

121 
	`emô_löe
("%%%d =Üﬂd i32, i32* @%s,álig¿4", 
func_idx
, 
ªg_«mes
[
ö°
->
d°
.
ªg
]);

122 
	`emô_löe
("%%%d = icmp %s i32 %%%d, %s",

123 
func_idx
+1, 
	`Œ_cmp_°r
(
ö°
), func_idx, 
	`§c_°r
(inst));

124 
func_idx
 += 2;

126 
	`îr‹
("invalid value");

128 
	}
}

130 c⁄° * 
	$Œ_emô_lﬂd
(
In°
* 
ö°
) {

131 i‡(
ö°
->
§c
.
ty≥
 =
REG
) {

132 
	`emô_löe
("%%%d =Üﬂd i32, i32* @%s,álig¿4", 
func_idx
, 
ªg_«mes
[
ö°
->
d°
.
ªg
]);

133 
	`emô_löe
("%%%d =Üﬂd i32, i32* @%s,álig¿4", 
func_idx
+1, 
	`§c_°r
(
ö°
));

134 
func_idx
 += 2;

135  
	`f‹m©
("%d", 
func_idx
);

136 } i‡(
ö°
->
§c
.
ty≥
 =
IMM
) {

137 
	`emô_löe
("%%%d =Üﬂd i32, i32* @%s,álig¿4", 
func_idx
, 
ªg_«mes
[
ö°
->
d°
.
ªg
]);

138 
func_idx
 += 1;

139  
	`f‹m©
("@%s", 
ªg_«mes
[
ö°
->
d°
.
ªg
]);

141 
	`îr‹
("invalid value");

143 
	}
}

145 
	$Œ_emô_ö°
(
In°
* 
ö°
) {

146 
ö°
->
›
) {

147 
MOV
:

148 i‡(
ö°
->
§c
.
ty≥
 =
REG
) {

149 
	`emô_löe
("%%%d =Üﬂd i32, i32* @%s,álig¿4", 
func_idx
, 
	`§c_°r
(
ö°
));

150 
	`emô_löe
("°‹êi32 %%%d, i32* @%s,álig¿4", 
func_idx
, 
ªg_«mes
[
ö°
->
d°
.
ªg
]);

151 
func_idx
 += 1;

152 } i‡(
ö°
->
§c
.
ty≥
 =
IMM
) {

153 
	`emô_löe
("°‹êi32 %s, i32* @%s,álig¿4", 
	`§c_°r
(
ö°
), 
ªg_«mes
[ö°->
d°
.
ªg
]);

157 
ADD
:

158 i‡(
ö°
->
§c
.
ty≥
 =
REG
) {

159 
	`emô_löe
("%%%d =Üﬂd i32, i32* @%s,álig¿4", 
func_idx
, 
ªg_«mes
[
ö°
->
d°
.
ªg
]);

160 
	`emô_löe
("%%%d =Üﬂd i32, i32* @%s,álig¿4", 
func_idx
+1, 
	`§c_°r
(
ö°
));

161 
	`emô_löe
("%%%d =ádd i32 %%%d, %%%d", 
func_idx
+2, func_idx, func_idx+1);

162 
func_idx
 += 3;

163 } i‡(
ö°
->
§c
.
ty≥
 =
IMM
) {

164 
	`emô_löe
("%%%d =Üﬂd i32, i32* @%s,álig¿4", 
func_idx
, 
ªg_«mes
[
ö°
->
d°
.
ªg
]);

165 
	`emô_löe
("%%%d =ádd i32 %%%d, %s", 
func_idx
+1, func_idx, 
	`§c_°r
(
ö°
));

166 
func_idx
 += 2;

168 
	`îr‹
("invalid value");

170 
	`emô_löe
("%%%d =ánd i32 %%%d, 16777215", 
func_idx
, func_idx-1);

171 
	`emô_löe
("°‹êi32 %%%d, i32* @%s,álig¿4", 
func_idx
, 
ªg_«mes
[
ö°
->
d°
.
ªg
]);

172 
func_idx
 += 1;

175 
SUB
:

176 i‡(
ö°
->
§c
.
ty≥
 =
REG
) {

177 
	`emô_löe
("%%%d =Üﬂd i32, i32* @%s,álig¿4", 
func_idx
, 
ªg_«mes
[
ö°
->
d°
.
ªg
]);

178 
	`emô_löe
("%%%d =Üﬂd i32, i32* @%s,álig¿4", 
func_idx
+1, 
	`§c_°r
(
ö°
));

179 
	`emô_löe
("%%%d = sub i32 %%%d, %%%d", 
func_idx
+2, func_idx, func_idx+1);

180 
func_idx
 += 3;

181 } i‡(
ö°
->
§c
.
ty≥
 =
IMM
) {

182 
	`emô_löe
("%%%d =Üﬂd i32, i32* @%s,álig¿4", 
func_idx
, 
ªg_«mes
[
ö°
->
d°
.
ªg
]);

183 
	`emô_löe
("%%%d = sub i32 %%%d, %s", 
func_idx
+1, func_idx, 
	`§c_°r
(
ö°
));

184 
func_idx
 += 2;

186 
	`îr‹
("invalid value");

188 
	`emô_löe
("%%%d =ánd i32 %%%d, 16777215", 
func_idx
, func_idx-1);

189 
	`emô_löe
("°‹êi32 %%%d, i32* @%s,álig¿4", 
func_idx
, 
ªg_«mes
[
ö°
->
d°
.
ªg
]);

190 
func_idx
 += 1;

193 
LOAD
:

194 i‡(
ö°
->
§c
.
ty≥
 =
REG
) {

195 
	`emô_löe
("%%%d =Üﬂd i32, i32* @%s,álig¿4", 
func_idx
, 
	`§c_°r
(
ö°
));

196 
	`emô_löe
("%%%d = zexài32 %%%dÅÿi64", 
func_idx
+1, func_idx);

197 
	`emô_löe
("%%%d = gëñemíçå inbound†[16777216 x i32], [16777216 x i32]* @mem, i32 0, i64 %%%d", 
func_idx
+2, func_idx+1);

198 
	`emô_löe
("%%%d =Üﬂd i32, i32* %%%d,álig¿4", 
func_idx
+3, func_idx+2);

199 
	`emô_löe
("°‹êi32 %%%d, i32* @%s,álig¿4", 
func_idx
+3, 
ªg_«mes
[
ö°
->
d°
.
ªg
]);

200 
func_idx
 += 4;

201 } i‡(
ö°
->
§c
.
ty≥
 =
IMM
) {

202 
	`emô_löe
("%%%d =Üﬂd i32, i32* gëñemíçå inbound†([16777216 x i32], [16777216 x i32]* @mem, i32 0, i64 %s)", 
func_idx
, 
	`§c_°r
(
ö°
));

203 
	`emô_löe
("°‹êi32 %%%d, i32* @%s,álig¿4", 
func_idx
, 
ªg_«mes
[
ö°
->
d°
.
ªg
]);

204 
func_idx
 += 1;

206 
	`îr‹
("invalid value");

210 
STORE
:

211 i‡(
ö°
->
§c
.
ty≥
 =
REG
) {

212 
	`emô_löe
("%%%d =Üﬂd i32, i32* @%s,álig¿4", 
func_idx
, 
ªg_«mes
[
ö°
->
d°
.
ªg
]);

213 
	`emô_löe
("%%%d =Üﬂd i32, i32* @%s,álig¿4", 
func_idx
+1, 
	`§c_°r
(
ö°
));

214 
	`emô_löe
("%%%d = zexài32 %%%dÅÿi64", 
func_idx
+2, func_idx+1);

215 
	`emô_löe
("%%%d = gëñemíçå inbound†[16777216 x i32], [16777216 x i32]* @mem, i32 0, i64 %%%d", 
func_idx
+3, func_idx+2);

216 
	`emô_löe
("°‹êi32 %%%d, i32* %%%d,álig¿4", 
func_idx
, func_idx+3);

217 
func_idx
 += 4;

218 } i‡(
ö°
->
§c
.
ty≥
 =
IMM
) {

219 
	`emô_löe
("%%%d =Üﬂd i32, i32* @%s,álig¿4", 
func_idx
, 
ªg_«mes
[
ö°
->
d°
.
ªg
]);

220 
	`emô_löe
("°‹êi32 %%%d, i32* gëñemíçå inbound†([16777216 x i32], [16777216 x i32]* @mem, i32 0, i64 %s)", 
func_idx
, 
	`§c_°r
(
ö°
));

221 
func_idx
 += 1;

223 
	`îr‹
("invalid value");

227 
PUTC
:

228 i‡(
ö°
->
§c
.
ty≥
 =
REG
) {

229 
	`emô_löe
("%%%d =Üﬂd i32, i32* @%s,álig¿4", 
func_idx
, 
	`§c_°r
(
ö°
));

230 
	`emô_löe
("%%%d = cÆ»i32 @putch¨(i32 %%%d)", 
func_idx
+1, func_idx);

231 
func_idx
 += 2;

232 } i‡(
ö°
->
§c
.
ty≥
 =
IMM
) {

233 
	`emô_löe
("%%%d = cÆ»i32 @putch¨(i32 %s)", 
func_idx
, 
	`§c_°r
(
ö°
));

234 
func_idx
 += 1;

236 
	`îr‹
("invalid value");

240 
GETC
:

241 
	`emô_löe
("%%_%d =áŒoˇ i32,álig¿4", 
putc_idx
);

242 
	`emô_löe
("%%%d = cÆ»i32 @gëch¨()", 
func_idx
);

243 
	`emô_löe
("°‹êi32 %%%d, i32* %%_%d,álig¿4", 
func_idx
, 
putc_idx
);

244 
	`emô_löe
("%%%d =Üﬂd i32, i32* %%_%d,álig¿4", 
func_idx
+1, 
putc_idx
);

245 
	`emô_löe
("%%%d = icm∞√ i32 %%%d, -1", 
func_idx
+2, func_idx+1);

246 
	`emô_löe
("b∏i1 %%%d,Üabñ %%%d,Üabñ %%%d", 
func_idx
+2, func_idx+3, func_idx+5);

248 
	`emô_löe
("");

249 
	`emô_löe
("; <œbñ>:%%%d", 
func_idx
+3);

250 
	`emô_löe
("%%%d =Üﬂd i32, i32* %%_%d,álig¿4", 
func_idx
+4, 
putc_idx
);

251 
	`emô_löe
("b∏œbñ %%%d", 
func_idx
+6);

253 
	`emô_löe
("");

254 
	`emô_löe
("; <œbñ>:%%%d", 
func_idx
+5);

255 
	`emô_löe
("b∏œbñ %%%d", 
func_idx
+6);

257 
	`emô_löe
("");

258 
	`emô_löe
("; <œbñ>:%%%d", 
func_idx
+6);

259 
	`emô_löe
("%%%d =Öhi i32 [ %%%d, %%%d ], [0, %%%d]",

260 
func_idx
+7, func_idx+4, func_idx+3, func_idx+5);

261 
	`emô_löe
("°‹êi32 %%%d, i32* @%s,álig¿4", 
func_idx
+7, 
ªg_«mes
[
ö°
->
d°
.
ªg
]);

262 
func_idx
 += 8;

263 
putc_idx
 += 1;

266 
EXIT
:

267 
	`emô_löe
("call void @exit(i32 0)");

270 
DUMP
:

273 
EQ
:

274 
NE
:

275 
LT
:

276 
GT
:

277 
LE
:

278 
GE
:

279 
	`Œ_emô_cmp
(
ö°
);

280 
	`emô_löe
("%%%d = zexài1 %%%dÅÿi32", 
func_idx
, func_idx-1);

281 
	`emô_löe
("°‹êi32 %%%d, i32* @%s,álig¿4", 
func_idx
, 
ªg_«mes
[
ö°
->
d°
.
ªg
]);

282 
func_idx
 += 1;

285 
JEQ
:

286 
JNE
:

287 
JLT
:

288 
JGT
:

289 
JLE
:

290 
JGE
:

291 
	`emô_löe
("; cm∞jm∞%s", 
	`Œ_cmp_°r
(
ö°
));

292 
	`Œ_emô_cmp
(
ö°
);

293 i‡(
ö°
->
jmp
.
ty≥
 =
REG
) {

294 
	`emô_löe
("br i1 %%%d,Üabel %%%d,Üabel %%%d",

295 
func_idx
-1, func_idx, func_idx+3);

296 
	`emô_löe
("");

297 
	`emô_löe
("; <œbñ>:%%%d", 
func_idx
);

298 
	`emô_löe
("%%%d =Üﬂd i32, i32* @%s,álig¿4", 
func_idx
+1, 
	`vÆue_°r
(&
ö°
->
jmp
));

299 
	`emô_löe
("%%%d = sub i32 %%%d, 1", 
func_idx
+2, func_idx+1);

300 
	`emô_löe
("°‹êi32 %d, i32* @pc,álig¿4", 
func_idx
+2);

301 
func_idx
 += 3;

302 } i‡(
ö°
->
jmp
.
ty≥
 =
IMM
) {

303 
	`emô_löe
("br i1 %%%d,Üabel %%%d,Üabel %%%d",

304 
func_idx
-1, func_idx, func_idx+1);

305 
	`emô_löe
("");

306 
	`emô_löe
("; <œbñ>:%%%d", 
func_idx
);

307 
	`emô_löe
("°‹êi32 %d, i32* @pc,álig¿4", 
ö°
->
jmp
.
imm
-1);

308 
func_idx
 += 1;

310 
	`îr‹
("invalid value");

312 
	`emô_löe
("b∏œbñ %%%d", 
func_idx
);

313 
	`emô_löe
("");

314 
	`emô_löe
("; <œbñ>:%%%d", 
func_idx
);

315 
func_idx
 += 1;

318 
JMP
:

319 
	`emô_löe
("; jmp");

320 i‡(
ö°
->
jmp
.
ty≥
 =
REG
) {

321 
	`emô_löe
("%%%d =Üﬂd i32, i32* @%s,álig¿4", 
func_idx
, 
	`vÆue_°r
(&
ö°
->
jmp
));

322 
	`emô_löe
("%%%d = sub i32 %%%d, 1", 
func_idx
+1, func_idx);

323 
	`emô_löe
("°‹êi32 %%%d, i32* @pc,álig¿4", 
func_idx
+1);

324 
func_idx
 += 2;

325 } i‡(
ö°
->
jmp
.
ty≥
 =
IMM
) {

326 
	`emô_löe
("°‹êi32 %d, i32* @pc,álig¿4", 
ö°
->
jmp
.
imm
-1);

331 
	`îr‹
("oops");

333 
	}
}

335 
	$èrgë_Œ
(
ModuÀ
* 
moduÀ
) {

336 
	`Œ_öô_°©e
();

338 
num_funcs
 = 
	`emô_chunked_maö_lo›
(
moduÀ
->
ãxt
,

339 
Œ_emô_func_¥ﬁogue
,

340 
Œ_emô_func_ïûogue
,

341 
Œ_emô_pc_ch™ge
,

342 
Œ_emô_ö°
);

344 
	`emô_löe
("");

345 
	`emô_löe
("declare i32 @getchar()");

346 
	`emô_löe
("declare i32 @putchar(i32)");

347 
	`emô_löe
("declare void @exit(i32)");

349 
	`emô_löe
("");

350 
	`emô_löe
("define i32 @main() {");

351 
	`öc_ödít
();

353 
	`emô_löe
("%%1 =álloca i32,álign 4");

354 
	`emô_löe
("store i32 0, i32* %%1");

355 
D©a
* 
d©a
 = 
moduÀ
->data;

356 
mp
 = 0; 
d©a
; d©®d©a->
√xt
, mp++) {

357 i‡(
d©a
->
v
) {

358 
	`emô_löe
("°‹êi32 %d, i32* gëñemíçå inbound†([16777216 x i32], [16777216 x i32]* @mem, i32 0, i64 %d),álig¿4", 
d©a
->
v
, 
mp
);

361 
	`emô_löe
("brÜabel %%2");

363 
	`emô_löe
("");

364 
	`emô_löe
("; <label>:2");

365 
	`emô_löe
("%%3 =Üoad i32, i32* @pc,álign 4");

366 
	`emô_löe
("%%4 = udiv i32 %%3, %d", 
CHUNKED_FUNC_SIZE
);

368 
œbñ_off£t
 = 5;

369 
whûe_bŸtom
 = 
œbñ_off£t
 + 
num_funcs
;

371 
	`emô_löe
("swôch i32 %%4,Üabñ %%%d [", 
whûe_bŸtom
);

372 
i
 = 0; i < 
num_funcs
; i++) {

373 
	`emô_löe
("i32 %d,Üabñ %%%d", 
i
, 
œbñ_off£t
+i);

375 
	`emô_löe
("]");

377 
	`emô_löe
("");

378 
i
 = 0; i < 
num_funcs
; i++) {

379 
	`emô_löe
("; <œbñ>:%d", 
œbñ_off£t
+
i
);

380 
	`öc_ödít
();

381 
	`emô_löe
("ˇŒ void @func%d()", 
i
);

382 
	`emô_löe
("b∏œbñ %%%d", 
whûe_bŸtom
);

383 
	`dec_ödít
();

386 
	`emô_löe
("");

387 
	`emô_löe
("; <œbñ>:%d", 
whûe_bŸtom
);

388 
	`emô_löe
("brÜabel %%2");

390 
	`emô_löe
("");

391 
	`emô_löe
("%%%d =Üﬂd i32, i32* %%1,álig¿4", 
whûe_bŸtom
+2);

392 
	`emô_löe
("ªài32 %%%d", 
whûe_bŸtom
+2);

393 
	`dec_ödít
();

394 
	`emô_löe
("}");

395 
	}
}

	@target/lua.c

1 
	~<ú/ú.h
>

2 
	~<èrgë/utû.h
>

4 c⁄° * 
	$lua_cmp_°r
(
In°
* 
ö°
, c⁄° * 
åue_°r
) {

5 
›
 = 
	`n‹mÆize_c⁄d
(
ö°
->op, 0);

6 c⁄° * 
›_°r
;

7 
›
) {

8 
JEQ
:

9 
›_°r
 = "=="; ;

10 
JNE
:

11 
›_°r
 = "~="; ;

12 
JLT
:

13 
›_°r
 = "<"; ;

14 
JGT
:

15 
›_°r
 = ">"; ;

16 
JLE
:

17 
›_°r
 = "<="; ;

18 
JGE
:

19 
›_°r
 = ">="; ;

20 
JMP
:

21  
åue_°r
;

23 
	`îr‹
("oops");

25  
	`f‹m©
("%†%†%s", 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
›_°r
, 
	`§c_°r
(inst));

26 
	}
}

28 
	$öô_°©e_lua
(
D©a
* 
d©a
) {

29 
i
 = 0; i < 7; i++) {

30 
	`emô_löe
("%†0", 
ªg_«mes
[
i
]);

32 
	`emô_löe
("mem = {}");

33 
	`emô_löe
("for _ = 0, ((1 << 24) -1) do mem[_] = 0;Énd");

34 
mp
 = 0; 
d©a
; d©®d©a->
√xt
, mp++) {

35 i‡(
d©a
->
v
) {

36 
	`emô_löe
("mem[%d] = %d", 
mp
, 
d©a
->
v
);

39 
	}
}

41 
	$lua_emô_func_¥ﬁogue
(
func_id
) {

42 
	`emô_löe
("");

43 
	`emô_löe
("fun˘i⁄ func%d()", 
func_id
);

44 
	`öc_ödít
();

45 
	`emô_löe
("");

47 
	`emô_löe
("while %d <=ÖcándÖc < %d do",

48 
func_id
 * 
CHUNKED_FUNC_SIZE
, (func_id + 1) * CHUNKED_FUNC_SIZE);

49 
	`öc_ödít
();

50 
	`emô_löe
("if falseÅhen");

51 
	`öc_ödít
();

52 
	}
}

54 
	$lua_emô_func_ïûogue
() {

55 
	`dec_ödít
();

56 
	`emô_löe
("end");

57 
	`emô_löe
("pc =Öc + 1");

58 
	`dec_ödít
();

59 
	`emô_löe
("end");

60 
	`dec_ödít
();

61 
	`emô_löe
("end");

62 
	}
}

64 
	$lua_emô_pc_ch™ge
(
pc
) {

65 
	`emô_löe
("");

66 
	`dec_ödít
();

67 
	`emô_löe
("ñ£i‡p¯=%dÅhí", 
pc
);

68 
	`öc_ödít
();

69 
	}
}

71 
	$lua_emô_ö°
(
In°
* 
ö°
) {

72 
ö°
->
›
) {

73 
MOV
:

74 
	`emô_löe
("%†%s", 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
	`§c_°r
(inst));

77 
ADD
:

78 
	`emô_löe
("%†(%†+ %sË& " 
UINT_MAX_STR
,

79 
ªg_«mes
[
ö°
->
d°
.
ªg
],

80 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
	`§c_°r
(inst));

83 
SUB
:

84 
	`emô_löe
("%†(%†- %sË& " 
UINT_MAX_STR
,

85 
ªg_«mes
[
ö°
->
d°
.
ªg
],

86 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
	`§c_°r
(inst));

89 
LOAD
:

90 
	`emô_löe
("%†mem[%s]", 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
	`§c_°r
(inst));

93 
STORE
:

94 
	`emô_löe
("mem[%s] = %s", 
	`§c_°r
(
ö°
), 
ªg_«mes
[ö°->
d°
.
ªg
]);

97 
PUTC
:

98 
	`emô_löe
("io.wrôe(°rög.ch¨(%s))", 
	`§c_°r
(
ö°
));

101 
GETC
:

102 
	`emô_löe
("_ = io.read(1); %s = _ánd string.byte(_) or 0",

103 
ªg_«mes
[
ö°
->
d°
.
ªg
]);

106 
EXIT
:

107 
	`emô_löe
("os.exit(0)");

110 
DUMP
:

113 
EQ
:

114 
NE
:

115 
LT
:

116 
GT
:

117 
LE
:

118 
GE
:

119 
	`emô_löe
("%s = ((%s)ánd 1 or 0)",

120 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
	`lua_cmp_°r
(inst, "true"));

123 
JEQ
:

124 
JNE
:

125 
JLT
:

126 
JGT
:

127 
JLE
:

128 
JGE
:

129 
JMP
:

130 
	`emô_löe
("if %sÅhenÖc = %s - 1;Énd",

131 
	`lua_cmp_°r
(
ö°
, "åue"), 
	`vÆue_°r
(&ö°->
jmp
));

135 
	`îr‹
("oops");

137 
	}
}

139 
	$èrgë_lua
(
ModuÀ
* 
moduÀ
) {

140 
	`öô_°©e_lua
(
moduÀ
->
d©a
);

142 
num_funcs
 = 
	`emô_chunked_maö_lo›
(
moduÀ
->
ãxt
,

143 
lua_emô_func_¥ﬁogue
,

144 
lua_emô_func_ïûogue
,

145 
lua_emô_pc_ch™ge
,

146 
lua_emô_ö°
);

148 
	`emô_löe
("");

149 
	`emô_löe
("whileÅrue do");

150 
	`öc_ödít
();

151 
	`emô_löe
("if falseÅhen");

152 
i
 = 0; i < 
num_funcs
; i++) {

153 
	`emô_löe
("ñ£i‡p¯< %dÅhí func%d();", (
i
 + 1Ë* 
CHUNKED_FUNC_SIZE
, i);

155 
	`emô_löe
("end");

156 
	`dec_ödít
();

157 
	`emô_löe
("end");

158 
	}
}

	@target/php.c

1 
	~<ú/ú.h
>

2 
	~<èrgë/utû.h
>

4 c⁄° * 
	gPHP_REG_NAMES
[] = {

8 
	$öô_°©e_php
(
D©a
* 
d©a
) {

9 
ªg_«mes
 = 
PHP_REG_NAMES
;

10 
	`emô_löe
("<?php");

12 
	`emô_löe
("call_user_func(function(){");

13 
	`öc_ödít
();

14 
i
 = 0; i < 7; i++) {

15 
	`emô_löe
("%†0;", 
ªg_«mes
[
i
]);

17 
	`emô_löe
("$running =Årue;");

18 
	`emô_löe
("$mem =árray();");

20 
	`emô_löe
("ini_set(\"memory_limit\", \"768M\");");

21 
	`emô_löe
("// for ($_ = 0; $_ < (1 << 24); $_++) $mem[$_] =Çull; unset($_);");

23 
	`emô_löe
("$stdin = fopen('php://stdin', 'r');");

24 
mp
 = 0; 
d©a
; d©®d©a->
√xt
, mp++) {

25 i‡(
d©a
->
v
) {

26 
	`emô_löe
("$mem[%d] = %d;", 
mp
, 
d©a
->
v
);

29 
	`emô_löe
("goto main;");

30 
	}
}

32 
	$php_emô_func_¥ﬁogue
(
func_id
) {

33 
	`emô_löe
("");

34 
	`emô_löe
("¥oc%d:", 
func_id
);

35 
	`öc_ödít
();

36 
	`emô_löe
("while (%d <= $pc && $pc < %d && $running) {",

37 
func_id
 * 
CHUNKED_FUNC_SIZE
, (func_id + 1) * CHUNKED_FUNC_SIZE);

38 
	`öc_ödít
();

39 
	`emô_löe
("switch ($pc) {");

40 
	`emô_löe
("case -1: // dummy");

41 
	`öc_ödít
();

42 
	}
}

44 
	$php_emô_func_ïûogue
() {

45 
	`dec_ödít
();

46 
	`emô_löe
("}");

47 
	`emô_löe
("$pc++;");

48 
	`dec_ödít
();

49 
	`emô_löe
("}");

50 
	`dec_ödít
();

51 
	`emô_löe
("goto main;");

52 
	}
}

54 
	$php_emô_pc_ch™ge
(
pc
) {

55 
	`emô_löe
("break;");

56 
	`emô_löe
("");

57 
	`dec_ödít
();

58 
	`emô_löe
("ˇ£ %d:", 
pc
);

59 
	`öc_ödít
();

60 
	}
}

62 
	$php_emô_ö°
(
In°
* 
ö°
) {

63 
ö°
->
›
) {

64 
MOV
:

65 
	`emô_löe
("%†%s;", 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
	`§c_°r
(inst));

68 
ADD
:

69 
	`emô_löe
("%†(%†+ %sË& " 
UINT_MAX_STR
 ";",

70 
ªg_«mes
[
ö°
->
d°
.
ªg
],

71 
ªg_«mes
[
ö°
->
d°
.
ªg
],

72 
	`§c_°r
(
ö°
));

75 
SUB
:

76 
	`emô_löe
("%†(%†- %sË& " 
UINT_MAX_STR
 ";",

77 
ªg_«mes
[
ö°
->
d°
.
ªg
],

78 
ªg_«mes
[
ö°
->
d°
.
ªg
],

79 
	`§c_°r
(
ö°
));

82 
LOAD
:

83 
	`emô_löe
("%s = @$mem[%s] ?: 0; // @undefined indexás 0",

84 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
	`§c_°r
(inst));

87 
STORE
:

88 
	`emô_löe
("$mem[%s] = %s;", 
	`§c_°r
(
ö°
), 
ªg_«mes
[ö°->
d°
.
ªg
]);

91 
PUTC
:

92 
	`emô_löe
("¥ötf(\"%%c\", %s);", 
	`§c_°r
(
ö°
));

95 
GETC
:

96 
	`emô_löe
("%s = ord(fgetc($stdin));",

97 
ªg_«mes
[
ö°
->
d°
.
ªg
]);

100 
EXIT
:

101 
	`emô_löe
("$running = false; break;");

104 
DUMP
:

107 
EQ
:

108 
NE
:

109 
LT
:

110 
GT
:

111 
LE
:

112 
GE
:

113 
	`emô_löe
("%s = (%s) | 0;",

114 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
	`cmp_°r
(inst, "true"));

117 
JEQ
:

118 
JNE
:

119 
JLT
:

120 
JGT
:

121 
JLE
:

122 
JGE
:

123 
JMP
:

124 
	`emô_löe
("if (%s) $pc = %s - 1;",

125 
	`cmp_°r
(
ö°
, "åue"), 
	`vÆue_°r
(&ö°->
jmp
));

129 
	`îr‹
("oops");

131 
	}
}

133 
	$èrgë_php
(
ModuÀ
* 
moduÀ
) {

134 
	`öô_°©e_php
(
moduÀ
->
d©a
);

136 
num_funcs
 = 
	`emô_chunked_maö_lo›
(
moduÀ
->
ãxt
,

137 
php_emô_func_¥ﬁogue
,

138 
php_emô_func_ïûogue
,

139 
php_emô_pc_ch™ge
,

140 
php_emô_ö°
);

142 
	`emô_löe
("");

143 
	`emô_löe
("main:");

144 
	`emô_löe
("while ($running) {");

145 
	`öc_ödít
();

146 
	`emô_löe
("swôch ($p¯/ %d | 0Ë{", 
CHUNKED_FUNC_SIZE
);

147 
i
 = 0; i < 
num_funcs
; i++) {

148 
	`emô_löe
("ˇ£ %d:", 
i
);

149 
	`emô_löe
(" gŸÿ¥oc%d;", 
i
);

150 
	`emô_löe
(" break;");

152 
	`emô_löe
("}");

153 
	`dec_ödít
();

154 
	`emô_löe
("}");

155 
	`dec_ödít
();

156 
	`emô_löe
("});");

157 
	}
}

	@target/piet.c

1 
	~<as£π.h
>

2 
	~<°dboﬁ.h
>

3 
	~<°dlib.h
>

5 
	~<ú/ú.h
>

6 
	~<èrgë/utû.h
>

8 
	#PIET_IMM_BASE
 6

	)

9 
	#PIET_INIT_STACK_SIZE
 65545

	)

10 
	#PIET_DUMP_INST
 0

	)

13 
	mPIET_PUSH
,

14 
	mPIET_POP
,

15 
	mPIET_ADD
,

16 
	mPIET_SUB
,

17 
	mPIET_MUL
,

18 
	mPIET_DIV
,

19 
	mPIET_MOD
,

20 
	mPIET_NOT
,

21 
	mPIET_GT
,

22 
	mPIET_PTR
,

23 
	mPIET_SWITCH
,

24 
	mPIET_DUP
,

25 
	mPIET_ROLL
,

26 
	mPIET_INN
,

27 
	mPIET_IN
,

28 
	mPIET_OUTN
,

29 
	mPIET_OUT
,

31 
	mPIET_JMP
,

32 
	mPIET_EXIT


33 } 
	gPõtOp
;

35 
byã
 
	gPIET_COLOR_TABLE
[20][3] = {

64 
	sPõtIn°
 {

65 
uöt
 
	m›
;

66 
uöt
 
	m¨g
;

67 
PõtIn°
* 
	m√xt
;

68 } 
	tPõtIn°
;

70 
	sPõtBlock
 {

71 
PõtIn°
* 
	mö°
;

72 
PõtBlock
* 
	m√xt
;

73 } 
	tPõtBlock
;

75 #i‡
PIET_DUMP_INST


76 
	$dump_põt_ö°
(
PõtIn°
* 
pi
) {

77 c⁄° * 
PIET_INST_NAMES
[] = {

99 
	`Ârötf
(
°dîr
, "%s", 
PIET_INST_NAMES
[
pi
->
›
]);

100 i‡(
pi
->
›
 =
PIET_PUSH
) {

101 
	`Ârötf
(
°dîr
, " %d", 
pi
->
¨g
);

103 
	`Ârötf
(
°dîr
, "\n");

104 
	}
}

107 
	$põt_emô_a
(
PõtIn°
** 
pi
, 
uöt
 
›
, uöà
¨g
) {

108 (*
pi
)->
√xt
 = 
	`ˇŒoc
(1, (
PõtIn°
));

109 *
pi
 = (*pi)->
√xt
;

110 (*
pi
)->
›
 = op;

111 (*
pi
)->
¨g
 =árg;

112 
	}
}

114 
	$põt_emô
(
PõtIn°
** 
pi
, 
uöt
 
›
) {

115 
	`põt_emô_a
(
pi
, 
›
, 0);

116 
	}
}

118 
	$põt_push_digô
(
PõtIn°
** 
pi
, 
uöt
 
v
) {

119 
	`as£π
(
v
 > 0);

120 
	`põt_emô_a
(
pi
, 
PIET_PUSH
, 
v
);

121 
	}
}

123 
	$põt_push
(
PõtIn°
** 
pi
, 
uöt
 
v
) {

124 i‡(
v
 == 0) {

125 
	`põt_push_digô
(
pi
, 1);

126 
	`põt_emô
(
pi
, 
PIET_NOT
);

130 
uöt
 
c
[16];

131 
uöt
 
cs
 = 0;

133 
c
[
cs
++] = 
v
 % 
PIET_IMM_BASE
;

134 
v
 /
PIET_IMM_BASE
;

135 } 
v
);

137 
uöt
 
i
 = 0; i < 
cs
; i++) {

138 i‡(
i
 != 0) {

139 
	`põt_push_digô
(
pi
, 
PIET_IMM_BASE
);

140 
	`põt_emô
(
pi
, 
PIET_MUL
);

142 
v
 = 
c
[
cs
 - 
i
 - 1];

143 i‡(
v
) {

144 
	`põt_push_digô
(
pi
, 
v
);

145 i‡(
i
 != 0)

146 
	`põt_emô
(
pi
, 
PIET_ADD
);

149 
	}
}

151 
	$põt_push_möus1
(
PõtIn°
** 
pi
) {

152 
	`põt_push
(
pi
, 0);

153 
	`põt_push
(
pi
, 1);

154 
	`põt_emô
(
pi
, 
PIET_SUB
);

155 
	}
}

158 
	mPIET_A
 = 1,

159 
	mPIET_B
,

160 
	mPIET_C
,

161 
	mPIET_D
,

162 
	mPIET_BP
,

163 
	mPIET_SP
,

164 
	mPIET_MEM


167 
	$põt_rﬁl
(
PõtIn°
** 
pi
, 
uöt
 
dïth
, uöà
cou¡
) {

168 
	`põt_push
(
pi
, 
dïth
);

169 
	`põt_push
(
pi
, 
cou¡
);

170 
	`põt_emô
(
pi
, 
PIET_ROLL
);

171 
	}
}

173 
	$põt_ºﬁl
(
PõtIn°
** 
pi
, 
uöt
 
dïth
, uöà
cou¡
) {

174 
	`põt_push
(
pi
, 
dïth
);

175 
	`põt_push
(
pi
, 1);

176 
	`põt_push
(
pi
, 
cou¡
 + 1);

177 
	`põt_emô
(
pi
, 
PIET_SUB
);

178 
	`põt_emô
(
pi
, 
PIET_ROLL
);

179 
	}
}

181 
	$põt_lﬂd
(
PõtIn°
** 
pi
, 
uöt
 
pos
) {

182 
	`põt_ºﬁl
(
pi
, 
pos
 + 1, 1);

183 
	`põt_emô
(
pi
, 
PIET_DUP
);

184 
	`põt_rﬁl
(
pi
, 
pos
 + 2, 1);

185 
	}
}

187 
	$põt_°‹e_t›
(
PõtIn°
** 
pi
, 
uöt
 
pos
) {

188 
	`põt_ºﬁl
(
pi
, 
pos
 + 2, 1);

189 
	`põt_emô
(
pi
, 
PIET_POP
);

190 
	`põt_rﬁl
(
pi
, 
pos
 + 1, 1);

191 
	}
}

193 
	$põt_push_vÆue
(
PõtIn°
** 
pi
, 
VÆue
* 
v
, 
uöt
 
°k
) {

194 i‡(
v
->
ty≥
 =
REG
) {

195 
	`põt_lﬂd
(
pi
, 
PIET_A
 + 
v
->
ªg
 + 
°k
);

196 } i‡(
v
->
ty≥
 =
IMM
) {

197 
	`põt_push
(
pi
, 
v
->
imm
 % 65536);

199 
	`îr‹
("invalid value");

201 
	}
}

203 
	$põt_push_d°
(
PõtIn°
** 
pi
, 
In°
* 
ö°
, 
uöt
 
°k
) {

204 
	`põt_push_vÆue
(
pi
, &
ö°
->
d°
, 
°k
);

205 
	}
}

207 
	$põt_push_§c
(
PõtIn°
** 
pi
, 
In°
* 
ö°
, 
uöt
 
°k
) {

208 
	`põt_push_vÆue
(
pi
, &
ö°
->
§c
, 
°k
);

209 
	}
}

211 
	$põt_uöt_mod
(
PõtIn°
** 
pi
) {

213 
	`põt_push
(
pi
, 65536);

214 
	`põt_emô
(
pi
, 
PIET_MOD
);

215 
	}
}

217 
	$põt_cmp
(
PõtIn°
** 
pi
, 
In°
* 
ö°
, 
°k
) {

218 
Op
 
›
 = 
	`n‹mÆize_c⁄d
(
ö°
->›, 
Ál£
);

219 i‡(
›
 =
JLT
) {

220 
›
 = 
JGT
;

221 
	`põt_push_§c
(
pi
, 
ö°
, 
°k
);

222 
	`põt_push_d°
(
pi
, 
ö°
, 
°k
 + 1);

223 } i‡(
›
 =
JGE
) {

224 
›
 = 
JLE
;

225 
	`põt_push_§c
(
pi
, 
ö°
, 
°k
);

226 
	`põt_push_d°
(
pi
, 
ö°
, 
°k
 + 1);

228 
	`põt_push_d°
(
pi
, 
ö°
, 
°k
);

229 
	`põt_push_§c
(
pi
, 
ö°
, 
°k
 + 1);

231 
›
) {

232 
JEQ
:

233 
	`põt_emô
(
pi
, 
PIET_SUB
);

234 
	`põt_emô
(
pi
, 
PIET_NOT
);

236 
JNE
:

237 
	`põt_emô
(
pi
, 
PIET_SUB
);

238 
	`põt_emô
(
pi
, 
PIET_NOT
);

239 
	`põt_emô
(
pi
, 
PIET_NOT
);

241 
JGT
:

242 
	`põt_emô
(
pi
, 
PIET_GT
);

244 
JLE
:

245 
	`põt_emô
(
pi
, 
PIET_GT
);

246 
	`põt_emô
(
pi
, 
PIET_NOT
);

249 
	`îr‹
("cmp");

251 
	}
}

253 
	$põt_emô_ö°
(
PõtIn°
** 
pi
, 
In°
* 
ö°
) {

254 
ö°
->
›
) {

255 
MOV
:

256 
	`põt_push_§c
(
pi
, 
ö°
, 0);

257 
	`põt_°‹e_t›
(
pi
, 
PIET_A
 + 
ö°
->
d°
.
ªg
);

260 
ADD
:

261 
	`põt_push_d°
(
pi
, 
ö°
, 0);

262 
	`põt_push_§c
(
pi
, 
ö°
, 1);

263 
	`põt_emô
(
pi
, 
PIET_ADD
);

264 
	`põt_uöt_mod
(
pi
);

265 
	`põt_°‹e_t›
(
pi
, 
PIET_A
 + 
ö°
->
d°
.
ªg
);

268 
SUB
:

269 
	`põt_push_d°
(
pi
, 
ö°
, 0);

270 
	`põt_push_§c
(
pi
, 
ö°
, 1);

271 
	`põt_emô
(
pi
, 
PIET_SUB
);

272 
	`põt_push
(
pi
, 65536);

273 
	`põt_emô
(
pi
, 
PIET_ADD
);

274 
	`põt_uöt_mod
(
pi
);

275 
	`põt_°‹e_t›
(
pi
, 
PIET_A
 + 
ö°
->
d°
.
ªg
);

278 
LOAD
:

279 
	`põt_push_§c
(
pi
, 
ö°
, 0);

280 
	`põt_emô
(
pi
, 
PIET_DUP
);

282 
	`põt_push
(
pi
, 
PIET_INIT_STACK_SIZE
);

283 
	`põt_push
(
pi
, 1);

284 
	`põt_emô
(
pi
, 
PIET_ROLL
);

286 
	`põt_push
(
pi
, 
PIET_MEM
 + 1);

287 
	`põt_emô
(
pi
, 
PIET_ADD
);

288 
	`põt_push_möus1
(
pi
);

289 
	`põt_emô
(
pi
, 
PIET_ROLL
);

290 
	`põt_emô
(
pi
, 
PIET_DUP
);

293 
	`põt_push
(
pi
, 
PIET_INIT_STACK_SIZE
);

294 
	`põt_push_möus1
(
pi
);

295 
	`põt_emô
(
pi
, 
PIET_ROLL
);

297 
	`põt_push
(
pi
, 
PIET_MEM
 + 2);

298 
	`põt_emô
(
pi
, 
PIET_ADD
);

299 
	`põt_push
(
pi
, 1);

300 
	`põt_emô
(
pi
, 
PIET_ROLL
);

302 
	`põt_°‹e_t›
(
pi
, 
PIET_A
 + 
ö°
->
d°
.
ªg
);

305 
STORE
:

306 
	`põt_push_d°
(
pi
, 
ö°
, 0);

307 
	`põt_push_§c
(
pi
, 
ö°
, 1);

308 
	`põt_emô
(
pi
, 
PIET_DUP
);

310 
	`põt_push
(
pi
, 
PIET_MEM
 + 3);

311 
	`põt_emô
(
pi
, 
PIET_ADD
);

312 
	`põt_push_möus1
(
pi
);

313 
	`põt_emô
(
pi
, 
PIET_ROLL
);

314 
	`põt_emô
(
pi
, 
PIET_POP
);

316 
	`põt_push
(
pi
, 
PIET_MEM
 + 1);

317 
	`põt_emô
(
pi
, 
PIET_ADD
);

318 
	`põt_push
(
pi
, 1);

319 
	`põt_emô
(
pi
, 
PIET_ROLL
);

322 
PUTC
:

323 
	`põt_push_§c
(
pi
, 
ö°
, 0);

324 
	`põt_emô
(
pi
, 
PIET_OUT
);

327 
GETC
: {

330 
	`põt_push
(
pi
, 256);

332 
	`põt_emô
(
pi
, 
PIET_IN
);

334 
	`põt_emô
(
pi
, 
PIET_DUP
);

335 
	`põt_push
(
pi
, 256);

336 
	`põt_emô
(
pi
, 
PIET_SUB
);

338 
uöt
 
zîo_id
 = 
	`põt_gí_œbñ
();

339 
uöt
 
d⁄e_id
 = 
	`põt_gí_œbñ
();

341 
	`põt_bz
(
zîo_id
);

342 
	`põt_rﬁl
(
pi
, 2, 1);

343 
	`põt_emô
(
pi
, 
PIET_POP
);

344 
	`põt_br
(
d⁄e_id
);

346 
	`põt_œbñ
(
zîo_id
);

347 
	`põt_emô
(
pi
, 
PIET_POP
);

348 
	`põt_push
(
pi
, 0);

350 
	`põt_œbñ
(
d⁄e_id
);

352 
	`põt_°‹e_t›
(
pi
, 
PIET_A
 + 
ö°
->
d°
.
ªg
);

357 
EXIT
:

358 
	`põt_emô
(
pi
, 
PIET_EXIT
);

361 
DUMP
:

364 
EQ
:

365 
NE
:

366 
LT
:

367 
GT
:

368 
LE
:

369 
GE
:

370 
	`põt_cmp
(
pi
, 
ö°
, 0);

371 
	`põt_°‹e_t›
(
pi
, 
PIET_A
 + 
ö°
->
d°
.
ªg
);

374 
JEQ
:

375 
JNE
:

376 
JLT
:

377 
JGT
:

378 
JLE
:

379 
JGE
:

380 
	`põt_push
(
pi
, 
ö°
->
pc
 + 1);

381 
	`põt_push_vÆue
(
pi
, &
ö°
->
jmp
, 1);

382 
	`põt_push
(
pi
, 2);

383 
	`põt_cmp
(
pi
, 
ö°
, 3);

384 
	`põt_emô
(
pi
, 
PIET_ROLL
);

385 
	`põt_emô
(
pi
, 
PIET_POP
);

386 
	`põt_emô
(
pi
, 
PIET_JMP
);

389 
JMP
:

390 
	`põt_push_vÆue
(
pi
, &
ö°
->
jmp
, 0);

391 
	`põt_emô
(
pi
, 
PIET_JMP
);

395 
	`îr‹
("oops");

397 
	}
}

399 
uöt
 
	$põt_√xt_cﬁ‹
(
uöt
 
c
, uöà
›
) {

400 
›
++;

401 
uöt
 
l
 = (
c
 + 
›
) % 3;

402 
uöt
 
h
 = (
c
 / 3 + 
›
 / 3) % 6;

403  
l
 + 
h
 * 3;

404 
	}
}

406 
uöt
 
	$põt_öô_°©e
(
D©a
* 
d©a
, 
PõtIn°
* 
pi
) {

407 
uöt
 
vÆs
[
PIET_INIT_STACK_SIZE
];

408 
uöt
 
i
 = 0; i < 
PIET_INIT_STACK_SIZE
; i++) {

409 
uöt
 
v
 = 0;

410 i‡(
i
 >
PIET_MEM
 + 1 && 
d©a
) {

411 
v
 = 
d©a
->v % 65536;

412 
d©a
 = d©a->
√xt
;

414 
vÆs
[
PIET_INIT_STACK_SIZE
-
i
-1] = 
v
;

417 
PõtIn°
* 
›i
 = 
pi
;

418 
boﬁ
 
¥ev_zîo
 = 
Ál£
;

419 
uöt
 
i
 = 0; i < 
PIET_INIT_STACK_SIZE
; i++) {

420 
uöt
 
v
 = 
vÆs
[
i
];

421 i‡(
v
 =0 && 
¥ev_zîo
) {

422 
	`põt_emô
(&
pi
, 
PIET_DUP
);

424 
	`põt_push
(&
pi
, 
v
);

426 
¥ev_zîo
 = 
v
 == 0;

429 
uöt
 
size
 = 0;

430 
pi
 = 
›i
->
√xt
;Öi;Öi =Öi->next) {

431 i‡(
pi
->
›
 =
PIET_PUSH
) {

432 
size
 +
pi
->
¨g
;

434 
size
++;

437  
size
;

438 
	}
}

441 
	$èrgë_põt
(
ModuÀ
* 
moduÀ
) {

442 
PõtBlock
 
pb_hód
;

443 
PõtBlock
* 
pb
 = &
pb_hód
;

444 
PõtIn°
* 
pi
 = 0;

446 
¥ev_pc
 = -1;

447 
In°
* 
ö°
 = 
moduÀ
->
ãxt
; in°; in° = in°->
√xt
) {

448 i‡(
¥ev_pc
 !
ö°
->
pc
) {

449 i‡(
pi
 &&Öi->
›
 !
PIET_JMP
) {

450 
	`põt_push
(&
pi
, 
ö°
->
pc
);

453 
pb
->
√xt
 = 
	`ˇŒoc
(1, (
PõtBlock
));

454 
pb
 =Öb->
√xt
;

456 
pi
 = 
	`ˇŒoc
(1, (
PõtIn°
));

457 
pb
->
ö°
 = 
pi
;

459 
	`põt_emô
(&
pi
, 
PIET_POP
);

463 
	`põt_push
(&
pi
, 80); 
	`põt_emô
(&pi, 
PIET_OUT
);

464 
	`põt_push
(&
pi
, 67); 
	`põt_emô
(&pi, 
PIET_OUT
);

465 
	`põt_push
(&
pi
, 61); 
	`põt_emô
(&pi, 
PIET_OUT
);

466 
	`põt_push
(&
pi
, 
ö°
->
pc
); 
	`põt_emô
(&pi, 
PIET_OUTN
);

467 
	`põt_push
(&
pi
, 10); 
	`põt_emô
(&pi, 
PIET_OUT
);

470 
¥ev_pc
 = 
ö°
->
pc
;

471 
	`põt_emô_ö°
(&
pi
, 
ö°
);

474 
pc
 = 0;

475 
l⁄ge°_block
 = 0;

476 
pb
 = 
pb_hód
.
√xt
;Öb;Öb =Öb->next) {

477 
pc
++;

478 
block_Àn
 = 0;

479 
pi
 = 
pb
->
ö°
->
√xt
;Öi;Öi =Öi->next) {

480 
block_Àn
++;

482 i‡(
l⁄ge°_block
 < 
block_Àn
)

483 
l⁄ge°_block
 = 
block_Àn
;

486 #i‡
PIET_DUMP_INST


487 
pc
 = 0;

488 
pb
 = 
pb_hód
.
√xt
;Öb;Öb =Öb->next) {

489 
	`Ârötf
(
°dîr
, "\≈c=%d:\n", 
pc
++);

490 
pi
 = 
pb
->
ö°
->
√xt
;Öi;Öi =Öi->next) {

491 
	`Ârötf
(
°dîr
, " ");

492 
	`dump_põt_ö°
(
pi
);

497 
PõtIn°
 
öô_°©e
 = {};

498 
uöt
 
öô_°©e_size
 = 
	`põt_öô_°©e
(
moduÀ
->
d©a
, &
öô_°©e
);

500 
uöt
 
w
 = 
l⁄ge°_block
 + 20;

501 
uöt
 
h
 =

502 
pc
 * 7 + (
öô_°©e_size
 / (
w
 - 4 - 
PIET_IMM_BASE
 * 2) + 1) * 4 + 10;

503 
byã
* 
pixñs
 = 
	`ˇŒoc
(
w
 * 
h
, 1);

506 
	`Ârötf
(
°dîr
, "estimated init_state_size=%d w=%d h=%d\n",

507 
öô_°©e_size
, 
w
, 
h
);

510 
uöt
 
c
 = 0;

511 
uöt
 
y
 = 0;

512 
uöt
 
x
 = 0;

513 
dx
 = 1;

514 
pixñs
[
y
*
w
+
x
++] = 2;

515 
pi
 = 
öô_°©e
.
√xt
;Öi;Öi =Öi->next) {

516 
	`as£π
(
y
 < 
h
);

517 
c
 = 
	`põt_√xt_cﬁ‹
(c, 
pi
->
›
);

519 i‡(
pi
->
√xt
 &&Öi->√xt->
›
 =
PIET_PUSH
) {

520 
uöt
 
i
 = 0; i < 
pi
->
√xt
->
¨g
; i++) {

521 
pixñs
[
y
*
w
+
x
] = 
c
 + 2;

522 
x
 +
dx
;

525 
pixñs
[
y
*
w
+
x
] = 
c
 + 2;

526 
x
 +
dx
;

529 i‡(
x
 >
w
 - 
PIET_IMM_BASE
 && 
dx
 == 1) {

530 
pixñs
[(
y
+1)*
w
+
x
-1] = 
c
 + 2;

531 
pixñs
[(
y
+2)*
w
+
x
-1] = 
c
 + 2;

532 
pixñs
[(
y
+3)*
w
+
x
-1] = 
c
 + 2;

533 
x
 = x-1;

534 
y
 += 4;

535 
dx
 = -1;

538 i‡((
x
 <1 + 
PIET_IMM_BASE
 || !
pi
->
√xt
Ë&& 
dx
 == -1) {

539 
x
 >
w
 - 2) {

540 
pixñs
[(
y
+0)*
w
+
x
+0] = 1;

541 
x
--;

543 
pixñs
[(
y
+0)*
w
+
x
+0] = 1;

544 
pixñs
[(
y
+0)*
w
+
x
-1] = 1;

545 
pixñs
[(
y
-1)*
w
+
x
-1] = 1;

546 
pixñs
[(
y
-1)*
w
+
x
+0] = 1;

547 
pixñs
[(
y
+1)*
w
+
x
+0] = 1;

548 
pixñs
[(
y
+2)*
w
+
x
+0] = 1;

549 
pixñs
[(
y
+3)*
w
+
x
+0] = 1;

550 
pixñs
[(
y
+3)*
w
+
x
-1] = 1;

551 
pixñs
[(
y
+2)*
w
+
x
-1] = 1;

552 
pixñs
[(
y
+2)*
w
+
x
+1] = 2;

553 
c
 = 0;

554 
x
 += 2;

555 
y
 += 2;

556 
dx
 = 1;

560 ; 
x
 < 
w
; x++) {

561 
pixñs
[
y
*
w
+
x
] = 1;

564 
pixñs
[(
y
+1)*
w
+w-1] = 1;

565 
pixñs
[(
y
+2)*
w
+w-1] = 1;

567 
y
 += 3;

569 
c
 = 0;

570 
byã
 
BORDER_TABLE
[7];

571 
BORDER_TABLE
[0] = 1;

572 
BORDER_TABLE
[1] = 2;

573 
c
 = 
	`põt_√xt_cﬁ‹
(c, 
PIET_PUSH
);

574 
BORDER_TABLE
[2] = 
c
 + 2;

575 
c
 = 
	`põt_√xt_cﬁ‹
(c, 
PIET_SUB
);

576 
BORDER_TABLE
[3] = 
c
 + 2;

577 
c
 = 
	`põt_√xt_cﬁ‹
(c, 
PIET_DUP
);

578 
BORDER_TABLE
[4] = 
c
 + 2;

579 
c
 = 
	`põt_√xt_cﬁ‹
(c, 
PIET_NOT
);

580 
BORDER_TABLE
[5] = 
c
 + 2;

581 
c
 = 
	`põt_√xt_cﬁ‹
(c, 
PIET_PTR
);

582 
BORDER_TABLE
[6] = 
c
 + 2;

584 
uöt
 
i
 = 0; i < 3; i++) {

585 
pixñs
[(
y
+
i
)*
w
+w-1] = 1;

588 
uöt
 
x
 = 0; x < 
w
; x++) {

589 
pixñs
[(
y
+3)*
w
+
x
] = 1;

592 
uöt
 
i
 = 3; i < 
h
 - 
y
; i++) {

593 
pixñs
[(
y
+
i
)*
w
] = 1;

594 
pixñs
[(
y
+
i
)*
w
+w-1] = 
BORDER_TABLE
[i%7];

597 
y
 += 6;

599 
pb
 = 
pb_hód
.
√xt
;Öb;Öb =Öb->√xt, 
y
 += 7) {

600 
	`as£π
(
y
 < 
h
);

601 
pixñs
[
y
*
w
+w-2] = 1;

602 
pixñs
[
y
*
w
+w-3] = 2;

603 
uöt
 
x
 = 
w
 - 3;

604 
c
 = 0;

605 
boﬁ
 
gŸo_√xt
 = 
åue
;

606 
pi
 = 
pb
->
ö°
->
√xt
;Öi;Öòpi->√xt, 
x
--) {

607 
	`as£π
(
x
 < 
w
);

608 i‡(
pi
->
›
 =
PIET_PUSH
) {

609 
	`as£π
(
pi
->
¨g
);

610 
uöt
 
i
 = 0; i < 
pi
->
¨g
; i++) {

611 
pixñs
[(
y
+
i
)*
w
+
x
] = 
c
 + 2;

613 } i‡(
pi
->
›
 =
PIET_JMP
) {

615 } i‡(
pi
->
›
 =
PIET_EXIT
) {

616 
pixñs
[(
y
+1)*
w
+
x
] =Öixels[(y+0)*w+x];

617 
pixñs
[(
y
+1)*
w
+
x
-1] = 1;

618 
pixñs
[(
y
+0)*
w
+
x
-2] = 3;

619 
pixñs
[(
y
+1)*
w
+
x
-2] = 3;

620 
pixñs
[(
y
+2)*
w
+
x
-2] = 3;

621 
gŸo_√xt
 = 
Ál£
;

625 i‡(!
gŸo_√xt
)

628 
c
 = 
	`põt_√xt_cﬁ‹
(c, 
pi
->
›
);

629 
pixñs
[
y
*
w
+
x
-1] = 
c
 + 2;

632 i‡(
gŸo_√xt
) {

633 
x
--; x > 0; x--) {

634 
pixñs
[
y
*
w
+
x
] = 1;

639 
h
 = 
y
 + 10;

641 
	`¥ötf
("P6\n");

642 
	`¥ötf
("#\n");

643 
	`¥ötf
("%d %d\n", 
w
, 
h
);

644 
	`¥ötf
("255\n");

646 
uöt
 
y
 = 0; y < 
h
; y++) {

647 
uöt
 
x
 = 0; x < 
w
; x++) {

648 
byã
* 
c
 = 
PIET_COLOR_TABLE
[
pixñs
[
y
*
w
+
x
]];

649 
	`putch¨
(
c
[0]);

650 
	`putch¨
(
c
[1]);

651 
	`putch¨
(
c
[2]);

654 
	}
}

	@target/pietasm.c

1 
	~<ú/ú.h
>

2 
	~<èrgë/utû.h
>

5 
	mPIETASM_A
 = 1,

6 
	mPIETASM_B
,

7 
	mPIETASM_C
,

8 
	mPIETASM_D
,

9 
	mPIETASM_BP
,

10 
	mPIETASM_SP
,

11 
	mPIETASM_MEM


14 
uöt
 
	gg_põèsm_œbñ_id
;

15 
uöt
 
	$põèsm_gí_œbñ
() {

16  ++
g_põèsm_œbñ_id
;

17 
	}
}

19 
	$põèsm_œbñ
(
uöt
 
id
) {

20 
	`emô_löe
("_åack_%u:", 
id
);

21 
	}
}

23 
	$põèsm_push
(
v
) {

24 
	`emô_löe
("%d", 
v
);

25 
	}
}

27 
	$põèsm_p›
() {

28 
	`emô_löe
("pop");

29 
	}
}

31 
	$põèsm_dup
() {

32 
	`emô_löe
("dup");

33 
	}
}

35 
	$põèsm_br
(
uöt
 
id
) {

36 
	`emô_löe
("br._åack_%u", 
id
);

37 
	}
}

39 
	$põèsm_bz
(
uöt
 
id
) {

40 
	`emô_löe
("bz._åack_%u", 
id
);

41 
	}
}

43 
	$põèsm_rﬁl
(
uöt
 
dïth
, uöà
cou¡
) {

44 
	`emô_löe
("%d %dÑﬁl", 
dïth
, 
cou¡
);

45 
	}
}

47 
	$põèsm_ºﬁl
(
uöt
 
dïth
, uöà
cou¡
) {

48 
	`emô_löe
("%d -%dÑﬁl", 
dïth
, 
cou¡
);

49 
	}
}

51 
	$põèsm_lﬂd
(
uöt
 
pos
) {

52 
	`põèsm_ºﬁl
(
pos
 + 1, 1);

53 
	`põèsm_dup
();

54 
	`põèsm_rﬁl
(
pos
 + 2, 1);

55 
	}
}

57 
	$põèsm_°‹e_t›
(
uöt
 
pos
) {

58 
	`põèsm_ºﬁl
(
pos
 + 2, 1);

59 
	`põèsm_p›
();

60 
	`põèsm_rﬁl
(
pos
 + 1, 1);

61 
	}
}

63 
	$põèsm_°‹e
(
uöt
 
pos
, uöà
vÆ
) {

64 
	`põèsm_push
(
vÆ
);

65 
	`põèsm_°‹e_t›
(
pos
);

66 
	}
}

68 
	$põèsm_öô_°©e
(
D©a
* 
d©a
) {

70 
	`emô_löe
("65543");

71 
uöt
 
lo›_id
 = 
	`põèsm_gí_œbñ
();

72 
uöt
 
d⁄e_id
 = 
	`põèsm_gí_œbñ
();

73 
	`põèsm_œbñ
(
lo›_id
);

74 
	`emô_löe
("1 sub");

75 
	`emô_löe
("dup");

76 
	`põèsm_bz
(
d⁄e_id
);

77 
	`emô_löe
("0");

78 
	`põèsm_rﬁl
(2, 1);

79 
	`põèsm_br
(
lo›_id
);

80 
	`põèsm_œbñ
(
d⁄e_id
);

81 
	`emô_löe
("");

83 
mp
 = 0; 
d©a
; d©®d©a->
√xt
, mp++) {

84 i‡(
d©a
->
v
) {

85 
	`põèsm_°‹e
(
PIETASM_MEM
 + 
mp
, 
d©a
->
v
 % 65536);

88 
	}
}

90 
	$põèsm_push_vÆue
(
VÆue
* 
v
, 
uöt
 
°k
) {

91 i‡(
v
->
ty≥
 =
REG
) {

92 
	`põèsm_lﬂd
(
PIETASM_A
 + 
v
->
ªg
 + 
°k
);

93 } i‡(
v
->
ty≥
 =
IMM
) {

94 
	`põèsm_push
(
v
->
imm
 % 65536);

96 
	`îr‹
("invalid value");

98 
	}
}

100 
	$põèsm_push_d°
(
In°
* 
ö°
, 
uöt
 
°k
) {

101 
	`põèsm_push_vÆue
(&
ö°
->
d°
, 
°k
);

102 
	}
}

104 
	$põèsm_push_§c
(
In°
* 
ö°
, 
uöt
 
°k
) {

105 
	`põèsm_push_vÆue
(&
ö°
->
§c
, 
°k
);

106 
	}
}

108 
	$põèsm_uöt_mod
() {

110 
	`emô_löe
("65536 mod");

111 
	}
}

113 
	$põèsm_cmp
(
In°
* 
ö°
, 
boﬁ
 
is_jmp
) {

114 
Op
 
›
 = 
	`n‹mÆize_c⁄d
(
ö°
->›, 
is_jmp
);

115 i‡(
›
 =
JLT
) {

116 
›
 = 
JGT
;

117 
	`põèsm_push_§c
(
ö°
, 0);

118 
	`põèsm_push_d°
(
ö°
, 1);

119 } i‡(
›
 =
JGE
) {

120 
›
 = 
JLE
;

121 
	`põèsm_push_§c
(
ö°
, 0);

122 
	`põèsm_push_d°
(
ö°
, 1);

124 
	`põèsm_push_d°
(
ö°
, 0);

125 
	`põèsm_push_§c
(
ö°
, 1);

127 
›
) {

128 
JEQ
:

129 
	`emô_löe
("sub");

130 
	`emô_löe
("not");

132 
JNE
:

133 
	`emô_löe
("sub");

134 i‡(!
is_jmp
) {

135 
	`emô_löe
("not");

136 
	`emô_löe
("not");

139 
JGT
:

140 
	`emô_löe
("gt");

142 
JLE
:

143 
	`emô_löe
("gt");

144 
	`emô_löe
("not");

147 
	`îr‹
("cmp");

149 
	}
}

151 
	$põèsm_ªg_jmp_èbÀ
(
mö_pc
, 
max_pc
, 
œ°_œbñ
) {

152 i‡(
mö_pc
 + 1 =
max_pc
) {

153 
	`põèsm_p›
();

154 
	`põèsm_br
(
mö_pc
);

158 
mid_pc
 = (
mö_pc
 + 
max_pc
) / 2;

159 
	`põèsm_dup
();

160 
	`põèsm_push
(
mid_pc
-1);

161 
	`emô_löe
("gt");

162 
	`põèsm_bz
(
œ°_œbñ
 + 
mid_pc
);

163 
	`põèsm_ªg_jmp_èbÀ
(
mid_pc
, 
max_pc
, 
œ°_œbñ
);

164 
	`põèsm_œbñ
(
œ°_œbñ
 + 
mid_pc
);

165 
	`põèsm_ªg_jmp_èbÀ
(
mö_pc
, 
mid_pc
, 
œ°_œbñ
);

166 
	}
}

168 
	$põèsm_emô_ö°
(
In°
* 
ö°
, 
ªg_jmp
) {

169 
	`emô_löe
("");

170 
ö°
->
›
) {

171 
MOV
:

172 
	`põèsm_push_§c
(
ö°
, 0);

173 
	`põèsm_°‹e_t›
(
PIETASM_A
 + 
ö°
->
d°
.
ªg
);

176 
ADD
:

177 
	`põèsm_push_d°
(
ö°
, 0);

178 
	`põèsm_push_§c
(
ö°
, 1);

179 
	`emô_löe
("add");

180 
	`põèsm_uöt_mod
();

181 
	`põèsm_°‹e_t›
(
PIETASM_A
 + 
ö°
->
d°
.
ªg
);

184 
SUB
:

185 
	`põèsm_push_d°
(
ö°
, 0);

186 
	`põèsm_push_§c
(
ö°
, 1);

187 
	`emô_löe
("sub");

188 
	`põèsm_uöt_mod
();

189 
	`põèsm_°‹e_t›
(
PIETASM_A
 + 
ö°
->
d°
.
ªg
);

192 
LOAD
:

193 
	`põèsm_push_§c
(
ö°
, 0);

194 
	`põèsm_dup
();

196 
	`emô_löe
("65544 1Ñoll");

198 
	`põèsm_push
(
PIETASM_MEM
 + 1);

199 
	`emô_löe
("add");

200 
	`emô_löe
("-1Ñoll");

201 
	`põèsm_dup
();

204 
	`emô_löe
("65544 -1Ñoll");

205 
	`põèsm_push
(
PIETASM_MEM
 + 2);

206 
	`emô_löe
("add");

207 
	`emô_löe
("1Ñoll");

209 
	`põèsm_°‹e_t›
(
PIETASM_A
 + 
ö°
->
d°
.
ªg
);

212 
STORE
:

213 
	`põèsm_push_d°
(
ö°
, 0);

214 
	`põèsm_push_§c
(
ö°
, 1);

215 
	`põèsm_dup
();

217 
	`põèsm_push
(
PIETASM_MEM
 + 3);

218 
	`emô_löe
("add");

219 
	`emô_löe
("-1Ñoll");

220 
	`põèsm_p›
();

222 
	`põèsm_push
(
PIETASM_MEM
 + 1);

223 
	`emô_löe
("add");

224 
	`emô_löe
("1Ñoll");

227 
PUTC
:

228 
	`põèsm_push_§c
(
ö°
, 0);

229 
	`emô_löe
("out");

232 
GETC
: {

233 
	`põèsm_push
(256);

234 
	`emô_löe
("in");

235 
	`põèsm_dup
();

236 
	`põèsm_push
(256);

237 
	`emô_löe
("sub");

239 
uöt
 
zîo_id
 = 
	`põèsm_gí_œbñ
();

240 
uöt
 
d⁄e_id
 = 
	`põèsm_gí_œbñ
();

242 
	`põèsm_bz
(
zîo_id
);

243 
	`põèsm_rﬁl
(2, 1);

244 
	`põèsm_p›
();

245 
	`põèsm_br
(
d⁄e_id
);

247 
	`põèsm_œbñ
(
zîo_id
);

248 
	`põèsm_p›
();

249 
	`põèsm_push
(0);

251 
	`põèsm_œbñ
(
d⁄e_id
);

252 
	`põèsm_°‹e_t›
(
PIETASM_A
 + 
ö°
->
d°
.
ªg
);

257 
EXIT
:

258 
	`emô_löe
("halt");

261 
DUMP
:

264 
EQ
:

265 
NE
:

266 
LT
:

267 
GT
:

268 
LE
:

269 
GE
:

270 
	`põèsm_cmp
(
ö°
, 
Ál£
);

271 
	`põèsm_°‹e_t›
(
PIETASM_A
 + 
ö°
->
d°
.
ªg
);

274 
JEQ
:

275 
JNE
:

276 
JLT
:

277 
JGT
:

278 
JLE
:

279 
JGE
:

280 
	`põèsm_cmp
(
ö°
, 
åue
);

281 i‡(
ö°
->
jmp
.
ty≥
 =
REG
) {

282 
	`îr‹
("jccÑeg");

284 
	`põèsm_bz
(
ö°
->
jmp
.
imm
);

288 
JMP
:

289 i‡(
ö°
->
jmp
.
ty≥
 =
REG
) {

290 
	`põèsm_push_vÆue
(&
ö°
->
jmp
, 0);

291 
	`põèsm_br
(
ªg_jmp
);

293 
	`põèsm_br
(
ö°
->
jmp
.
imm
);

298 
	`îr‹
("oops");

300 
	}
}

302 
	$èrgë_põèsm
(
ModuÀ
* 
moduÀ
) {

303 
In°
* 
ö°
 = 
moduÀ
->
ãxt
; in°; in° = in°->
√xt
) {

304 
g_põèsm_œbñ_id
 = 
ö°
->
pc
;

307 
ªg_jmp
 = 
	`põèsm_gí_œbñ
();

308 
	`põèsm_öô_°©e
(
moduÀ
->
d©a
);

310 
¥ev_pc
 = -1;

311 
In°
* 
ö°
 = 
moduÀ
->
ãxt
; in°; in° = in°->
√xt
) {

312 i‡(
¥ev_pc
 !
ö°
->
pc
) {

313 
	`põèsm_œbñ
(
ö°
->
pc
);

315 
¥ev_pc
 = 
ö°
->
pc
;

317 
	`põèsm_emô_ö°
(
ö°
, 
ªg_jmp
);

320 
	`põèsm_œbñ
(
ªg_jmp
);

321 
	`põèsm_ªg_jmp_èbÀ
(0, 
ªg_jmp
, 
	`põèsm_gí_œbñ
());

322 
	}
}

	@target/pl.c

1 
	~<ú/ú.h
>

2 
	~<èrgë/utû.h
>

4 c⁄° * 
	gPL_REG_NAMES
[] = {

8 
	$öô_°©e_∂
(
D©a
* 
d©a
) {

9 
	`emô_löe
("#!/usr/bin/envÖerl");

10 
	`emô_löe
("use 5.008;");

11 
	`emô_löe
("use strict;");

12 
	`emô_löe
("use warnings;");

13 
	`emô_löe
("use utf8;");

14 
	`emô_löe
("$| = 1;");

15 
	`emô_löe
("");

16 
ªg_«mes
 = 
PL_REG_NAMES
;

17 
i
 = 0; i < 7; i++) {

18 
	`emô_löe
("my %†0;", 
ªg_«mes
[
i
]);

20 
	`emô_löe
("my @mem = (");

21 
	`öc_ödít
();

22 
mp
 = 0; 
d©a
; d©®d©a->
√xt
, mp++) {

23 
	`emô_löe
("%d,", 
d©a
->
v
);

25 
	`dec_ödít
();

26 
	`emô_löe
(");");

27 
	}
}

29 
	$∂_emô_ö°
(
In°
* 
ö°
) {

30 
ö°
->
›
) {

31 
MOV
:

32 
	`emô_löe
("%†%s;", 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
	`§c_°r
(inst));

35 
ADD
:

36 
	`emô_löe
("%†(%†+ %sË& " 
UINT_MAX_STR
 ";",

37 
ªg_«mes
[
ö°
->
d°
.
ªg
],

38 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
	`§c_°r
(inst));

41 
SUB
:

42 
	`emô_löe
("%†(%†- %sË& " 
UINT_MAX_STR
 ";",

43 
ªg_«mes
[
ö°
->
d°
.
ªg
],

44 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
	`§c_°r
(inst));

47 
LOAD
:

48 
	`emô_löe
("%†$mem[%s]||0;", 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
	`§c_°r
(inst));

51 
STORE
:

52 
	`emô_löe
("$mem[%s] = %s;", 
	`§c_°r
(
ö°
), 
ªg_«mes
[ö°->
d°
.
ªg
]);

55 
PUTC
:

56 
	`emô_löe
("¥öàchr(%s);", 
	`§c_°r
(
ö°
));

59 
GETC
:

60 
	`emô_löe
("$c = getc(); %s = defined $c ? ord($c) : 0;",

61 
ªg_«mes
[
ö°
->
d°
.
ªg
]);

64 
EXIT
:

65 
	`emô_löe
("exit;");

68 
DUMP
:

71 
EQ
:

72 
NE
:

73 
LT
:

74 
GT
:

75 
LE
:

76 
GE
:

77 
	`emô_löe
("%s = %s ? 1 : 0;",

78 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
	`cmp_°r
(inst, "1"));

81 
JEQ
:

82 
JNE
:

83 
JLT
:

84 
JGT
:

85 
JLE
:

86 
JGE
:

87 
	`emô_löe
("$pc = %s - 1 if %s;",

88 
	`vÆue_°r
(&
ö°
->
jmp
), 
	`cmp_°r
(inst, "1"));

90 
JMP
:

91 
	`emô_löe
("$pc = %s - 1;",

92 
	`vÆue_°r
(&
ö°
->
jmp
));

96 
	`îr‹
("oops");

98 
	}
}

100 
	$èrgë_∂
(
ModuÀ
* 
moduÀ
) {

101 
	`öô_°©e_∂
(
moduÀ
->
d©a
);

102 
	`emô_löe
("");

104 
	`emô_löe
("");

105 
	`emô_löe
("my @codes; @codes = (");

106 
	`öc_ödít
();

108 
¥ev_pc
 = -1;

109 
In°
* 
ö°
 = 
moduÀ
->
ãxt
; in°; in° = in°->
√xt
) {

110 i‡(
¥ev_pc
 !
ö°
->
pc
) {

111 i‡(
¥ev_pc
 != -1) {

112 
	`emô_löe
("goto $codes[++$pc];");

113 
	`dec_ödít
();

114 
	`emô_löe
("},");

116 
	`emô_löe
("sub {");

117 
	`öc_ödít
();

118 
¥ev_pc
 = 
ö°
->
pc
;

120 
	`∂_emô_ö°
(
ö°
);

123 
	`dec_ödít
();

124 
	`emô_löe
("});");

125 
	`emô_löe
("$codes[0]->();");

126 
	}
}

	@target/post_tag.c

1 
	~<ú/ú.h
>

2 
	~<èrgë/utû.h
>

43 
	$èrgë_po°_èg
(
ModuÀ
* 
moduÀ
) {

44 
uöt32_t
 
i
;

46 
	`¥ötf
("HELLO THERE\n");

50 
D©a
 *
d©a
;

51 
i
 = 0;

52 
d©a
 = 
moduÀ
->d©a; d©®!
NULL
; d©®d©a->
√xt
) {

53 
	`Ârötf
(
°dîr
, "d%u: %d\n", 
i
++, 
d©a
->
v
);

57 
In°
 *
ö¢
;

58 
i
 = 0;

59 
ö¢
 = 
moduÀ
->
ãxt
; in¢ !
NULL
; in¢ = in¢->
√xt
) {

60 
	`Ârötf
(
°dîr
, "i%u: ", 
i
++);

61 
	`dump_ö°
(
ö¢
);

63 
	}
}

	@target/ps.c

1 
	~<ú/ú.h
>

2 
	~<èrgë/utû.h
>

4 c⁄° *
	gps_›_«mes
[]={

8 
	$ps_öô_°©e
(
max_pc
) {

9 
i
=0; i<7; i++){

10 
	`emô_löe
("/%†0 def", 
ªg_«mes
[
i
]);

13 
ps_¨øy_size_shi·
=15;

14 
ps_¨øy_size
=1<<
ps_¨øy_size_shi·
;

15 
	`emô_löe
("/mem %dáºay def", 1 << (24 - 
ps_¨øy_size_shi·
));

16 
	`emô_löe
("/zeros{");

17 
	`emô_löe
(" %dáºay dup", 
ps_¨øy_size
);

18 
	`emô_löe
(" 0 1 %d{", 
ps_¨øy_size
-1);

19 
	`emô_löe
(" 0Öut dup");

20 
	`emô_löe
(" }for");

21 
	`emô_löe
("Öop");

22 
	`emô_löe
("}def");

23 
	`emô_löe
("/mem_addr{");

24 
	`emô_löe
(" mem 1 index %d idiv gë", 
ps_¨øy_size
);

25 
	`emô_löe
(" dupÇullÉq{");

26 
	`emô_löe
("Öop zeros");

27 
	`emô_löe
(" mem 2 index %d idiv 2 indexÖut", 
ps_¨øy_size
);

28 
	`emô_löe
(" }if");

29 
	`emô_löe
("Éxch %d mod", 
ps_¨øy_size
);

30 
	`emô_löe
("}def");

32 
	`emô_löe
("/stdout (%%stdout) (w) file def");

33 
	`emô_löe
("/stdin (%%stdin) (r) file def");

35 
num_funcs
=
max_pc
/
CHUNKED_FUNC_SIZE
+1;

36 
	`emô_löe
("/func_èbÀ %dáºay def", 
num_funcs
);

37 
	`emô_löe
("0 1 %d{", 
num_funcs
-1);

38 
	`öc_ödít
();

39 
	`emô_löe
("func_èbÀÉxch %dáºayÖut", 
CHUNKED_FUNC_SIZE
);

40 
	`dec_ödít
();

41 
	`emô_löe
("}for");

42 
	}
}

44 
	$ps_emô_func_¥ﬁogue
(
func_id
) {

45 
	`emô_löe
("");

46 
	`emô_löe
("func_èbÀ %d gë", 
func_id
);

48 
	`emô_löe
("dup 0 {");

49 
	`öc_ödít
();

50 
	}
}

52 
	$ps_emô_func_ïûogue
() {

53 
	`dec_ödít
();

54 
	`emô_löe
("}Öut");

55 
	`emô_löe
("pop");

56 
	}
}

58 
	$ps_emô_pc_ch™ge
(
pc
) {

59 
	`dec_ödít
();

60 
	`emô_löe
("}Öut");

61 
	`emô_löe
("");

62 
	`emô_löe
("du∞%d %d mod {", 
pc
, 
CHUNKED_FUNC_SIZE
);

63 
	`öc_ödít
();

64 
	}
}

66 * 
	$ps_vÆue_°r
(
VÆue
* 
vÆue
) {

67 
vÆue
->
ty≥
){

68 
REG
:

69  
	`f‹m©
("%s", 
ªg_«mes
[
vÆue
->
ªg
]);

70 
IMM
:

71  
	`f‹m©
("%d", 
vÆue
->
imm
);

73 
	`îr‹
("invalid value");

76 
	}
}

78 
	$ps_emô_ö°
(
In°
* 
ö°
) {

79 
jum≥d
=0;

80 c⁄° *
ªg_«me
;

82 
ö°
->
›
){

83 
MOV
:

84 
	`emô_löe
("/%s %s def",

85 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
	`ps_vÆue_°r
(&ö°->
§c
));

87 
ADD
:

88 
ªg_«me
=
ªg_«mes
[
ö°
->
d°
.
ªg
];

89 
	`emô_löe
("/%s %s %sádd 16#FFFFFFánd def",

90 
ªg_«me
,Ñeg_«me, 
	`ps_vÆue_°r
(&
ö°
->
§c
));

92 
SUB
:

93 
ªg_«me
=
ªg_«mes
[
ö°
->
d°
.
ªg
];

94 
	`emô_löe
("/%s %s %s sub 16#FFFFFFánd def",

95 
ªg_«me
,Ñeg_«me, 
	`ps_vÆue_°r
(&
ö°
->
§c
));

97 
LOAD
:

98 
	`emô_löe
("/%s %s mem_addr get def",

99 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
	`ps_vÆue_°r
(&ö°->
§c
));

101 
STORE
:

102 
	`emô_löe
("%s mem_addr %sÖut",

103 
	`ps_vÆue_°r
(&
ö°
->
§c
), 
ªg_«mes
[ö°->
d°
.
ªg
]);

105 
EXIT
:

106 
	`emô_löe
("quit");

108 
JEQ
:

109 
JNE
:

110 
JLT
:

111 
JGT
:

112 
JLE
:

113 
JGE
:

114 
	`emô_löe
("%s %s %s{",

115 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
	`ps_vÆue_°r
(&ö°->
§c
),

116 
ps_›_«mes
[
ö°
->
›
-
JEQ
]);

117 
	`emô_löe
(" /p¯%†def", 
	`ps_vÆue_°r
(&
ö°
->
jmp
));

118 
	`emô_löe
("}{");

119 if(
ö°
->
√xt
Ë
	`emô_löe
(" /p¯%d def", in°->√xt->
pc
);

120 
	`emô_löe
("}ifelse");

121 
jum≥d
=1;

123 
JMP
:

124 
	`emô_löe
("/p¯%†def", 
	`ps_vÆue_°r
(&
ö°
->
jmp
));

125 
jum≥d
=1;

127 
PUTC
:

128 
	`emô_löe
("°douà%†wrôe", 
	`ps_vÆue_°r
(&
ö°
->
§c
));

130 
GETC
:

131 
	`emô_löe
("/%†°döÑódÇŸ{0}i‡def", 
ªg_«mes
[
ö°
->
d°
.
ªg
]);

133 
EQ
:

134 
NE
:

135 
LT
:

136 
GT
:

137 
LE
:

138 
GE
:

139 
ªg_«me
=
ªg_«mes
[
ö°
->
d°
.
ªg
];

140 
	`emô_löe
("/%s %s %s %s{1}{0}ifelse def",

141 
ªg_«me
,Ñeg_«me, 
	`ps_vÆue_°r
(&
ö°
->
§c
),

142 
ps_›_«mes
[
ö°
->
›
-
EQ
]);

144 
DUMP
:

147 
	`îr‹
("unknown operator");

150 if(!
jum≥d
 && 
ö°
->
√xt
 && in°->
pc
!=inst->next->pc){

151 
	`emô_löe
("/p¯%d def", 
ö°
->
√xt
->
pc
);

153 
	}
}

155 
	$ps_max_pc
(
In°
* 
ö°
){

156 
n
=0;

157 
ö°
){

158 if(
ö°
->
pc
>
n
){

159 
n
=
ö°
->
pc
;

161 
ö°
=ö°->
√xt
;

163  
n
;

164 
	}
}

166 
	$èrgë_ps
(
ModuÀ
 *
moduÀ
) {

167 
	`ps_öô_°©e
(
	`ps_max_pc
(
moduÀ
->
ãxt
));

168 
	`emô_chunked_maö_lo›
(

169 
moduÀ
->
ãxt
,

170 
ps_emô_func_¥ﬁogue
,

171 
ps_emô_func_ïûogue
,

172 
ps_emô_pc_ch™ge
,

173 
ps_emô_ö°
);

174 
	`emô_löe
("");

176 
D©a
 *
d©a
=
moduÀ
->data;

177 
mp
=0; 
d©a
; d©a=d©a->
√xt
, mp++){

178 if(
d©a
->
v
){

179 
	`emô_löe
("%d mem_add∏%dÖut", 
mp
, 
d©a
->
v
);

182 
	`emô_löe
("");

184 
	`emô_löe
("{");

185 
	`öc_ödít
();

186 
	`emô_löe
("func_èbÀÖ¯%d idiv gë", 
CHUNKED_FUNC_SIZE
);

187 
	`emô_löe
("p¯%d mod gë", 
CHUNKED_FUNC_SIZE
);

188 
	`emô_löe
("exec");

189 
	`dec_ödít
();

190 
	`emô_löe
("}loop");

191 
	}
}

	@target/py.c

1 
	~<ú/ú.h
>

2 
	~<èrgë/utû.h
>

4 
	$öô_°©e_py
(
D©a
* 
d©a
) {

5 
	`emô_löe
("import sys");

6 
i
 = 0; i < 7; i++) {

7 
	`emô_löe
("%†0", 
ªg_«mes
[
i
]);

9 
	`emô_löe
("mem = [0] * (1 << 24)");

10 
mp
 = 0; 
d©a
; d©®d©a->
√xt
, mp++) {

11 i‡(
d©a
->
v
) {

12 
	`emô_löe
("mem[%d] = %d", 
mp
, 
d©a
->
v
);

15 
	}
}

17 
	$py_emô_func_¥ﬁogue
(
func_id
) {

18 
	`emô_löe
("");

19 
	`emô_löe
("de‡func%d():", 
func_id
);

20 
	`öc_ödít
();

21 
i
 = 0; i < 7; i++) {

22 
	`emô_löe
("globÆ %s", 
ªg_«mes
[
i
]);

24 
	`emô_löe
("global mem");

25 
	`emô_löe
("");

27 
	`emô_löe
("while %d <=ÖcándÖc < %d:",

28 
func_id
 * 
CHUNKED_FUNC_SIZE
, (func_id + 1) * CHUNKED_FUNC_SIZE);

29 
	`öc_ödít
();

30 
	`emô_löe
("if False:");

31 
	`öc_ödít
();

32 
	`emô_löe
("pass");

33 
	}
}

35 
	$py_emô_func_ïûogue
() {

36 
	`dec_ödít
();

37 
	`emô_löe
("pc += 1");

38 
	`dec_ödít
();

39 
	`dec_ödít
();

40 
	}
}

42 
	$py_emô_pc_ch™ge
(
pc
) {

43 
	`emô_löe
("");

44 
	`dec_ödít
();

45 
	`emô_löe
("ñi‡p¯=%d:", 
pc
);

46 
	`öc_ödít
();

47 
	}
}

49 
	$py_emô_ö°
(
In°
* 
ö°
) {

50 
ö°
->
›
) {

51 
MOV
:

52 
	`emô_löe
("%†%s", 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
	`§c_°r
(inst));

55 
ADD
:

56 
	`emô_löe
("%†(%†+ %sË& " 
UINT_MAX_STR
,

57 
ªg_«mes
[
ö°
->
d°
.
ªg
],

58 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
	`§c_°r
(inst));

61 
SUB
:

62 
	`emô_löe
("%†(%†- %sË& " 
UINT_MAX_STR
,

63 
ªg_«mes
[
ö°
->
d°
.
ªg
],

64 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
	`§c_°r
(inst));

67 
LOAD
:

68 
	`emô_löe
("%†mem[%s]", 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
	`§c_°r
(inst));

71 
STORE
:

72 
	`emô_löe
("mem[%s] = %s", 
	`§c_°r
(
ö°
), 
ªg_«mes
[ö°->
d°
.
ªg
]);

75 
PUTC
:

76 
	`emô_löe
("sys.°dout.wrôe(chr(%s))", 
	`§c_°r
(
ö°
));

79 
GETC
:

80 
	`emô_löe
("_ = sys.stdin.read(1); %s = ord(_) if _Élse 0",

81 
ªg_«mes
[
ö°
->
d°
.
ªg
]);

84 
EXIT
:

85 
	`emô_löe
("sys.exit(0)");

88 
DUMP
:

91 
EQ
:

92 
NE
:

93 
LT
:

94 
GT
:

95 
LE
:

96 
GE
:

97 
	`emô_löe
("%s = int(%s)",

98 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
	`cmp_°r
(inst, "True"));

101 
JEQ
:

102 
JNE
:

103 
JLT
:

104 
JGT
:

105 
JLE
:

106 
JGE
:

107 
JMP
:

108 
	`emô_löe
("if %s:Öc = %s - 1",

109 
	`cmp_°r
(
ö°
, "True"), 
	`vÆue_°r
(&ö°->
jmp
));

113 
	`îr‹
("oops");

115 
	}
}

117 
	$èrgë_py
(
ModuÀ
* 
moduÀ
) {

118 
	`öô_°©e_py
(
moduÀ
->
d©a
);

120 
num_funcs
 = 
	`emô_chunked_maö_lo›
(
moduÀ
->
ãxt
,

121 
py_emô_func_¥ﬁogue
,

122 
py_emô_func_ïûogue
,

123 
py_emô_pc_ch™ge
,

124 
py_emô_ö°
);

126 
	`emô_löe
("");

127 
	`emô_löe
("while True:");

128 
	`öc_ödít
();

129 
	`emô_löe
("if False:Öass");

130 
i
 = 0; i < 
num_funcs
; i++) {

131 
	`emô_löe
("ñi‡p¯< %d: func%d()", (
i
 + 1Ë* 
CHUNKED_FUNC_SIZE
, i);

133 
	`dec_ödít
();

134 
	}
}

	@target/rb.c

1 
	~<ú/ú.h
>

2 
	~<èrgë/utû.h
>

4 c⁄° * 
	gRB_REG_NAMES
[] = {

8 
	$öô_°©e_rb
(
D©a
* 
d©a
) {

9 
ªg_«mes
 = 
RB_REG_NAMES
;

10 
i
 = 0; i < 7; i++) {

11 
	`emô_löe
("%†0", 
ªg_«mes
[
i
]);

13 
	`emô_löe
("@mem = [0] * (1 << 24)");

14 
mp
 = 0; 
d©a
; d©®d©a->
√xt
, mp++) {

15 i‡(
d©a
->
v
) {

16 
	`emô_löe
("@mem[%d] = %d", 
mp
, 
d©a
->
v
);

19 
	}
}

21 
	$rb_emô_func_¥ﬁogue
(
func_id
) {

22 
	`emô_löe
("");

23 
	`emô_löe
("de‡func%d", 
func_id
);

24 
	`öc_ödít
();

25 
	`emô_löe
("while %d <= @pc && @pc < %d",

26 
func_id
 * 
CHUNKED_FUNC_SIZE
, (func_id + 1) * CHUNKED_FUNC_SIZE);

27 
	`öc_ödít
();

28 
	`emô_löe
("case @pc");

29 
	`öc_ödít
();

30 
	}
}

32 
	$rb_emô_func_ïûogue
() {

33 
	`dec_ödít
();

34 
	`emô_löe
("end");

35 
	`emô_löe
("@pc += 1");

36 
	`dec_ödít
();

37 
	`emô_löe
("end");

38 
	`dec_ödít
();

39 
	`emô_löe
("end");

40 
	}
}

42 
	$rb_emô_pc_ch™ge
(
pc
) {

43 
	`emô_löe
("");

44 
	`dec_ödít
();

45 
	`emô_löe
("whí %d", 
pc
);

46 
	`öc_ödít
();

47 
	}
}

49 
	$rb_emô_ö°
(
In°
* 
ö°
) {

50 
ö°
->
›
) {

51 
MOV
:

52 
	`emô_löe
("%†%s", 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
	`§c_°r
(inst));

55 
ADD
:

56 
	`emô_löe
("%†(%†+ %sË& " 
UINT_MAX_STR
,

57 
ªg_«mes
[
ö°
->
d°
.
ªg
],

58 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
	`§c_°r
(inst));

61 
SUB
:

62 
	`emô_löe
("%†(%†- %sË& " 
UINT_MAX_STR
,

63 
ªg_«mes
[
ö°
->
d°
.
ªg
],

64 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
	`§c_°r
(inst));

67 
LOAD
:

68 
	`emô_löe
("%†@mem[%s]", 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
	`§c_°r
(inst));

71 
STORE
:

72 
	`emô_löe
("@mem[%s] = %s", 
	`§c_°r
(
ö°
), 
ªg_«mes
[ö°->
d°
.
ªg
]);

75 
PUTC
:

76 
	`emô_löe
("put¯%s", 
	`§c_°r
(
ö°
));

79 
GETC
:

80 
	`emô_löe
("c = STDIN.getc; %s = c ? c.ord : 0",

81 
ªg_«mes
[
ö°
->
d°
.
ªg
]);

84 
EXIT
:

85 
	`emô_löe
("exit");

88 
DUMP
:

91 
EQ
:

92 
NE
:

93 
LT
:

94 
GT
:

95 
LE
:

96 
GE
:

97 
	`emô_löe
("%s = %s ? 1 : 0",

98 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
	`cmp_°r
(inst, "true"));

101 
JEQ
:

102 
JNE
:

103 
JLT
:

104 
JGT
:

105 
JLE
:

106 
JGE
:

107 
JMP
:

108 
	`emô_löe
("%s && @pc = %s - 1",

109 
	`cmp_°r
(
ö°
, "åue"), 
	`vÆue_°r
(&ö°->
jmp
));

113 
	`îr‹
("oops");

115 
	}
}

117 
	$èrgë_rb
(
ModuÀ
* 
moduÀ
) {

118 
	`öô_°©e_rb
(
moduÀ
->
d©a
);

119 
	`emô_löe
("");

121 
num_funcs
 = 
	`emô_chunked_maö_lo›
(
moduÀ
->
ãxt
,

122 
rb_emô_func_¥ﬁogue
,

123 
rb_emô_func_ïûogue
,

124 
rb_emô_pc_ch™ge
,

125 
rb_emô_ö°
);

127 
	`emô_löe
("");

128 
	`emô_löe
("whileÅrue");

129 
	`öc_ödít
();

130 
	`emô_löe
("ˇ£ @p¯/ %d", 
CHUNKED_FUNC_SIZE
);

131 
i
 = 0; i < 
num_funcs
; i++) {

132 
	`emô_löe
("whí %d", 
i
);

133 
	`emô_löe
(" func%d", 
i
);

135 
	`emô_löe
("end");

136 
	`dec_ödít
();

137 
	`emô_löe
("end");

138 
	}
}

	@target/scala.c

1 
	~<ú/ú.h
>

2 
	~<èrgë/utû.h
>

4 
	$sˇœ_emô_func_¥ﬁogue
(
func_id
) {

5 
	`emô_löe
("");

6 
	`emô_löe
("¥iv©êde‡func%d(): Unô = {", 
func_id
);

7 
	`öc_ödít
();

8 
	`emô_löe
("while (%d <=Öc &&Öc < %d) {",

9 
func_id
 * 
CHUNKED_FUNC_SIZE
, (func_id + 1) * CHUNKED_FUNC_SIZE);

10 
	`öc_ödít
();

11 
	`emô_löe
("pc match {");

12 
	`öc_ödít
();

13 
	`emô_löe
("case -1 => () /* dummy */");

14 
	`dec_ödít
();

15 
	`öc_ödít
();

16 
	}
}

18 
	$sˇœ_emô_func_ïûogue
() {

19 
	`dec_ödít
();

20 
	`emô_löe
("}");

21 
	`emô_löe
("pc += 1");

22 
	`dec_ödít
();

23 
	`emô_löe
("}");

24 
	`dec_ödít
();

25 
	`emô_löe
("}");

26 
	}
}

28 
	$sˇœ_emô_pc_ch™ge
(
pc
) {

29 
	`emô_löe
("");

30 
	`dec_ödít
();

31 
	`emô_löe
("ˇ£ %d => ", 
pc
);

32 
	`öc_ödít
();

33 
	}
}

35 
	$sˇœ_emô_ö°
(
In°
* 
ö°
) {

36 
ö°
->
›
) {

37 
MOV
:

38 
	`emô_löe
("%†%s;", 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
	`§c_°r
(inst));

41 
ADD
:

42 
	`emô_löe
("%†(%†+ %sË& " 
UINT_MAX_STR
,

43 
ªg_«mes
[
ö°
->
d°
.
ªg
],

44 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
	`§c_°r
(inst));

47 
SUB
:

48 
	`emô_löe
("%†(%†- %sË& " 
UINT_MAX_STR
,

49 
ªg_«mes
[
ö°
->
d°
.
ªg
],

50 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
	`§c_°r
(inst));

53 
LOAD
:

54 
	`emô_löe
("%†mem(%s)", 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
	`§c_°r
(inst));

57 
STORE
:

58 
	`emô_löe
("mem(%sË%s", 
	`§c_°r
(
ö°
), 
ªg_«mes
[ö°->
d°
.
ªg
]);

61 
PUTC
:

62 
	`emô_löe
("¥öt(%s.toCh¨)", 
	`§c_°r
(
ö°
));

65 
GETC
:

66 
	`emô_löe
("try { val __ = System.in.read(); "

69 
ªg_«mes
[
ö°
->
d°
.
ªg
]);

72 
EXIT
:

73 
	`emô_löe
("sys.exit(0)");

76 
DUMP
:

79 
EQ
:

80 
NE
:

81 
LT
:

82 
GT
:

83 
LE
:

84 
GE
:

85 
	`emô_löe
("%s = if (%s) 1Élse 0;",

86 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
	`cmp_°r
(inst, "true"));

89 
JEQ
:

90 
JNE
:

91 
JLT
:

92 
JGT
:

93 
JLE
:

94 
JGE
:

95 
JMP
:

96 
	`emô_löe
("if (%s)Öc = %s - 1;",

97 
	`cmp_°r
(
ö°
, "åue"), 
	`vÆue_°r
(&ö°->
jmp
));

101 
	`îr‹
("oops");

103 
	}
}

105 
	$sˇœ_öô_°©e
(
D©a
* 
d©a
) {

106 
¥ev_mc
 = -1;

107 
mp
 = 0; 
d©a
; d©®d©a->
√xt
, mp++) {

108 i‡(
d©a
->
v
) {

109 
mc
 = 
mp
 / 1000;

110 
¥ev_mc
 !
mc
) {

111 i‡(
¥ev_mc
 != -1) {

112 
	`dec_ödít
();

113 
	`emô_löe
("}");

115 
¥ev_mc
++;

116 
	`emô_löe
("de‡öô%d(): Unô = {", 
¥ev_mc
);

117 
	`öc_ödít
();

119 
	`emô_löe
("mem(%dË%d", 
mp
, 
d©a
->
v
);

123 i‡(
¥ev_mc
 != -1) {

124 
	`dec_ödít
();

125 
	`emô_löe
("}");

128  
¥ev_mc
 + 1;

129 
	}
}

131 
	$èrgë_sˇœ
(
ModuÀ
* 
moduÀ
) {

132 
	`emô_löe
("object Main {");

133 
	`öc_ödít
();

134 
i
 = 0; i < 7; i++) {

135 
	`emô_löe
("v¨ %s: I¡ = _", 
ªg_«mes
[
i
]);

137 
	`emô_löe
("var mem: Array[Int] =Çew Array(1 << 24)");

139 
num_öôs
 = 
	`sˇœ_öô_°©e
(
moduÀ
->
d©a
);

141 
CHUNKED_FUNC_SIZE
 = 128;

142 
num_funcs
 = 
	`emô_chunked_maö_lo›
(
moduÀ
->
ãxt
,

143 
sˇœ_emô_func_¥ﬁogue
,

144 
sˇœ_emô_func_ïûogue
,

145 
sˇœ_emô_pc_ch™ge
,

146 
sˇœ_emô_ö°
);

148 
	`emô_löe
("def main(args: Array[String]): Unit = {");

149 
	`öc_ödít
();

151 
i
 = 0; i < 
num_öôs
; i++) {

152 
	`emô_löe
("öô%d()", 
i
);

155 
	`emô_löe
("");

156 
	`emô_löe
("while (true) {");

157 
	`öc_ödít
();

158 
	`emô_löe
("’¯/ %d | 0Ëm©ch {", 
CHUNKED_FUNC_SIZE
);

159 
	`öc_ödít
();

160 
i
 = 0; i < 
num_funcs
; i++) {

161 
	`emô_löe
("ˇ£ %d => func%d()", 
i
, i);

163 
	`dec_ödít
();

164 
	`emô_löe
("}");

165 
	`dec_ödít
();

166 
	`emô_löe
("}");

168 
	`dec_ödít
();

169 
	`emô_löe
("}");

170 
	`dec_ödít
();

171 
	`emô_löe
("}");

172 
	}
}

	@target/scm_sr.c

1 
	~<ú/ú.h
>

2 
	~<èrgë/utû.h
>

3 
	~<èrgë/scm_§_lib.h
>

5 
	$scm_§_emô_fûe_¥ﬁogue
() {

6 
	`emô_löe
(
scm_§_lib
);

7 
	}
}

9 
	$scm_§_emô_fûe_ïûogue
() {

10 
	`emô_löe
(";;; Load Input");

11 
	`emô_löe
("(load \"./input.scm\")");

12 
	`emô_löe
(";;; Run VM!");

13 
	`emô_löe
("(ck () (run-vm! '\"load\" (zero!) (init-reg!)");

14 
	`emô_löe
(" (dmem-init!) (imem-init!)");

15 
	`emô_löe
(" (input!) '()))");

16 
	}
}

18 
	$scm_§_emô_func_¥ﬁogue
(
i
) {

19 
	`emô_löe
("(deföe-sy¡ax func-im∂%d!", 
i
);

20 
	`öc_ödít
();

21 
	`emô_löe
("(syntax-rules (quote) ((_ s) (ck s '(");

22 
	`öc_ödít
();

23 
	}
}

25 
	$scm_§_emô_func_ïûogue
() {

26 
	`dec_ödít
();

27 
	`emô_löe
(")))))");

28 
	`dec_ödít
();

29 
	}
}

31 * 
	$scm_§_›_°r
(
In°
* 
ö°
) {

32 
ö°
->
›
) {

33 
MOV
:

35 
ADD
:

37 
SUB
:

39 
LOAD
:

41 
STORE
:

43 
PUTC
:

45 
EQ
:

46 
JEQ
:

48 
NE
:

49 
JNE
:

51 
LT
:

52 
JLT
:

54 
GT
:

55 
JGT
:

57 
LE
:

58 
JLE
:

60 
GE
:

61 
JGE
:

64 
	`îr‹
("o›ß %d", 
ö°
->
›
);

67 
	}
}

69 * 
	$scm_§_imm_°r
(
imm
, 
n
) {

70 i‡(
n
 == 1) {

71  
	`f‹m©
("%d", 
imm
 & 1);

73  
	`f‹m©
("%d %s", 
imm
 & 1, 
	`scm_§_imm_°r
(imm >> 1, 
n
 - 1));

75 
	}
}

77 * 
	$scm_§_jmp_°r
(
In°
* 
ö°
) {

78 i‡(
ö°
->
jmp
.
ty≥
 =
REG
) {

79  
	`f‹m©
("(\"REG\" %s)", 
ªg_«mes
[
ö°
->
jmp
.
ªg
]);

81  
	`f‹m©
("(\"IMM\" (%s))", 
	`scm_§_imm_°r
(
ö°
->
jmp
.
imm
, 24));

83 
	}
}

85 * 
	$scm_§_§c_°r
(
In°
* 
ö°
) {

86 i‡(
ö°
->
§c
.
ty≥
 =
REG
) {

87  
	`f‹m©
("(\"REG\" %s)", 
ªg_«mes
[
ö°
->
§c
.
ªg
]);

89  
	`f‹m©
("(\"IMM\" (%s))", 
	`scm_§_imm_°r
(
ö°
->
§c
.
imm
, 24));

91 
	}
}

93 
	$scm_§_emô_ö°
(
In°
* 
ö°
) {

94 
ö°
->
›
) {

95 
MOV
:

96 
ADD
:

97 
SUB
:

98 
LOAD
:

99 
STORE
:

100 
	`emô_löe
("(%s %s %s)",

101 
	`scm_§_›_°r
(
ö°
),

102 
ªg_«mes
[
ö°
->
d°
.
ªg
],

103 
	`scm_§_§c_°r
(
ö°
));

106 
PUTC
:

107 
	`emô_löe
("(\"PUTC\" %s)",

108 
	`scm_§_§c_°r
(
ö°
));

111 
GETC
:

112 
	`emô_löe
("(\"GETC\" %s)",

113 
ªg_«mes
[
ö°
->
d°
.
ªg
]);

116 
EXIT
:

117 
	`emô_löe
("(\"EXIT\")");

120 
DUMP
:

123 
EQ
:

124 
NE
:

125 
LT
:

126 
GT
:

127 
LE
:

128 
GE
:

129 
	`emô_löe
("(\"CMP\" %s %s %s)",

130 
	`scm_§_›_°r
(
ö°
),

131 
ªg_«mes
[
ö°
->
d°
.
ªg
],

132 
	`scm_§_§c_°r
(
ö°
));

135 
JEQ
:

136 
JNE
:

137 
JLT
:

138 
JGT
:

139 
JLE
:

140 
JGE
:

141 
	`emô_löe
("(\"JCOND\" %s %s %s %s)",

142 
	`scm_§_›_°r
(
ö°
),

143 
	`scm_§_jmp_°r
(
ö°
),

144 
ªg_«mes
[
ö°
->
d°
.
ªg
],

145 
	`scm_§_§c_°r
(
ö°
));

148 
JMP
:

149 
	`emô_löe
("(\"JMP\" %s)",

150 
	`scm_§_jmp_°r
(
ö°
));

154 
	`îr‹
("oops");

157 
	}
}

159 
	$scm_§_emô_func_im∂
(
In°
* 
ö°
) {

160 
¥ev_pc
 = 0;

161 
	`scm_§_emô_func_¥ﬁogue
(0);

162 ; 
ö°
; in° = in°->
√xt
) {

163 i‡(
¥ev_pc
 !
ö°
->
pc
) {

164 
	`scm_§_emô_func_ïûogue
();

165 
	`emô_löe
("");

166 
	`scm_§_emô_func_¥ﬁogue
(
ö°
->
pc
);

168 
¥ev_pc
 = 
ö°
->
pc
;

170 
	`scm_§_emô_ö°
(
ö°
);

172 
	`scm_§_emô_func_ïûogue
();

173 
	}
}

175 
	$scm_sc_cou¡_pc
(
In°
* 
ö°
) {

176 
max_pc
 = 0;

177 ; 
ö°
; in° = in°->
√xt
) {

178 
max_pc
 = (max_p¯> 
ö°
->
pc
)?max_pc:inst->pc;

180  
max_pc
;

181 
	}
}

183 
	$scm_§_emô_ö°_mem_ªc
(
max_pc
, 
‰om
, 
to
) {

184 i‡(
max_pc
 < 
‰om
) {

185 
	`emô_löe
("'()");

186 } i‡(
‰om
 + 1 >
to
) {

187 
	`emô_löe
("(func-im∂%d!)", 
‰om
);

189 
mid
 = (
‰om
 + 
to
)/2;

190 
	`emô_löe
("(cons!");

191 
	`öc_ödít
();

192 
	`scm_§_emô_ö°_mem_ªc
(
max_pc
, 
‰om
, 
mid
);

193 
	`scm_§_emô_ö°_mem_ªc
(
max_pc
, 
mid
, 
to
);

194 
	`dec_ödít
();

195 
	`emô_löe
(")");

197 
	}
}

199 
	$scm_§_emô_ö°_mem
(
max_pc
) {

200 
	`emô_löe
("(define-syntax imem-init!");

201 
	`öc_ödít
();

202 
	`emô_löe
("(syntax-rules (quote) ((_ s) (ck s");

203 
	`öc_ödít
();

204 
	`scm_§_emô_ö°_mem_ªc
(
max_pc
, 0, 1 << 24);

205 
	`dec_ödít
();

206 
	`emô_löe
("))))");

207 
	`dec_ödít
();

208 
	}
}

210 
D©a
* 
	$scm_§_èke_d©a
(
D©a
* 
d©a
, 
n
) {

211 
i
 = 0;

212 ; 
i
 < 
n
 && 
d©a
; i++) {

213 
d©a
 = d©a->
√xt
;

215  
d©a
;

216 
	}
}

218 
	$scm_§_emô_d©a_mem_ªc
(
D©a
* 
d©a
, 
‰om
, 
to
) {

219 i‡(
d©a
 =
NULL
) {

220 
	`emô_löe
("()");

221 } i‡(
‰om
 + 1 >
to
) {

222 
	`emô_löe
("(%s)", 
	`scm_§_imm_°r
(
d©a
->
v
, 24));

224 
mid
 = (
‰om
 + 
to
)/2;

225 
	`emô_löe
("(");

226 
	`öc_ödít
();

227 
	`scm_§_emô_d©a_mem_ªc
(
d©a
, 
‰om
, 
mid
);

228 
	`emô_löe
(".");

229 
	`scm_§_emô_d©a_mem_ªc
(
	`scm_§_èke_d©a
(
d©a
, 
mid
 - 
‰om
), mid, 
to
);

230 
	`dec_ödít
();

231 
	`emô_löe
(")");

233 
	}
}

235 
	$scm_§_emô_d©a_mem
(
D©a
* 
d©a
) {

236 
	`emô_löe
("(define-syntax dmem-init!");

237 
	`öc_ödít
();

238 
	`emô_löe
("(syntax-rules (quote) ((_ s) (ck s '");

239 
	`öc_ödít
();

240 
	`scm_§_emô_d©a_mem_ªc
(
d©a
, 0, 1 << 24);

241 
	`dec_ödít
();

242 
	`emô_löe
("))))");

243 
	`dec_ödít
();

244 
	}
}

246 c⁄° * 
	gSCM_SR_REG_NAMES
[6] = {

250 
	$èrgë_scm_§
(
ModuÀ
* 
moduÀ
) {

251 
ªg_«mes
 = 
SCM_SR_REG_NAMES
;

253 
	`scm_§_emô_fûe_¥ﬁogue
();

254 
	`emô_löe
("");

256 
	`scm_§_emô_func_im∂
(
moduÀ
->
ãxt
);

257 
	`emô_löe
("");

259 
	`scm_§_emô_ö°_mem
(
	`scm_sc_cou¡_pc
(
moduÀ
->
ãxt
));

260 
	`emô_löe
("");

262 
	`scm_§_emô_d©a_mem
(
moduÀ
->
d©a
);

263 
	`emô_löe
("");

265 
	`scm_§_emô_fûe_ïûogue
();

266 
	}
}

	@target/scm_sr_lib.h

5 
	gscm_§_lib
[] =

	@target/sed.c

1 
	~<as£π.h
>

2 
	~<°dboﬁ.h
>

3 
	~<°rög.h
>

5 
	~<ú/ú.h
>

6 
	~<èrgë/utû.h
>

8 c⁄° 
	gSED_REG_NAMES
[] = "ABCDFS";

10 
	$£d_öô_°©e
(
D©a
* 
d©a
) {

11 
	`emô_löe
(":in_loop");

12 
	`emô_löe
("/^$/{x\ns/$/a,/\nx\nbin_done\n}");

13 
i
 = 1; i < 128; i++) {

14 i‡(
i
 == 10)

16 
	`putch¨
('/');

17 
	`putch¨
('^');

18 i‡(
i
 == '$' || i == '.' || i == '/' ||

19 
i
 == '[' || i == '\\' || i == ']') {

20 
	`putch¨
('\\');

22 
	`putch¨
(
i
);

23 
	`emô_löe
("/{s/.//\nx\ns/$/%x,/\nx\nbö_lo›\n}", 
i
);

25 
	`emô_löe
(":in_done");

26 
	`emô_löe
("${");

28 
	`emô_löe
("x");

29 
	`emô_löe
("s/a,$//");

30 
	`emô_löe
("s/.*/i=& /");

31 
i
 = 0; i < 6; i++) {

32 
	`emô_löe
("s/$/%c=0 /", 
SED_REG_NAMES
[
i
]);

34 
	`emô_löe
("s/$/o= /");

35 
mp
 = 0; 
d©a
; d©®d©a->
√xt
, mp++) {

36 
	`emô_löe
("s/$/m%x=%x /", 
mp
, 
d©a
->
v
);

38 
	`emô_löe
("x");

39 
	}
}

41 
	$£d_emô_vÆue
(
VÆue
* 
v
) {

42 i‡(
v
->
ty≥
 =
REG
) {

43 
	`emô_löe
("G");

44 
	`emô_löe
("s/\\n[^%c]* %c=\\([^ ]*\\).*/\\1/",

45 
SED_REG_NAMES
[
v
->
ªg
], SED_REG_NAMES[v->reg]);

47 
	`emô_löe
("s/$/%x/", 
v
->
imm
);

49 
	}
}

51 
	$£d_emô_§c
(
In°
* 
ö°
) {

52 
	`£d_emô_vÆue
(&
ö°
->
§c
);

53 
	}
}

55 
	$£d_emô_d°
(
In°
* 
ö°
) {

56 
	`£d_emô_vÆue
(&
ö°
->
d°
);

57 
	}
}

59 
	$£d_emô_d°_§c
(
In°
* 
ö°
) {

60 
	`£d_emô_d°
(
ö°
);

61 
	`emô_löe
("s/$/ /");

62 
	`£d_emô_§c
(
ö°
);

63 
	}
}

65 
	$£d_emô_£t_d°
(
In°
* 
ö°
) {

66 
	`emô_löe
("G");

67 
	`emô_löe
("s/^\\([^\\n]*\\)\\n\\([^%c]* %c=\\)[^ ]*/\\2\\1/",

68 
SED_REG_NAMES
[
ö°
->
d°
.
ªg
], SED_REG_NAMES[inst->dst.reg]);

69 
	`emô_löe
("x");

70 
	`emô_löe
("s/.*//");

71 
	}
}

73 
	$£d_emô_add
(
In°
* 
ö°
) {

74 
id
 = 0;

75 
	`£d_emô_d°_§c
(
ö°
);

76 
	`emô_löe
(" s/\\(.*\\) \\([0-9a-f]*\\)"

78 
	`emô_löe
(":add_lo›_%d", 
id
);

79 
	`emô_löe
(" s/\\(.\\)@\\([^@]*\\)\\(.\\)@\\(.\\)\\? "

82 
	`emô_löe
(" s/; .\\{16\\}\\(.\\)\\([0-9a-f]\\{15\\}\\([0-9a-f]\\)\\)\\?"

85 
	`emô_löe
(" /^@ @/!{");

86 
	`emô_löe
(" s/^@/0@/");

87 
	`emô_löe
(" s/ @/ 0@/");

88 
	`emô_löe
(" badd_lo›_%d", 
id
);

89 
	`emô_löe
(" }");

91 
	`emô_löe
(" s/@ @. .*;/;1/");

92 
	`emô_löe
(" s/.*;//");

93 
	`emô_löe
(" s/.*\\(......\\)$/\\1/");

94 
	`emô_löe
(" s/^0*\\([0-9a-f]\\)/\\1/");

96 
	`£d_emô_£t_d°
(
ö°
);

98 
id
++;

99 
	}
}

101 
	$£d_emô_sub
(
In°
* 
ö°
) {

102 
id
 = 0;

103 
	`£d_emô_d°_§c
(
ö°
);

104 
	`emô_löe
("s/^/1000000/");

105 
	`emô_löe
(" s/\\(.*\\) \\([0-9a-f]*\\)"

107 
	`emô_löe
(":sub_lo›_%d", 
id
);

108 
	`emô_löe
(" s/\\(.\\)@\\([^@]*\\)\\(.\\)@\\(.\\)\\? "

111 
	`emô_löe
(" s/; .\\{16\\}\\(.\\)\\([0-9a-f]\\{15\\}\\([^ ]\\)\\)\\?"

114 
	`emô_löe
(" /^@ @/!{");

115 
	`emô_löe
(" s/^@/0@/");

116 
	`emô_löe
(" s/ @/ 0@/");

117 
	`emô_löe
(" bsub_lo›_%d", 
id
);

118 
	`emô_löe
(" }");

120 
	`emô_löe
(" s/@ @. .*;/;/");

121 
	`emô_löe
(" s/@.*//");

122 
	`emô_löe
(" s/.*\\(......\\)$/\\1/");

123 
	`emô_löe
(" s/^0*\\([0-9a-f]\\)/\\1/");

125 
	`£d_emô_£t_d°
(
ö°
);

127 
id
++;

128 
	}
}

130 
	$£d_emô_cmp
(
In°
* 
ö°
) {

131 
id
 = 0;

132 
uöt
 
›
 = 
	`n‹mÆize_c⁄d
(
ö°
->›, 
Ál£
);

133 
	`£d_emô_d°_§c
(
ö°
);

134 i‡(
›
 =
JLT
 || o∞=
JLE
) {

135 
	`emô_löe
("s/\\(.*\\) \\(.*\\)/\\2 \\1/");

136 
›
 = o∞=
JLT
 ? 
JGT
 : 
JGE
;

139 
›
) {

140 
JEQ
:

141 
	`emô_löe
("s/^\\(.*\\) \\1$/1/");

142 
	`emô_löe
("s/^.* .*$/0/");

145 
JNE
:

146 
	`emô_löe
("s/^\\(.*\\) \\1$/0/");

147 
	`emô_löe
("s/^.* .*$/1/");

150 
JGE
:

151 
JGT
:

152 
	`emô_löe
("s/^..* $/1/");

153 
	`emô_löe
("s/^...* .$/1/");

154 
	`emô_löe
("s/^....* ..$/1/");

155 
	`emô_löe
("s/^.....* ...$/1/");

156 
	`emô_löe
("s/^......* ....$/1/");

157 
	`emô_löe
("s/^...... .....$/1/");

158 
	`emô_löe
("s/^ ..*$/0/");

159 
	`emô_löe
("s/^. ...*$/0/");

160 
	`emô_löe
("s/^.. ....*$/0/");

161 
	`emô_löe
("s/^... .....*$/0/");

162 
	`emô_löe
("s/^.... ......*$/0/");

163 
	`emô_löe
("s/^..... ......$/0/");

164 
	`emô_löe
(":cmp_lo›_%d", 
id
);

165 
	`emô_löe
("/^\\(.\\).* \\1/{");

166 
	`emô_löe
(" s/^\\(.\\)\\(.*\\) \\1/\\2 /");

167 
	`emô_löe
(" bcmp_lo›_%d", 
id
);

168 
	`emô_löe
("}");

169 
	`emô_löe
("s/$/;fedcba9876543210/");

170 
	`emô_löe
("s/^\\(.\\).* \\(.\\).*;.*\\1.*\\2.*/1/");

171 i‡(
›
 =
JGE
)

172 
	`emô_löe
("s/^\\(.*\\) \\1;.*/1/");

173 
	`emô_löe
("s/^.* .*/0/");

174 
	`emô_löe
("s/;.*//");

175 
id
++;

178 
	}
}

180 
	$£d_emô_jmp
(
In°
* 
ö°
) {

181 i‡(
ö°
->
jmp
.
ty≥
 =
REG
) {

182 
	`£d_emô_vÆue
(&
ö°
->
jmp
);

183 
	`emô_löe
("bjmp_reg");

185 
	`emô_löe
("bpc_%x", 
ö°
->
jmp
.
imm
);

187 
	}
}

189 
	$£d_emô_ö°
(
In°
* 
ö°
) {

190 
ö°
->
›
) {

191 
MOV
:

192 
	`£d_emô_§c
(
ö°
);

193 
	`£d_emô_£t_d°
(
ö°
);

196 
ADD
:

197 
	`£d_emô_add
(
ö°
);

200 
SUB
:

201 
	`£d_emô_sub
(
ö°
);

204 
LOAD
:

205 
	`£d_emô_§c
(
ö°
);

206 
	`emô_löe
("G");

207 
	`emô_löe
("s/^\\([^\\n]*\\)\\n.*m\\1=\\([^ ]*\\).*/@\\2/");

208 
	`emô_löe
("/^@/!s/.*/0/");

209 
	`emô_löe
("s/^@//");

210 
	`£d_emô_£t_d°
(
ö°
);

213 
STORE
:

214 
	`£d_emô_d°_§c
(
ö°
);

215 
	`emô_löe
("G");

216 
	`emô_löe
("/ \\([^\\n]*\\)\\n.*m\\1=/"

218 
	`emô_löe
("/^@/!"

220 
	`emô_löe
("s/^@//");

221 
	`emô_löe
("x");

222 
	`emô_löe
("s/.*//");

225 
PUTC
:

226 
	`£d_emô_§c
(
ö°
);

227 
	`emô_löe
("s/^/0/");

228 
	`emô_löe
("s/.*\\(..\\)$/\\1/");

229 
	`emô_löe
("G");

230 
	`emô_löe
("s/^\\(..\\)\\n\\(.*o=[^ ]*\\)/\\2\\1/");

231 
	`emô_löe
("x");

232 
	`emô_löe
("s/.*//");

235 
GETC
: {

236 
	`emô_löe
("g");

237 
	`emô_löe
("/i= /s/.*/0/");

238 
	`emô_löe
("/i=[^ ]/{");

239 
	`emô_löe
("s/.*i=\\([^,]*\\),.*/\\1/");

240 
	`emô_löe
("x");

241 
	`emô_löe
("s/i=[^,]*,/i=/");

242 
	`emô_löe
("x");

243 
	`emô_löe
("}");

244 
	`£d_emô_£t_d°
(
ö°
);

248 
EXIT
:

249 
	`emô_löe
("bexit");

252 
DUMP
:

258 
EQ
:

259 
NE
:

260 
LT
:

261 
GT
:

262 
LE
:

263 
GE
:

264 
	`£d_emô_cmp
(
ö°
);

265 
	`£d_emô_£t_d°
(
ö°
);

268 
JEQ
:

269 
JNE
:

270 
JLT
:

271 
JGT
:

272 
JLE
:

273 
JGE
:

274 
	`£d_emô_cmp
(
ö°
);

275 
	`emô_löe
("/^1$/{");

276 
	`emô_löe
(" s/.//");

277 
	`£d_emô_jmp
(
ö°
);

278 
	`emô_löe
("}");

279 
	`emô_löe
("s/.//");

282 
JMP
:

283 
	`£d_emô_jmp
(
ö°
);

287 
	`îr‹
("oops");

289 
	}
}

291 
	$£d_emô_jmp_èbÀ_ªc
(
dïth
, * 
ªg
, 
pc
, 
œ°_pc
) {

292 c⁄° 
WIDTH
[] = {

295 c⁄° 
w
 = 
WIDTH
[
dïth
];

296 
i
 = 0; i < 16 && 
pc
 <
œ°_pc
; i++,Ö¯+
w
) {

297 
ªg
[
dïth
] = 
i
 > 9 ? 'a' + i - 10 : '0' + i;

298 
ªg
[
dïth
+1] = 0;

299 i‡(
dïth
 == 3) {

300 
	`emô_löe
("/^%s$/bpc_%x", 
ªg
, 
pc
);

302 
	`emô_löe
("/^%s/{", 
ªg
);

303 
	`£d_emô_jmp_èbÀ_ªc
(
dïth
 + 1, 
ªg
, 
pc
, 
œ°_pc
);

304 
	`emô_löe
("}");

307 
	}
}

309 
	$£d_emô_jmp_èbÀ
(
œ°_pc
) {

310 
	`emô_löe
("");

311 
	`emô_löe
(":jmp_reg");

312 
	`emô_löe
("s/^/000/");

313 
	`emô_löe
("s/.*\\(....\\)/\\1/");

314 
ªg
[5];

315 
	`£d_emô_jmp_èbÀ_ªc
(0, 
ªg
, 0, 
œ°_pc
);

316 
	}
}

318 
	$èrgë_£d
(
ModuÀ
* 
moduÀ
) {

319 
	`£d_öô_°©e
(
moduÀ
->
d©a
);

321 
¥ev_pc
 = -1;

322 
In°
* 
ö°
 = 
moduÀ
->
ãxt
; in°; in° = in°->
√xt
) {

323 i‡(
¥ev_pc
 !
ö°
->
pc
) {

324 
	`emô_löe
("");

325 
	`emô_löe
(":pc_%x", 
ö°
->
pc
);

326 
	`emô_löe
("s/.*//");

328 
¥ev_pc
 = 
ö°
->
pc
;

329 
	`£d_emô_ö°
(
ö°
);

332 
	`£d_emô_jmp_èbÀ
(
¥ev_pc
);

334 
	`emô_löe
("");

335 
	`emô_löe
(":exit");

336 
	`emô_löe
("s/.*//");

337 
	`emô_löe
("x");

338 
	`emô_löe
("s/.*o=\\([^ ]*\\).*/\\1/");

339 
	`emô_löe
(":out_loop");

340 
	`emô_löe
("/^$/bout_done");

341 
i
 = 0; i < 256; i++) {

342 
	`¥ötf
("/^%x%x/{s/..//\nx\n", 
i
 / 16, i % 16);

343 i‡(
i
 == 10) {

344 
	`emô_löe
("p\ns/.*//\nx\n}");

346 
buf
[6];

347 
buf
[0] = 
i
;

348 
buf
[1] = 0;

349 i‡(
i
 == '/' || i == '\\' || i == '&') {

350 
buf
[0] = '\\';

351 
buf
[1] = 
i
;

352 
buf
[2] = 0;

353 } i‡(
i
 == 0 || (i >= 0xc2 && i <= 0xfd)) {

354 
	`•rötf
(
buf
, "\\x%x", 
i
);

356 
	`emô_löe
("s/$/%s/\nx\n}", 
buf
);

359 
	`emô_löe
("bout_loop");

360 
	`emô_löe
(":out_done");

361 
	`emô_löe
("x");

362 
	`emô_löe
("p");

364 
	`emô_löe
("}");

365 
	}
}

	@target/sh.c

1 
	~<ú/ú.h
>

2 
	~<èrgë/utû.h
>

4 
	$sh_öô_°©e
(
D©a
* 
d©a
) {

5 
i
 = 0; i < 7; i++) {

6 
	`emô_löe
("%s=0", 
ªg_«mes
[
i
]);

8 
mp
 = 0; 
d©a
; d©®d©a->
√xt
, mp++) {

9 i‡(
d©a
->
v
) {

10 
	`emô_löe
("m%d=%d", 
mp
, 
d©a
->
v
);

13 
	}
}

15 c⁄° * 
	$sh_vÆue_°r
(
VÆue
* 
v
) {

16 i‡(
v
->
ty≥
 =
REG
) {

17  
	`f‹m©
("$%s", 
ªg_«mes
[
v
->
ªg
]);

18 } i‡(
v
->
ty≥
 =
IMM
) {

19  
	`f‹m©
("%d", 
v
->
imm
);

21 
	`îr‹
("invalid value");

23 
	}
}

25 c⁄° * 
	$sh_§c_°r
(
In°
* 
ö°
) {

26  
	`sh_vÆue_°r
(&
ö°
->
§c
);

27 
	}
}

29 c⁄° * 
	$sh_cmp_°r
(
In°
* 
ö°
) {

30 
›
 = 
	`n‹mÆize_c⁄d
(
ö°
->op, 0);

31 c⁄° * 
›_°r
;

32 
›
) {

33 
JEQ
:

34 
›_°r
 = "=="; ;

35 
JNE
:

36 
›_°r
 = "!="; ;

37 
JLT
:

38 
›_°r
 = "<"; ;

39 
JGT
:

40 
›_°r
 = ">"; ;

41 
JLE
:

42 
›_°r
 = "<="; ;

43 
JGE
:

44 
›_°r
 = ">="; ;

45 
JMP
:

48 
	`îr‹
("oops");

50  
	`f‹m©
("$(( $%s %s %s ))",

51 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
›_°r
, 
	`sh_§c_°r
(inst));

52 
	}
}

54 
	$sh_emô_ö°
(
In°
* 
ö°
) {

55 
ö°
->
›
) {

56 
MOV
:

57 
	`emô_löe
("%s=%s", 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
	`sh_§c_°r
(inst));

60 
ADD
:

61 
	`emô_löe
("%s=$(–($%†+ %sË& " 
UINT_MAX_STR
 " ))",

62 
ªg_«mes
[
ö°
->
d°
.
ªg
],

63 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
	`sh_§c_°r
(inst));

66 
SUB
:

67 
	`emô_löe
("%s=$(–($%†- %sË& " 
UINT_MAX_STR
 "))",

68 
ªg_«mes
[
ö°
->
d°
.
ªg
],

69 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
	`sh_§c_°r
(inst));

72 
LOAD
:

73 
	`emô_löe
("evÆ z=\\$m%s", 
	`sh_§c_°r
(
ö°
));

74 
	`emô_löe
("%s=$(–$z + 0 ))", 
ªg_«mes
[
ö°
->
d°
.
ªg
]);

77 
STORE
:

78 
	`emô_löe
("evÆ m%s=$%s", 
	`sh_§c_°r
(
ö°
), 
ªg_«mes
[ö°->
d°
.
ªg
]);

81 
PUTC
:

82 
	`emô_löe
("t=$((%s&255))", 
	`sh_§c_°r
(
ö°
));

83 
	`emô_löe
("printf \"\\\\$(printf '%%03o' $t)\"");

86 
GETC
:

87 
	`emô_löe
("ifÑead -rn1Å;Åhen");

88 
	`emô_löe
(" if [ -z $t ];Åhen");

89 
	`emô_löe
(" %s=10", 
ªg_«mes
[
ö°
->
d°
.
ªg
]);

90 
	`emô_löe
("Élse");

91 
	`emô_löe
(" %s=$’röt‡'%%d' \"'$t'\")", 
ªg_«mes
[
ö°
->
d°
.
ªg
]);

92 
	`emô_löe
(" fi");

93 
	`emô_löe
("else");

94 
	`emô_löe
(" %s=0", 
ªg_«mes
[
ö°
->
d°
.
ªg
]);

95 
	`emô_löe
("fi");

98 
EXIT
:

99 
	`emô_löe
("exit");

102 
DUMP
:

105 
EQ
:

106 
NE
:

107 
LT
:

108 
GT
:

109 
LE
:

110 
GE
:

111 
	`emô_löe
("%s=%s",

112 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
	`sh_cmp_°r
(inst));

115 
JEQ
:

116 
JNE
:

117 
JLT
:

118 
JGT
:

119 
JLE
:

120 
JGE
:

121 
	`emô_löe
("i‡[ %†1 ];Åhí", 
	`sh_cmp_°r
(
ö°
));

122 
	`emô_löe
("Öc=$(–%†- 1 ))", 
	`sh_vÆue_°r
(&
ö°
->
jmp
));

123 
	`emô_löe
("fi");

126 
JMP
:

127 
	`emô_löe
("pc=$(–%†- 1 ))", 
	`sh_vÆue_°r
(&
ö°
->
jmp
));

131 
	`îr‹
("oops");

133 
	}
}

135 
	$èrgë_sh
(
ModuÀ
* 
moduÀ
) {

136 
	`sh_öô_°©e
(
moduÀ
->
d©a
);

137 
	`emô_löe
("");

139 
	`emô_löe
("whileÅrue; do");

140 
	`emô_löe
("case $pc in");

141 
¥ev_pc
 = -1;

142 
In°
* 
ö°
 = 
moduÀ
->
ãxt
; in°; in° = in°->
√xt
) {

143 i‡(
¥ev_pc
 !
ö°
->
pc
) {

144 i‡(
¥ev_pc
 != -1) {

145 
	`emô_löe
(";;");

146 
	`dec_ödít
();

147 
	`emô_löe
("");

149 
	`emô_löe
("%d)", 
ö°
->
pc
);

150 
	`öc_ödít
();

152 
¥ev_pc
 = 
ö°
->
pc
;

153 
	`sh_emô_ö°
(
ö°
);

156 
	`emô_löe
(";;");

157 
	`dec_ödít
();

158 
	`emô_löe
("esac");

159 
	`emô_löe
("");

160 
	`emô_löe
("pc=$(( $pc + 1 ))");

161 
	`emô_löe
("done");

162 
	}
}

	@target/sqlite3.c

1 
	~<°dlib.h
>

2 
	~<ú/ú.h
>

3 
	~<èrgë/utû.h
>

6 
	mSQLITE3_A
 = 0,

7 
	mSQLITE3_B
,

8 
	mSQLITE3_C
,

9 
	mSQLITE3_D
,

10 
	mSQLITE3_BP
,

11 
	mSQLITE3_SP
,

12 
	mSQLITE3_PC
,

13 
	mSQLITE3_STEP
,

14 
	mSQLITE3_RUN
,

15 
	mSQLITE3_MEM
,

16 
	mSQLITE3_IN
,

17 
	mSQLITE3_OUT
,

18 
	mSQLITE3_NUM_COLS


19 } 
	tSQLôe3Cﬁ
;

21 c⁄° * 
	gCOL_NAMES
[
SQLITE3_NUM_COLS
] = {

26 
	sSQLôe3Ca£Ex¥_
 {

27 
	mpc
;

28 
	m°ï
;

29 c⁄° * 
	mex¥
;

30 
SQLôe3Ca£Ex¥_
* 
	m√xt
;

31 } 
	tSQLôe3Ca£Ex¥
;

34 
SQLôe3Ca£Ex¥
* 
	$sqlôe3_add_ex¥
(
SQLôe3Ca£Ex¥
* 
ex¥
,

35 
pc
,

36 
°ï
,

37 c⁄° * 
ex¥_°r
) {

38 
SQLôe3Ca£Ex¥
* 
e
 = 
	`mÆloc
((SQLite3CaseExpr));

39 
e
->
pc
 =Öc;

40 
e
->
°ï
 = step;

41 
e
->
ex¥
 = 
ex¥_°r
;

42 
e
->
√xt
 = 0;

43 
ex¥
->
√xt
 = 
e
;

44  
e
;

45 
	}
}

47 c⁄° * 
	$sqlôe3_cmp_°r
(
In°
* 
ö°
) {

48 
›
 = 
	`n‹mÆize_c⁄d
(
ö°
->op, 0);

49 c⁄° * 
›_°r
;

50 
›
) {

51 
JEQ
: 
›_°r
 = "="; ;

52 
JNE
: 
›_°r
 = "<>"; ;

53 
JLT
: 
›_°r
 = "<"; ;

54 
JGT
: 
›_°r
 = ">"; ;

55 
JLE
: 
›_°r
 = "<="; ;

56 
JGE
: 
›_°r
 = ">="; ;

58 
	`îr‹
("oops");

60  
	`f‹m©
("%†%†%s", 
COL_NAMES
[
ö°
->
d°
.
ªg
], 
›_°r
, 
	`§c_°r
(inst));

61 
	}
}

63 
	$sqlôe3_å™•o£_ö°s
(
In°
* 
ö°
, 
SQLôe3Ca£Ex¥
* 
cﬁs
[]) {

65 
°ï
 = 0;

66 
¥ev_pc
 = -1;

67 
SQLôe3Cﬁ
 
cﬁ_idx
 = 0;

68 c⁄° * 
ex¥
 = 
NULL
;

69 
updcﬁs
 = 0;

71 ; 
ö°
; in° = in°->
√xt
) {

72 i‡(
¥ev_pc
 !
ö°
-> 
pc
) {

73 i‡(
¥ev_pc
 != -1) {

74 
°ï
++;

75 
cﬁs
[
SQLITE3_PC
] = 
	`sqlôe3_add_ex¥
(cﬁs[SQLITE3_PC], 
¥ev_pc
, 
°ï
, "pc+1");

76 
cﬁs
[
SQLITE3_STEP
] = 
	`sqlôe3_add_ex¥
(cﬁs[SQLITE3_STEP], 
¥ev_pc
, 
°ï
, "0");

78 
updcﬁs
 = 0;

79 
°ï
 = 0;

82 
u£cﬁ
 = ((
ö°
->
§c
.
ty≥
 =
REG
Ë? (1 << in°->§c.
ªg
) : 0) |

83 ((
ö°
->
d°
.
ty≥
 =
REG
Ë? (1 << in°->d°.
ªg
) : 0);

85 i‡((
u£cﬁ
 & 
updcﬁs
) != 0) {

86 
°ï
++;

87 
updcﬁs
 = 0;

90 
ö°
->
›
) {

91 
MOV
:

92 
cﬁ_idx
 = (
SQLôe3Cﬁ
)
ö°
->
d°
.
ªg
;

93 
ex¥
 = 
	`§c_°r
(
ö°
);

96 
ADD
:

97 
cﬁ_idx
 = (
SQLôe3Cﬁ
)
ö°
->
d°
.
ªg
;

98 
ex¥
 = 
	`f‹m©
("(%†+ %sË& " 
UINT_MAX_STR
,

99 
COL_NAMES
[
ö°
->
d°
.
ªg
], 
	`§c_°r
(inst));

102 
SUB
:

103 
cﬁ_idx
 = (
SQLôe3Cﬁ
)
ö°
->
d°
.
ªg
;

104 
ex¥
 = 
	`f‹m©
("(%†- %sË& " 
UINT_MAX_STR
,

105 
COL_NAMES
[
ö°
->
d°
.
ªg
], 
	`§c_°r
(inst));

108 
LOAD
:

109 
cﬁ_idx
 = (
SQLôe3Cﬁ
)
ö°
->
d°
.
ªg
;

110 
ex¥
 = 
	`f‹m©
("cﬂÀs˚(js⁄_exåa˘(mem, '$.'||%s),0)", 
	`§c_°r
(
ö°
));

113 
STORE
:

114 
cﬁ_idx
 = 
SQLITE3_MEM
;

115 
ex¥
 = 
	`f‹m©
("json_set(mem, '$.'||%s, %s)",

116 
	`§c_°r
(
ö°
), 
COL_NAMES
[ö°->
d°
.
ªg
]);

119 
PUTC
:

120 
cﬁ_idx
 = 
SQLITE3_OUT
;

121 
ex¥
 = 
	`f‹m©
("°dout||ch¨(%s)", 
	`§c_°r
(
ö°
));

124 
GETC
:

125 
cﬁs
[
SQLITE3_IN
] = 
	`sqlôe3_add_ex¥
(cﬁs[SQLITE3_IN], 
ö°
->
pc
, 
°ï
,

127 
cﬁ_idx
 = (
SQLôe3Cﬁ
)
ö°
->
d°
.
ªg
;

129 
ex¥
 = "CASE WHENÜength(stdin) = 0 THEN 0 ELSE unicode(stdin) END";

132 
EXIT
:

133 
cﬁ_idx
 = 
SQLITE3_RUN
;

134 
ex¥
 = "0";

137 
DUMP
:

138 
√xt_ö°
;

140 
EQ
:

141 
NE
:

142 
LT
:

143 
GT
:

144 
LE
:

145 
GE
:

146 
cﬁ_idx
 = (
SQLôe3Cﬁ
)
ö°
->
d°
.
ªg
;

147 
ex¥
 = 
	`sqlôe3_cmp_°r
(
ö°
);

150 
JEQ
:

151 
JNE
:

152 
JLT
:

153 
JGT
:

154 
JLE
:

155 
JGE
:

156 
ex¥
 = 
	`f‹m©
("CASE WHEN %†THEN 0 ELSE sãp+1 END", 
	`sqlôe3_cmp_°r
(
ö°
));

157 
cﬁs
[
SQLITE3_STEP
] = 
	`sqlôe3_add_ex¥
(cﬁs[SQLITE3_STEP], 
ö°
->
pc
, 
°ï
, 
ex¥
);

158 
cﬁ_idx
 = 
SQLITE3_PC
;

159 
ex¥
 = 
	`f‹m©
("CASE WHEN %s THEN %s ELSEÖc END",

160 
	`sqlôe3_cmp_°r
(
ö°
), 
	`vÆue_°r
(&ö°->
jmp
));

162 
JMP
:

163 
cﬁs
[
SQLITE3_STEP
] = 
	`sqlôe3_add_ex¥
(cﬁs[SQLITE3_STEP], 
ö°
->
pc
, 
°ï
, "0");

164 
cﬁ_idx
 = 
SQLITE3_PC
;

165 
ex¥
 = 
	`vÆue_°r
(&
ö°
->
jmp
);

169 
	`îr‹
("oops");

172 
cﬁs
[
cﬁ_idx
] = 
	`sqlôe3_add_ex¥
(cﬁs[cﬁ_idx], 
ö°
->
pc
, 
°ï
, 
ex¥
);

174 i‡(
ö°
->
›
 =
GETC
 || in°->› =
PUTC
 || in°->› =
STORE
) {

175 
°ï
++;

176 
updcﬁs
 = 0;

178 
updcﬁs
 |(1 << 
cﬁ_idx
);

181 
√xt_ö°
:

182 
¥ev_pc
 = 
ö°
->
pc
;

184 
cﬁs
[
SQLITE3_PC
] = 
	`sqlôe3_add_ex¥
(cﬁs[SQLITE3_PC], 
¥ev_pc
, 
°ï
, "pc+1");

185 
cﬁs
[
SQLITE3_STEP
] = 
	`sqlôe3_add_ex¥
(cﬁs[SQLITE3_STEP], 
¥ev_pc
, 
°ï
, "0");

186 
	}
}

189 
	$sqlôe3_emô_°dö
() {

190 
	`emô_löe
("DROP TABLE IF EXISTS stdin;");

191 
	`emô_löe
("CREATE TABLE stdin(i BLOB);");

192 
	`emô_löe
("INSERT INTO stdin(i) VALUES(readfile('input.txt'));");

193 
	}
}

195 
	$sqlôe3_emô_cﬁumn
(
SQLôe3Ca£Ex¥
* 
˚
, 
SQLôe3Cﬁ
 
cﬁ
) {

196 i‡(
˚
 =
NULL
) {

197 
	`emô_löe
(
COL_NAMES
[
cﬁ
]);

201 
¥ev_∑π
 = -1;

202 
¥ev_pc
 = -1;

204 
	`emô_löe
("CASEÖ¯/ %d", 
CHUNKED_FUNC_SIZE
);

205 ; 
˚
 !
NULL
; cê˚->
√xt
) {

206 
∑π
 = 
˚
->
pc
 / 
CHUNKED_FUNC_SIZE
;

207 i‡(
˚
->
pc
 !
¥ev_pc
) {

208 i‡(
¥ev_pc
 != -1) {

210 i‡(
cﬁ
 =
SQLITE3_STEP
) {

211 
	`emô_löe
("ELSE step + 1 END");

213 
	`emô_löe
("ELSE %†END", 
COL_NAMES
[
cﬁ
]);

215 
	`dec_ödít
();

217 i‡(
∑π
 !
¥ev_∑π
) {

218 i‡(
¥ev_pc
 != -1) {

220 i‡(
cﬁ
 =
SQLITE3_PC
 || cﬁ =
SQLITE3_STEP
) {

221 
	`emô_löe
("END");

223 
	`emô_löe
("ELSE %†END", 
COL_NAMES
[
cﬁ
]);

225 
	`dec_ödít
();

227 
	`emô_löe
("WHEN %d THEN", 
∑π
);

228 
	`öc_ödít
();

229 
	`emô_löe
("CASEÖc");

231 
	`emô_löe
("WHEN %d THEN", 
˚
->
pc
);

232 
	`öc_ödít
();

233 
	`emô_löe
("CASE step");

235 
	`emô_löe
("WHEN %d THEN %s", 
˚
->
°ï
, ce->
ex¥
);

236 
¥ev_∑π
 = 
∑π
;

237 
¥ev_pc
 = 
˚
->
pc
;

240 i‡(
cﬁ
 =
SQLITE3_STEP
) {

241 
	`emô_löe
("ELSE step+1 END");

243 
	`emô_löe
("ELSE %†END", 
COL_NAMES
[
cﬁ
]);

245 
i
 = 0; i<2; i++) {

246 
	`dec_ödít
();

247 i‡(
cﬁ
 =
SQLITE3_PC
 || cﬁ =
SQLITE3_STEP
) {

248 
	`emô_löe
("END");

250 
	`emô_löe
("ELSE %†END", 
COL_NAMES
[
cﬁ
]);

253 
	}
}

256 
	$èrgë_sqlôe3
(
ModuÀ
* 
moduÀ
) {

257 
ªg_«mes
 = 
COL_NAMES
;

258 
SQLôe3Ca£Ex¥
 
roŸs
[
SQLITE3_NUM_COLS
] = {};

259 
SQLôe3Ca£Ex¥
* 
cﬁs
[
SQLITE3_NUM_COLS
];

260 
i
 = 0; i < 
SQLITE3_NUM_COLS
; i++) {

261 
roŸs
[
i
].
√xt
 = 
NULL
;

262 
cﬁs
[
i
] = &
roŸs
[i];

264 
	`sqlôe3_å™•o£_ö°s
(
moduÀ
->
ãxt
, 
cﬁs
);

265 
i
 = 0; i < 
SQLITE3_NUM_COLS
; i++) {

266 
cﬁs
[
i
] = 
roŸs
[i].
√xt
;

269 
	`sqlôe3_emô_°dö
();

271 
	`emô_löe
("WITH");

272 
	`öc_ödít
();

273 
	`emô_löe
("elvm AS (");

274 
	`öc_ödít
();

275 
	`emô_löe
("SELECT");

276 
	`öc_ödít
();

277 
i
 = 0; i < 7; i++) {

278 
	`emô_löe
("0 %s,", 
COL_NAMES
[
i
]);

280 
	`emô_löe
("0 step,");

281 
	`emô_löe
("1Ñunning,");

282 
	`emô_löe
("json('{");

283 
mp
 = 0;

284 
D©a
* 
d©a
 = 
moduÀ
->d©a; d©a; d©®d©a->
√xt
, 
mp
++) {

285 i‡(
d©a
->
v
) {

286 
	`emô_löe
(" %c\"%d\":%d", 
mp
 ? ',' : ' ', mp, 
d©a
->
v
);

289 
	`emô_löe
("}') mem,");

290 
	`emô_löe
("(SELECT i FROM stdin) stdin,");

291 
	`emô_löe
("'' stdout,");

292 
	`emô_löe
("0 cycle");

293 
	`dec_ödít
();

294 
	`emô_löe
("UNION ALL SELECT");

295 
	`öc_ödít
();

297 
i
 = 0; i < 
SQLITE3_NUM_COLS
; i++) {

298 
	`sqlôe3_emô_cﬁumn
(
cﬁs
[
i
], i);

299 
	`emô_löe
(",");

301 
	`emô_löe
("cycle + 1");

302 
	`dec_ödít
();

303 
	`emô_löe
("FROMÉlvm WHEREÑunning = 1");

304 
	`dec_ödít
();

305 
	`emô_löe
(")");

306 
	`dec_ödít
();

308 
	`emô_löe
("SELECT writefile('output.txt', stdout) FROMÉlvm"

310 
	}
}

	@target/swift.c

1 
	~<°rög.h
>

2 
	~<ú/ú.h
>

3 
	~<èrgë/utû.h
>

5 
	$swi·_emô_func_¥ﬁogue
(
func_id
) {

6 
	`emô_löe
("");

7 
	`emô_löe
("¥iv©êfun¯func%d(Ë{", 
func_id
);

8 
	`öc_ödít
();

9 
	`emô_löe
("while %d <=Öc &&Öc < %d {",

10 
func_id
 * 
CHUNKED_FUNC_SIZE
, (func_id + 1) * CHUNKED_FUNC_SIZE);

11 
	`öc_ödít
();

12 
	`emô_löe
("switchÖc {");

13 
	`emô_löe
("case -1: /* dummy */");

14 
	`öc_ödít
();

15 
	`emô_löe
("break");

16 
	}
}

18 
	$swi·_emô_func_ïûogue
() {

19 
	`dec_ödít
();

20 
	`emô_löe
("default:");

21 
	`emô_löe
(" break");

22 
	`emô_löe
("}");

23 
	`emô_löe
("pc += 1");

24 
	`dec_ödít
();

25 
	`emô_löe
("}");

26 
	`dec_ödít
();

27 
	`emô_löe
("}");

28 
	}
}

30 
	$swi·_emô_pc_ch™ge
(
pc
) {

31 
	`emô_löe
("");

32 
	`dec_ödít
();

33 
	`emô_löe
("ˇ£ %d:", 
pc
);

34 
	`öc_ödít
();

35 
	}
}

37 
	$swi·_emô_ö°
(
In°
* 
ö°
) {

38 
ö°
->
›
) {

39 
MOV
:

41 c⁄° *
_l
 = 
ªg_«mes
[
ö°
->
d°
.
ªg
];

42 c⁄° *
_r
 = 
	`§c_°r
(
ö°
);

43 i‡(
	`°rcmp
(
_l
, 
_r
)) {

44 
	`emô_löe
("%†%s", 
_l
, 
_r
);

50 
ADD
:

51 
	`emô_löe
("%†(%†+ %sË& " 
UINT_MAX_STR
,

52 
ªg_«mes
[
ö°
->
d°
.
ªg
],

53 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
	`§c_°r
(inst));

56 
SUB
:

57 
	`emô_löe
("%†(%†- %sË& " 
UINT_MAX_STR
,

58 
ªg_«mes
[
ö°
->
d°
.
ªg
],

59 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
	`§c_°r
(inst));

62 
LOAD
:

63 
	`emô_löe
("%†mem[%s]", 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
	`§c_°r
(inst));

66 
STORE
:

67 
	`emô_löe
("mem[%s] = %s", 
	`§c_°r
(
ö°
), 
ªg_«mes
[ö°->
d°
.
ªg
]);

70 
PUTC
:

71 
	`emô_löe
("¥öt(\"\\(UnicodeSˇœr(%s)!)\",Åîmö©‹:\"\")", 
	`§c_°r
(
ö°
));

74 
GETC
:

75 
	`emô_löe
("ifÅrue {");

76 
	`öc_ödít
();

77 
	`emô_löe
("let _c = getchar()");

78 
	`emô_löe
("%†_¯=-1 ? 0 : I¡(_c)", 
ªg_«mes
[
ö°
->
d°
.
ªg
]);

79 
	`dec_ödít
();

80 
	`emô_löe
("}");

83 
EXIT
:

84 
	`emô_löe
("exit(0)");

87 
DUMP
:

90 
EQ
:

91 
NE
:

92 
LT
:

93 
GT
:

94 
LE
:

95 
GE
:

96 
	`emô_löe
("%s = %s ? 1 : 0",

97 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
	`cmp_°r
(inst, "true"));

100 
JEQ
:

101 
JNE
:

102 
JLT
:

103 
JGT
:

104 
JLE
:

105 
JGE
:

106 
JMP
:

107 
	`emô_löe
("if %s {Öc = %s - 1 }",

108 
	`cmp_°r
(
ö°
, "åue"), 
	`vÆue_°r
(&ö°->
jmp
));

112 
	`îr‹
("oops");

114 
	}
}

116 
	$swi·_öô_°©e
(
D©a
* 
d©a
) {

117 
¥ev_mc
 = -1;

118 
mp
 = 0; 
d©a
; d©®d©a->
√xt
, mp++) {

119 i‡(
d©a
->
v
) {

120 
mc
 = 
mp
 / 1000;

121 
¥ev_mc
 !
mc
) {

122 i‡(
¥ev_mc
 != -1) {

123 
	`dec_ödít
();

124 
	`emô_löe
("}");

126 
¥ev_mc
++;

127 
	`emô_löe
("¥iv©êfun¯öô%d(Ë{", 
¥ev_mc
);

128 
	`öc_ödít
();

130 
	`emô_löe
("mem[%d] = %d", 
mp
, 
d©a
->
v
);

134 i‡(
¥ev_mc
 != -1) {

135 
	`dec_ödít
();

136 
	`emô_löe
("}");

139  
¥ev_mc
 + 1;

140 
	}
}

142 
	$èrgë_swi·
(
ModuÀ
* 
moduÀ
) {

143 
	`emô_löe
("import Foundation");

144 
i
 = 0; i < 7; i++) {

145 
	`emô_löe
("¥iv©êv¨ %s: I¡ = 0", 
ªg_«mes
[
i
]);

147 
	`emô_löe
("private var mem = [Int](repeating: 0, count: 1<<24)");

149 
num_öôs
 = 
	`swi·_öô_°©e
(
moduÀ
->
d©a
);

151 
CHUNKED_FUNC_SIZE
 = 256;

152 
num_funcs
 = 
	`emô_chunked_maö_lo›
(
moduÀ
->
ãxt
,

153 
swi·_emô_func_¥ﬁogue
,

154 
swi·_emô_func_ïûogue
,

155 
swi·_emô_pc_ch™ge
,

156 
swi·_emô_ö°
);

157 
	`emô_löe
("");

158 
i
 = 0; i < 
num_öôs
; i++) {

159 
	`emô_löe
("öô%d()", 
i
);

161 
	`emô_löe
("");

162 
	`emô_löe
("whileÅrue {");

163 
	`öc_ödít
();

164 
	`emô_löe
("swôchÖ¯/ %d | 0 {", 
CHUNKED_FUNC_SIZE
);

165 
i
 = 0; i < 
num_funcs
; i++) {

166 
	`emô_löe
("ˇ£ %d:", 
i
);

167 
	`emô_löe
(" func%d()", 
i
);

169 
	`emô_löe
("default:");

170 
	`emô_löe
(" break");

171 
	`emô_löe
("}");

172 
	`dec_ödít
();

173 
	`emô_löe
("}");

174 
	}
}

	@target/tex.c

1 
	~<ú/ú.h
>

2 
	~<èrgë/utû.h
>

4 c⁄° * 
	$ãx_vÆue_°r
(
VÆue
* 
v
) {

5 i‡(
v
->
ty≥
 =
REG
) {

6  
	`f‹m©
("\\@ªg@%s", 
ªg_«mes
[
v
->
ªg
]);

7 } i‡(
v
->
ty≥
 =
IMM
) {

8  
	`f‹m©
("%d", 
v
->
imm
);

10 
	`îr‹
("invalid value");

12 
	}
}

14 c⁄° * 
	$ãx_§c_°r
(
In°
* 
ö°
) {

15  
	`ãx_vÆue_°r
(&
ö°
->
§c
);

16 
	}
}

18 c⁄° * 
	$ãx_cmp_›_°r
(
In°
* 
ö°
) {

19 
›
 = 
	`n‹mÆize_c⁄d
(
ö°
->op, 0);

20 
›
) {

21 
JEQ
:

23 
JLE
:

24 
JLT
:

26 
JGE
:

27 
JGT
:

30 
	`îr‹
("oops");

32 
	}
}

34 
	$ãx_emô_ö°
(
In°
* 
ö°
) {

35 
ö°
->
›
) {

36 
MOV
:

37 
	`emô_löe
("\\edef\\@ªg@%s{%s}%%", 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
	`ãx_§c_°r
(inst));

40 
ADD
:

41 
	`emô_löe
("\\cou¡0=\\@ªg@%s\\ªœx", 
ªg_«mes
[
ö°
->
d°
.
ªg
]);

42 
	`emô_löe
("\\adv™˚\\cou¡0by%s\\ªœx", 
	`ãx_§c_°r
(
ö°
));

43 
	`emô_löe
("\\i‚um\\cou¡0>%d\\adv™˚\\cou¡0by-%s\\fi", 
UINT_MAX
, "16777216");

44 
	`emô_löe
("\\edef\\@ªg@%s{\\the\\cou¡0}%%", 
ªg_«mes
[
ö°
->
d°
.
ªg
]);

47 
SUB
:

48 
	`emô_löe
("\\cou¡0=\\@ªg@%s\\ªœx", 
ªg_«mes
[
ö°
->
d°
.
ªg
]);

49 
	`emô_löe
("\\adv™˚\\cou¡0by-%s\\ªœx", 
	`ãx_§c_°r
(
ö°
));

50 
	`emô_löe
("\\ifnum\\count0<0\\advance\\count0by%s\\fi", "16777216");

51 
	`emô_löe
("\\edef\\@ªg@%s{\\the\\cou¡0}%%", 
ªg_«mes
[
ö°
->
d°
.
ªg
]);

54 
LOAD
:

55 
	`emô_löe
("\\def\\@ªg@%s{0}%%", 
ªg_«mes
[
ö°
->
d°
.
ªg
]);

56 
	`emô_löe
("\\expandafter\\ifx\\csname @mem@%s\\endcsname\\relax\\else\\edef\\@reg@%s{\\csname @mem@%s\\endcsname}\\fi",

57 
	`ãx_§c_°r
(
ö°
), 
ªg_«mes
[ö°->
d°
.
ªg
],Åex_src_str(inst));

60 
STORE
:

61 
	`emô_löe
("\\expandafter\\let\\csname @mem@%s\\endcsname\\@reg@%s",

62 
	`ãx_§c_°r
(
ö°
), 
ªg_«mes
[ö°->
d°
.
ªg
]);

65 
PUTC
:

67 
	`emô_löe
("\\immedüã\\wrôe\\@out{%s}%%", 
	`ãx_§c_°r
(
ö°
));

70 
GETC
:

72 
	`emô_löe
("\\ªad-1to\\@ãmp\\cou¡0=\\@ãmp\\edef\\@ªg@%s{\\the\\cou¡0}%%", 
ªg_«mes
[
ö°
->
d°
.
ªg
]);

75 
EXIT
:

76 
	`emô_löe
("\\let\\@@next\\relax");

79 
DUMP
:

82 
EQ
:

83 
LT
:

84 
GT
:

85 
	`emô_löe
("\\ifnum\\@reg@%s%s%s\\edef\\@reg@%s{1}\\else\\edef\\@reg@%s{0}\\fi%%",

86 
ªg_«mes
[
ö°
->
d°
.
ªg
],

87 
	`ãx_cmp_›_°r
(
ö°
),

88 
	`ãx_§c_°r
(
ö°
),

89 
ªg_«mes
[
ö°
->
d°
.
ªg
],

90 
ªg_«mes
[
ö°
->
d°
.
ªg
]);

92 
NE
:

93 
	`emô_löe
("\\ifnum\\@reg@%s=%s\\edef\\@reg@%s{0}\\else\\edef\\@reg@%s{1}\\fi%%",

94 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
	`ãx_§c_°r
(inst),

95 
ªg_«mes
[
ö°
->
d°
.
ªg
],Ñeg_names[inst->dst.reg]);

97 
LE
:

98 
GE
:

99 
	`emô_löe
("\\ifnum\\@reg@%s=%s\\edef\\@reg@%s{1}\\else"

101 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
	`ãx_§c_°r
(inst),

102 
ªg_«mes
[
ö°
->
d°
.
ªg
],

103 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
	`ãx_cmp_›_°r
(ö°), 
	`ãx_§c_°r
(inst),

104 
ªg_«mes
[
ö°
->
d°
.
ªg
],

105 
ªg_«mes
[
ö°
->
d°
.
ªg
]);

108 
JEQ
:

109 
JLT
:

110 
JGT
:

111 
	`emô_löe
("\\cou¡0=%s\\ªœx\\adv™˚\\cou¡0by-1\\ªœx", 
	`ãx_vÆue_°r
(&
ö°
->
jmp
));

112 
	`emô_löe
("\\ifnum\\@reg@%s%s%s\\edef\\@reg@pc{\\the\\count0}\\fi",

113 
ªg_«mes
[
ö°
->
d°
.
ªg
],

114 
	`ãx_cmp_›_°r
(
ö°
),

115 
	`ãx_§c_°r
(
ö°
));

117 
JNE
:

118 
	`emô_löe
("\\cou¡0=%s\\ªœx\\adv™˚\\cou¡0by-1\\ªœx", 
	`ãx_vÆue_°r
(&
ö°
->
jmp
));

119 
	`emô_löe
("\\ifnum\\@reg@%s=%s\\else\\edef\\@reg@pc{\\the\\count0}\\fi",

120 
ªg_«mes
[
ö°
->
d°
.
ªg
],

121 
	`ãx_§c_°r
(
ö°
));

123 
JLE
:

124 
JGE
:

125 
	`emô_löe
("\\cou¡0=%s\\ªœx\\adv™˚\\cou¡0by-1\\ªœx", 
	`ãx_vÆue_°r
(&
ö°
->
jmp
));

126 
	`emô_löe
("\\ifnum\\@reg@%s=%s\\edef\\@reg@pc{\\the\\count0}\\fi",

127 
ªg_«mes
[
ö°
->
d°
.
ªg
],

128 
	`ãx_§c_°r
(
ö°
));

129 
	`emô_löe
("\\ifnum\\@reg@%s%s%s\\edef\\@reg@pc{\\the\\count0}\\fi",

130 
ªg_«mes
[
ö°
->
d°
.
ªg
],

131 
	`ãx_cmp_›_°r
(
ö°
),

132 
	`ãx_§c_°r
(
ö°
));

134 
JMP
:

135 
	`emô_löe
("\\cou¡0=%s\\ªœx\\adv™˚\\cou¡0by-1\\ªœx", 
	`ãx_vÆue_°r
(&
ö°
->
jmp
));

136 
	`emô_löe
("\\edef\\@reg@pc{\\the\\count0}%%");

140 
	`îr‹
("oops");

142 
	}
}

144 
	$ãx_öô_°©e
(
D©a
* 
d©a
) {

146 
i
 = 0; i < 7; i++) {

147 
	`emô_löe
("\\def\\@ªg@%s{0}", 
ªg_«mes
[
i
]);

151 
mp
 = 0; 
d©a
; d©®d©a->
√xt
, mp++) {

152 if(
d©a
->
v
 != 0) {

153 
	`emô_löe
("\\ex∑nda·î\\def\\c¢amê@mem@%d\\ídc¢ame{%d}", 
mp
, 
d©a
->
v
);

157 
	}
}

159 
	$èrgë_ãx
(
ModuÀ
* 
moduÀ
) {

160 
	`emô_löe
("\\catcode`\\@=11\\relax");

163 
	`ãx_öô_°©e
(
moduÀ
->
d©a
);

167 
	`emô_löe
("\\newwrite\\@out");

169 
	`emô_löe
("\\immediate\\openout\\@out=\\jobname.tex.elvm.out\\relax");

172 
¥ev_pc
 = -1;

173 
In°
* 
ö°
 = 
moduÀ
->
ãxt
; in°; in° = in°->
√xt
) {

174 i‡(
¥ev_pc
 !
ö°
->
pc
) {

175 if(
¥ev_pc
 != -1) {

176 
	`emô_löe
("}");

178 
	`emô_löe
("\\ex∑nda·î\\def\\c¢amê@ö°@%d\\ídc¢ame{%%", 
ö°
->
pc
);

180 
¥ev_pc
 = 
ö°
->
pc
;

181 
	`ãx_emô_ö°
(
ö°
);

183 if(
¥ev_pc
 != -1) {

184 
	`emô_löe
("}");

188 
	`emô_löe
("\\def\\@loop@main{%%");

189 
	`emô_löe
("\\let\\@@next\\@loop@main");

191 
	`emô_löe
("\\csname @inst@\\@reg@pc\\endcsname");

193 
	`emô_löe
("\\count0=\\@reg@pc\\relax");

194 
	`emô_löe
("\\advance\\count0by1\\relax");

195 
	`emô_löe
("\\edef\\@reg@pc{\\the\\count0}%%");

196 
	`emô_löe
("\\@@next}\\@loop@main");

199 
	`emô_löe
("\\immediate\\closeout\\@out");

200 
	`emô_löe
("\\bye");

201 
	}
}

	@target/tf.c

1 
	~<ú/ú.h
>

2 
	~<èrgë/utû.h
>

4 
	$öô_°©e_tf
(
D©a
* 
d©a
) {

5 
	`emô_löe
("import sys");

6 
	`emô_löe
("importÅensorflowásÅf");

7 
	`emô_löe
("fromÅensorflow.python.framework import function");

8 
	`emô_löe
("fromÅensorflow.python.framework importÅensor_shape");

9 
	`emô_löe
("");

11 
i
 = 0; i < 7; i++) {

13 
	`emô_löe
("%†tf.c⁄°™t(0,Çame='%s')", 
ªg_«mes
[
i
],Ñeg_names[i]);

17 
	`emô_löe
("data = []");

18 
mp
 = 0; 
d©a
; d©®d©a->
√xt
, mp++) {

19 
	`emô_löe
("d©a.≠≥nd(%d)", 
d©a
->
v
);

21 
	`emô_löe
("mem =Åf.concat(0, [data, "

23 
	`emô_löe
("done =Åf.constant(0,Çame='done')");

24 
	`emô_löe
("out =Åf.constant('',Çame='out')");

25 
	`emô_löe
("CHAR_TBL =Åf.constant([chr(i) for i in xrange(256)])");

26 
	`emô_löe
("input = map(ord, sys.stdin.read())");

27 
	`emô_löe
("INPUT_LEN =Üen(input)");

28 
	`emô_löe
("INPUT =Åf.placeholder("

30 
	`emô_löe
("inp =Åf.constant(-1,Çame='inp')");

31 
	`emô_löe
("");

32 
	`emô_löe
("defÑead_input(inp):");

33 
	`öc_ödít
();

34 
	`emô_löe
("global INPUT");

35 
	`emô_löe
("global INPUT_LEN");

36 
	`emô_löe
("inp = inp +Åf.constant(1)");

37 
	`emô_löe
("r =Åf.cond(tf.less(inp, INPUT_LEN),"

39 
	`emô_löe
("r.set_shape(())");

40 
	`emô_löe
("returnÑ, inp");

41 
	`dec_ödít
();

43 
	`emô_löe
("");

44 
	`emô_löe
("@function.Defun(tf.int32,Åf.int32)");

45 
	`emô_löe
("defÉlvm_add(x, y):");

46 
	`emô_löe
("Ñeturn (x + y) %% 16777216");

47 
	`emô_löe
("");

48 
	`emô_löe
("@function.Defun(tf.int32,Åf.int32)");

49 
	`emô_löe
("defÉlvm_sub(x, y):");

50 
	`emô_löe
("Ñeturn (x - y + 16777216) %% 16777216");

51 
	`emô_löe
("");

52 
	`emô_löe
("@function.Defun(tf.int32,Åf.int32,Åf.int32)");

53 
	`emô_löe
("defÉlvm_store(mem, x, y):");

54 
	`emô_löe
("ÑeturnÅf.concat(0, [mem[:y], [x], mem[y+1:]])");

55 
	}
}

57 c⁄° * 
	$tf_vÆue_°r
(
VÆue
* 
v
) {

58 i‡(
v
->
ty≥
 =
REG
) {

59  
ªg_«mes
[
v
->
ªg
];

60 } i‡(
v
->
ty≥
 =
IMM
) {

61  
	`f‹m©
("tf.c⁄°™t(%d)", 
v
->
imm
);

63 
	`îr‹
("invalid value");

65 
	}
}

67 c⁄° * 
	$tf_§c_°r
(
In°
* 
ö°
) {

68  
	`tf_vÆue_°r
(&
ö°
->
§c
);

69 
	}
}

71 c⁄° * 
	$tf_cmp
(
In°
* 
ö°
) {

72 
uöt
 
›
 = 
	`n‹mÆize_c⁄d
(
ö°
->›, 
Ál£
);

73 c⁄° * 
OPS
[] = {

76  
	`f‹m©
("tf.%s(%s, %s)",

77 
OPS
[
›
 - 
JEQ
], 
	`tf_vÆue_°r
(&
ö°
->
d°
), 
	`tf_§c_°r
(inst));

78 
	}
}

80 
	$tf_emô_ö°
(
In°
* 
ö°
) {

81 
ö°
->
›
) {

82 
MOV
:

83 
	`emô_löe
("%†%s", 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
	`tf_§c_°r
(inst));

86 
ADD
:

87 
	`emô_löe
("%s =Élvm_add(%s, %s)",

88 
ªg_«mes
[
ö°
->
d°
.
ªg
],

89 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
	`tf_§c_°r
(inst));

90 
	`emô_löe
("%s.£t_sh≠e(())", 
ªg_«mes
[
ö°
->
d°
.
ªg
]);

93 
SUB
:

94 
	`emô_löe
("%s =Élvm_sub(%s, %s)",

95 
ªg_«mes
[
ö°
->
d°
.
ªg
],

96 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
	`tf_§c_°r
(inst));

97 
	`emô_löe
("%s.£t_sh≠e(())", 
ªg_«mes
[
ö°
->
d°
.
ªg
]);

100 
LOAD
:

101 
	`emô_löe
("%†mem[%s]", 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
	`tf_§c_°r
(inst));

104 
	`emô_löe
("%s.£t_sh≠e(())", 
ªg_«mes
[
ö°
->
d°
.
ªg
]);

107 
STORE
:

108 
	`emô_löe
("mem =Élvm_store(mem, %s, %s)",

109 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
	`tf_§c_°r
(inst));

112 
PUTC
:

113 
	`emô_löe
("ouàouà+ CHAR_TBL[tf.mod(%s, 256)]", 
	`tf_§c_°r
(
ö°
));

114 
	`emô_löe
("out.set_shape(())");

117 
GETC
:

118 
	`emô_löe
("%s, inp =Ñead_input(inp)",

119 
ªg_«mes
[
ö°
->
d°
.
ªg
]);

122 
EXIT
:

123 
	`emô_löe
("done =Åf.constant(1)");

126 
DUMP
:

129 
EQ
:

130 
NE
:

131 
LT
:

132 
GT
:

133 
LE
:

134 
GE
:

135 
	`emô_löe
("%s =Åf.cond(%s,"

137 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
	`tf_cmp
(inst));

140 
JEQ
:

141 
JNE
:

142 
JLT
:

143 
JGT
:

144 
JLE
:

145 
JGE
:

146 
	`emô_löe
("pc =Åf.cond(%s,Üambda: %s - 1,Üambda:Öc)",

147 
	`tf_cmp
(
ö°
), 
	`tf_vÆue_°r
(&ö°->
jmp
));

150 
JMP
:

151 
	`emô_löe
("p¯%†- 1", 
	`tf_vÆue_°r
(&
ö°
->
jmp
));

155 
	`îr‹
("oops");

157 
	}
}

159 
	$tf_emô_func_ïûogue
(c⁄° * 
¨gs
) {

160 
	`emô_löe
("pc =Öc + 1");

161 
	`emô_löe
("ªtu∫ [%s]", 
¨gs
);

162 
	`dec_ödít
();

163 
	}
}

165 
	$èrgë_tf
(
ModuÀ
* 
moduÀ
) {

166 
	`öô_°©e_tf
(
moduÀ
->
d©a
);

168 c⁄° 
STATE_ARGS_STR
[] = "a,b,c,d,bp,sp,pc,done,mem,out,inp";

169 
¥ev_pc
 = -1;

170 
In°
* 
ö°
 = 
moduÀ
->
ãxt
; in°; in° = in°->
√xt
) {

171 i‡(
¥ev_pc
 !
ö°
->
pc
) {

172 i‡(
ö°
->
pc
) {

173 
	`tf_emô_func_ïûogue
(
STATE_ARGS_STR
);

175 
	`emô_löe
("");

176 
	`emô_löe
("de‡pc_%d(%s):", 
ö°
->
pc
, 
STATE_ARGS_STR
);

177 
	`öc_ödít
();

178 
	`emô_löe
("global CHAR_TBL");

180 
¥ev_pc
 = 
ö°
->
pc
;

181 
	`tf_emô_ö°
(
ö°
);

183 
	`tf_emô_func_ïûogue
(
STATE_ARGS_STR
);

185 
	`emô_löe
("");

186 
	`emô_löe
("de‡run_°ï(%s):", 
STATE_ARGS_STR
);

187 
	`öc_ödít
();

189 
	`emô_löe
("fn_pairs = []");

190 
i
 = 0; i < 
¥ev_pc
; i++) {

191 
	`emô_löe
("fn_pairs.append((tf.equal(pc, %d),Üambda:Öc_%d(%s)))",

192 
i
, i, 
STATE_ARGS_STR
);

194 
	`emô_löe
("r =Åf.case(fn_pairs,Üambda:Öc_%d(%s))",

195 
¥ev_pc
, 
STATE_ARGS_STR
);

196 
	`emô_löe
("r[8].set_shape([1<<24])");

197 
	`emô_löe
("returnÑ");

198 
	`dec_ödít
();

200 
	`emô_löe
("");

201 
	`emô_löe
("loop =Åf.while_loop(");

202 
	`öc_ödít
();

203 
	`emô_löe
("œmbd®%s:Åf.equÆ(d⁄e, 0),", 
STATE_ARGS_STR
);

204 
	`emô_löe
("run_step,");

205 
	`emô_löe
("lo›_v¨s=[%s])", 
STATE_ARGS_STR
);

206 
	`dec_ödít
();

208 
	`emô_löe
("");

209 
	`emô_löe
("sess =Åf.Session()");

210 
	`emô_löe
("tf.train.write_graph(loop[9].graph.as_graph_def(),"

212 
	`emô_löe
("tf.initialize_all_variables().run(session=sess)");

213 
	`emô_löe
("r = sess.run(loop, feed_dict={INPUT: input})");

215 
	`emô_löe
("");

216 
	`emô_löe
("sys.stdout.write(r[9])");

217 
	}
}

	@target/tm.c

1 
	~<as£π.h
>

2 
	~<˘y≥.h
>

3 
	~<ú/ú.h
>

4 
	~<èrgë/utû.h
>

6 
	gtm_√xt_°©e
;

7 
	$tm_√w_°©e
() {

8  
tm_√xt_°©e
++;

9 
	}
}

10 
	gtm_q_ªje˘
;

18 íum {
	mTM_BLANK
, 
	mTM_START
, 
	mTM_END
, 
	mTM_ZERO
, 
	mTM_ONE
, 
	mTM_REGISTER
, 
	mTM_ADDRESS
, 
	mTM_VALUE
, 
	mTM_OUTPUT
, 
	mTM_SRC
, 
	mTM_DST
, 
	mTM_NUM_SYMBOLS
} 
	ttm_symbﬁ_t
;

19 c⁄° *
	gtm_symbﬁ_«mes
[] = {"_", "^", "$", "0", "1", "r", "a", "v", "o", "s", "d"};

20 c⁄° 
	gtm_bô
[2] = {
TM_ZERO
, 
TM_ONE
};

22 c⁄° 
	gtm_w‹d_size
 = 24;

25 
	mTM_SKIP_BEFORE_SRC
 = 1,

26 
	mTM_SKIP_AFTER_SRC
 = 2,

27 
	mTM_SKIP_BEFORE_DST
 = 4,

28 
	mTM_SKIP_AFTER_DST
 = 8

29 } 
	ttm_wrôemode_t
;

31 
	$tm_ötcmp
(
x
, 
y
) {

32 i‡(
x
 > 
y
)  +1;

33 i‡(
x
 < 
y
)  -1;

35 
	}
}

37 
	$tm_commít
(c⁄° * 
fmt
, ...) {

38 
va_li°
 
≠
;

39 
	`va_°¨t
(
≠
, 
fmt
);

40 * 
r
 = 
	`vf‹m©
(
fmt
, 
≠
);

41 
	`va_íd
(
≠
);

42 
	`¥ötf
("// %s\n", 
r
);

43 
	}
}

51 
	$tm_å™sôi⁄
(
q
, 
tm_symbﬁ_t
 
a
,Åm_symbﬁ_à
b
, 
d
, 
r
) {

52 c⁄° *
d«me
;

53 i‡(
d
 =-1Ë
d«me
 = "L";

54 i‡(
d
 =0Ë
d«me
 = "N";

55 i‡(
d
 =+1Ë
d«me
 = "R";

56 
	`îr‹
("övÆid dúe˘i⁄ %d", 
d
);

57 
	`emô_löe
("%d %s %d %s %s",

58 
q
, 
tm_symbﬁ_«mes
[
a
],

59 
r
, 
tm_symbﬁ_«mes
[
b
], 
d«me
);

60  
r
;

61 
	}
}

66 
	$tm_wrôe
(
q
, 
tm_symbﬁ_t
 
b
, 
d
, 
r
) {

67 
tm_symbﬁ_t
 
a
=0;á<
TM_NUM_SYMBOLS
;á++)

68 
	`tm_å™sôi⁄
(
q
, 
a
, 
b
, 
d
, 
r
);

69  
r
;

70 
	}
}

77 
	$tm_wrôe_if
(
q
,

78 
tm_symbﬁ_t
 
a
, 
ba
, 
da
, 
ø
,

79 
tm_symbﬁ_t
 
b
, 
d
, 
r
) {

80 
tm_symbﬁ_t
 
s
=0; s<
TM_NUM_SYMBOLS
; s++)

81 i‡(
s
 =
a
Ë
	`tm_å™sôi⁄
(
q
, s, 
ba
, 
da
, 
ø
);

82 
	`tm_å™sôi⁄
(
q
, 
s
, 
b
, 
d
, 
r
);

83  
r
;

84 
	}
}

86 
	$tm_wrôe_if2
(
q
,

87 
tm_symbﬁ_t
 
a1
, 
b1
, 
d1
, 
r1
,

88 
tm_symbﬁ_t
 
a2
, 
b2
, 
d2
, 
r2
,

89 
tm_symbﬁ_t
 
b
, 
d
, 
r
) {

90 
tm_symbﬁ_t
 
s
=0; s<
TM_NUM_SYMBOLS
; s++)

91 i‡(
s
 =
a1
Ë
	`tm_å™sôi⁄
(
q
, s, 
b1
, 
d1
, 
r1
);

92 i‡(
s
 =
a2
Ë
	`tm_å™sôi⁄
(
q
, s, 
b2
, 
d2
, 
r2
);

93 
	`tm_å™sôi⁄
(
q
, 
s
, 
b
, 
d
, 
r
);

94  
r
;

95 
	}
}

99 
	$tm_move
(
q
, 
d
, 
r
) {

100 
tm_symbﬁ_t
 
s
=0; s<
TM_NUM_SYMBOLS
; s++)

101 
	`tm_å™sôi⁄
(
q
, 
s
, s, 
d
, 
r
);

102  
r
;

103 
	}
}

110 
	$tm_move_if
(
q
,

111 
tm_symbﬁ_t
 
a
, 
da
, 
ø
,

112 
d
, 
r
) {

113 
tm_symbﬁ_t
 
s
=0; s<
TM_NUM_SYMBOLS
; s++)

114 i‡(
s
 =
a
Ë
	`tm_å™sôi⁄
(
q
, s, s, 
da
, 
ø
);

115 
	`tm_å™sôi⁄
(
q
, 
s
, s, 
d
, 
r
);

116  
r
;

117 
	}
}

125 
	$tm_move_if2
(
q
,

126 
tm_symbﬁ_t
 
a
, 
da
, 
ø
,

127 
tm_symbﬁ_t
 
b
, 
db
, 
rb
,

128 
d
, 
r
) {

129 
tm_symbﬁ_t
 
s
=0; s<
TM_NUM_SYMBOLS
; s++)

130 i‡(
s
 =
a
Ë
	`tm_å™sôi⁄
(
q
, s, s, 
da
, 
ø
);

131 i‡(
s
 =
b
Ë
	`tm_å™sôi⁄
(
q
, s, s, 
db
, 
rb
);

132 
	`tm_å™sôi⁄
(
q
, 
s
, s, 
d
, 
r
);

133  
r
;

134 
	}
}

138 
	$tm_no›
(
q
, 
r
) {

139  
	`tm_move
(
q
, 0, 
r
);

140 
	}
}

146 
	$tm_ö£π
(
q
, 
tm_symbﬁ_t
 
a
, 
d
, 
r
) {

147 
q0
 = 
	`tm_√w_°©e
(), 
q1
 =Åm_new_state();

148 
	`tm_wrôe_if2
(
q
, 
TM_ZERO
, 
a
, 
d
, 
q0
, 
TM_ONE
,á, d, 
q1
,á, d, 
r
);

149 
	`tm_wrôe_if2
(
q0
, 
TM_ZERO
, TM_ZERO, 
d
, q0, 
TM_ONE
, TM_ZERO, d, 
q1
, TM_ZERO, d, 
r
);

150 
	`tm_wrôe_if2
(
q1
, 
TM_ZERO
, 
TM_ONE
, 
d
, 
q0
, TM_ONE, TM_ONE, d, q1, TM_ONE, d, 
r
);

151  
r
;

152 
	}
}

157 
	$tm_wrôe_tm_bôs
(
q
, 
x
, 
n
, 
mode
, 
r
) {

158 
i
=
n
-1; i>=0; i--) {

159 i‡(
mode
 & 
TM_SKIP_BEFORE_DST
)

160 
q
 = 
	`tm_move
(q, +1, 
	`tm_√w_°©e
());

161 
q
 = 
	`tm_wrôe
(q, (1<<
i
)&
x
?
TM_ONE
:
TM_ZERO
, +1, 
	`tm_√w_°©e
());

162 i‡(
mode
 & 
TM_SKIP_AFTER_DST
)

163 
q
 = 
	`tm_move
(q, +1, 
	`tm_√w_°©e
());

165  
	`tm_no›
(
q
, 
r
);

166 
	}
}

168 
	$tm_îa£_tm_bôs
(
q
, 
r
) {

169 
îa£
 = 
q
, 
skù
 = 
	`tm_√w_°©e
();

170 
	`tm_wrôe_if2
(
îa£
, 
TM_ZERO
, 
TM_BLANK
, +1, 
skù
, 
TM_ONE
, TM_BLANK, +1, skù, TM_BLANK, 0, 
r
);

171 
	`tm_move
(
skù
, +1, 
îa£
);

172  
r
;

173 
	}
}

178 
	$tm_föd
(
q
, 
d
, 
a
, 
r_yes
, 
r_no
) {

179 
tm_symbﬁ_t
 
m¨kî
 = 
d
 < 0 ? 
TM_START
 : 
TM_END
;

180 
	`tm_move_if2
(
q
, 
a
, 0, 
r_yes
, 
m¨kî
, 0, 
r_no
, 
d
, q);

181  
r_yes
;

182 
	}
}

186 
	$tm_ªwöd
(
q
, 
r
) {

187 
	`tm_move_if
(
q
, 
TM_START
, 0, 
r
, -1, q);

188  
r
;

189 
	}
}

191 
	$tm_ffwd
(
q
, 
r
) {

192 
	`tm_move_if
(
q
, 
TM_END
, 0, 
r
, +1, q);

193  
r
;

194 
	}
}

199 
	$tm_föd_loˇti⁄
(
q
, 
tm_symbﬁ_t
 
ty≥
, 
addr
, 
width
, 
r_found
, 
r_nŸfound
) {

200 
q°¨t
 = 
q
;

201 
q
 = 
	`tm_föd
(q, +1, 
ty≥
, 
	`tm_√w_°©e
(), 
r_nŸfound
);

202 
q
 = 
	`tm_move
(q, +1, 
	`tm_√w_°©e
());

203 
i
=
width
-1; i>=0; i--) {

204 
q
 = 
	`tm_move
(q, +1, 
	`tm_√w_°©e
());

205 
tm_symbﬁ_t
 
tm_bô
 = (1<<
i
)&
addr
 ? 
TM_ONE
 : 
TM_ZERO
;

206 
q_m©ch
 = 
	`tm_√w_°©e
();

207 
	`tm_move_if
(
q
,

208 
tm_bô
, +1, 
q_m©ch
,

209 +1, 
q°¨t
);

210 
q
 = 
q_m©ch
;

212 
q
 = 
	`tm_move
(q, +1, 
	`tm_√w_°©e
());

213 
	`tm_move_if
(
q
,

214 
TM_VALUE
, +1, 
r_found
,

215 0, 
tm_q_ªje˘
);

216  
r_found
;

217 
	}
}

219 
	$tm_√w_loˇti⁄
(
q
, 
tm_symbﬁ_t
 
ty≥
, 
addr
, 
awidth
, 
vÆ
, 
r
) {

220 
q
 = 
	`tm_ffwd
(q, 
	`tm_√w_°©e
());

221 
q
 = 
	`tm_wrôe
(q, 
ty≥
, +1, 
	`tm_√w_°©e
());

222 
q
 = 
	`tm_move
(q, +1, 
	`tm_√w_°©e
());

223 
q
 = 
	`tm_wrôe_tm_bôs
(q, 
addr
, 
awidth
, 
TM_SKIP_AFTER_DST
, 
	`tm_√w_°©e
());

224 
q
 = 
	`tm_wrôe
(q, 
TM_VALUE
, +1, 
	`tm_√w_°©e
());

225 
q
 = 
	`tm_move
(q, +1, 
	`tm_√w_°©e
());

226 
q
 = 
	`tm_wrôe_tm_bôs
(q, 
vÆ
, 
tm_w‹d_size
, 
TM_SKIP_AFTER_DST
, 
	`tm_√w_°©e
());

227  
	`tm_wrôe
(
q
, 
TM_END
, -1, 
r
);

228 
	}
}

230 
	$tm_föd_ªgi°î
(
q
, 
Reg
 
ªg
, 
r
) {

231 
q
 = 
	`tm_ªwöd
(q, 
	`tm_√w_°©e
());

232  
	`tm_föd_loˇti⁄
(
q
, 
TM_REGISTER
, 
ªg
, 3, 
r
, 
tm_q_ªje˘
);

233 
	}
}

235 
	$tm_föd_mem‹y
(
q
, 
addr
, 
r
) {

236 
q
 = 
	`tm_ªwöd
(q, 
	`tm_√w_°©e
());

237 
q_≠≥nd
 = 
	`tm_√w_°©e
();

238 
	`tm_föd_loˇti⁄
(
q
, 
TM_ADDRESS
, 
addr
, 
tm_w‹d_size
, 
r
, 
q_≠≥nd
);

239 
q
 = 
	`tm_√w_loˇti⁄
(
q_≠≥nd
, 
TM_ADDRESS
, 
addr
, 
tm_w‹d_size
, 0, 
	`tm_√w_°©e
());

240 
q
 = 
	`tm_föd
(q, -1, 
TM_VALUE
, 
	`tm_√w_°©e
(), 
tm_q_ªje˘
);

241 
	`tm_move
(
q
, +1, 
r
);

242  
r
;

243 
	}
}

251 
	$tm_c›y
(
q
, 
d
, 
mode
, 
r
) {

253 
q_°‹e
[2] = {
	`tm_√w_°©e
(),Åm_new_state()};

254 
q_˛ón§c
 = 
	`tm_√w_°©e
(), 
q_˛ónd°
 =Åm_new_state();

255 
q_√xâm_bô
 = 
q
;

257 i‡(
mode
 & 
TM_SKIP_BEFORE_SRC
) {

260 
q
 = 
	`tm_wrôe
(q, 
TM_SRC
, 0, 
	`tm_√w_°©e
());

261 
q
 = 
	`tm_move
(q, +1, 
	`tm_√w_°©e
());

262 
	`tm_move_if2
(
q
,

263 
TM_ZERO
, 0, 
q_°‹e
[0],

264 
TM_ONE
, 0, 
q_°‹e
[1],

265 0, 
q_˛ón§c
);

268 
	`tm_wrôe_if2
(
q
,

269 
TM_ZERO
, 
TM_SRC
, 0, 
q_°‹e
[0],

270 
TM_ONE
, 
TM_SRC
, 0, 
q_°‹e
[1],

271 
TM_BLANK
, 0, 
q_˛ónd°
);

273 
q_wrôe
 = 
	`tm_√w_°©e
();

274 
b
=0; b<2; b++) {

275 
q
 = 
q_°‹e
[
b
];

276 
q
 = 
	`tm_föd
(q, 
d
, 
TM_DST
, 
	`tm_√w_°©e
(), 
tm_q_ªje˘
);

277 i‡(
mode
 & 
TM_SKIP_BEFORE_DST
)

278 
q
 = 
	`tm_wrôe
(q, 
TM_BLANK
, +1, 
	`tm_√w_°©e
());

279 
	`tm_wrôe
(
q
, 
tm_bô
[
b
], +1, 
q_wrôe
);

281 
q
 = 
q_wrôe
;

282 i‡(
mode
 & 
TM_SKIP_AFTER_DST
)

283 
q
 = 
	`tm_move
(q, +1, 
	`tm_√w_°©e
());

284 
q
 = 
	`tm_wrôe
(q, 
TM_DST
, 0, 
	`tm_√w_°©e
());

285 
q
 = 
	`tm_föd
(q, -
d
, 
TM_SRC
, 
	`tm_√w_°©e
(), 
tm_q_ªje˘
);

286 
q
 = 
	`tm_wrôe
(q, 
TM_BLANK
, +1, 
	`tm_√w_°©e
());

287 i‡(
mode
 & (
TM_SKIP_BEFORE_SRC
|
TM_SKIP_AFTER_SRC
))

288 
	`tm_move
(
q
, +1, 
q_√xâm_bô
);

290 
	`tm_no›
(
q
, 
q_√xâm_bô
);

292 
q
 = 
q_˛ón§c
;

293 
q
 = 
	`tm_move
(q, -1, 
	`tm_√w_°©e
());

294 
q
 = 
	`tm_wrôe
(q, 
TM_BLANK
, 0, 
q_˛ónd°
);

295 
q
 = 
	`tm_föd
(q, 
d
, 
TM_DST
, 
	`tm_√w_°©e
(), 
tm_q_ªje˘
);

296  
	`tm_wrôe
(
q
, 
TM_BLANK
, 0, 
r
);

297 
	}
}

302 
	$tm_c›y_vÆue
(
q
, 
In°
 *
ö°
, 
mode
, 
r
) {

303 
	`as£π
(
ö°
->
d°
.
ty≥
 =
REG
);

304 
q
 = 
	`tm_föd_ªgi°î
(q, 
ö°
->
d°
.
ªg
, 
	`tm_√w_°©e
());

305 i‡(
ö°
->
§c
.
ty≥
 =
REG
) {

306 i‡(
ö°
->
d°
.
ªg
 =ö°->
§c
.reg) {

307 i‡(
mode
 =
TM_SKIP_AFTER_DST
) {

309 
q_íd
 = 
	`tm_√w_°©e
(), 
q_√xt
 = 
q
;

310 
q
 = 
	`tm_move
(q, +1, 
	`tm_√w_°©e
());

311 
	`tm_move_if2
(
q
, 
TM_ZERO
, +1, 
q_√xt
, 
TM_ONE
, +1, q_√xt, -1, 
q_íd
);

312 
q
 = 
q_íd
;

313 
q
 = 
	`tm_move
(q, -1, 
	`tm_√w_°©e
());

314 
q_√xt
 = 
q
;

315 
q0
 = 
	`tm_√w_°©e
(), 
q1
 =Åm_new_state();

316 
q_íd
 = 
	`tm_√w_°©e
();

317 
	`tm_move_if2
(
q
, 
TM_ZERO
, -1, 
q0
, 
TM_ONE
, -1, 
q1
, +1, 
q_íd
);

318 
	`tm_wrôe
(
q0
, 
TM_ZERO
, -1, 
q_√xt
);

319 
	`tm_wrôe
(
q1
, 
TM_ONE
, -1, 
q_√xt
);

320 
q
 = 
q_íd
;

321 
	`tm_move_if2
(
q
, 
TM_ZERO
, +1, q, 
TM_ONE
, +1, q, 0, 
r
);

324 
	`tm_no›
(
q
, 
r
);

327 
q
 = 
	`tm_wrôe
(q, 
TM_DST
, -1, 
	`tm_√w_°©e
());

328 
q
 = 
	`tm_föd_ªgi°î
(q, 
ö°
->
§c
.
ªg
, 
	`tm_√w_°©e
());

329 
q
 = 
	`tm_c›y
(q, 
	`tm_ötcmp
(
ö°
->
d°
.
ªg
, in°->
§c
.ªg), 
TM_SKIP_BEFORE_SRC
|
mode
, 
r
);

331 } i‡(
ö°
->
§c
.
ty≥
 =
IMM
) {

332 
q
 = 
	`tm_wrôe_tm_bôs
(q, 
ö°
->
§c
.
imm
, 
tm_w‹d_size
, 
mode
, 
r
);

334 
	`îr‹
("invalid srcÅype");

335  
r
;

336 
	}
}

341 
	$tm_addsub
(
q
, 
c
, 
r
) {

342 
	`as£π
 (
c
 == -1 || c == +1);

345 
q_íd
 = 
	`tm_√w_°©e
();

346 
q
 = 
	`tm_move_if2
(q, 
TM_ZERO
, +1, q, 
TM_ONE
, +1, q, -1, 
q_íd
);

351 
ˇºy
[2] = {
q
, 
	`tm_√w_°©e
()};

352 i‡(
c
 =-1Ë{ 
tmp
 = 
ˇºy
[0]; carry[0] = carry[1]; carry[1] =Åmp; }

355 
öãr
[3] = {
	`tm_√w_°©e
(),Åm_new_state(),Åm_new_state()};

357 
q_shi·
 = 
	`tm_√w_°©e
();

358 
a
=0;á<2;á++) {

359 
	`tm_å™sôi⁄
(
ˇºy
[
a
], 
TM_ZERO
, 
TM_BLANK
, -1, 
öãr
[a]);

360 
	`tm_å™sôi⁄
(
ˇºy
[
a
], 
TM_ONE
, 
TM_BLANK
, -1, 
öãr
[a+1]);

361 
	`tm_å™sôi⁄
(
ˇºy
[
a
], 
TM_VALUE
, TM_VALUE, +1, 
q_shi·
);

363 
a
=0;á<3;á++)

364 
b
=0; b<2; b++) {

365 
	`tm_å™sôi⁄
(
öãr
[
a
], 
tm_bô
[
c
 =+1 ? 
b
 : !b],Åm_bô[◊+b)&1], -1, 
ˇºy
[(a+b)>>1]);

367 
c
 = 0;

370 
q0
 = 
	`tm_√w_°©e
(), 
q1
 =Åm_new_state();

371 
q
 = 
q_shi·
;

372 
	`tm_wrôe_if2
(
q
, 
TM_ZERO
, 
TM_BLANK
, +1, 
q0
, 
TM_ONE
, TM_BLANK, +1, 
q1
, TM_BLANK, 0, 
r
);

373 
q0
 = 
	`tm_wrôe
(q0, 
TM_ZERO
, +1, 
q
);

374 
q1
 = 
	`tm_wrôe
(q1, 
TM_ONE
, +1, 
q
);

375  
r
;

376 
	}
}

381 
	$tm_com∑ª
(
q
, 
Op
 
›
, 
r_åue
, 
r_Ál£
) {

382 
q_…
, 
q_eq
, 
q_gt
;

383 
›
) {

384 
JEQ
: 
EQ
: 
q_…
 = 
r_Ál£
; 
q_eq
 = 
r_åue
; 
q_gt
 =Ñ_false; ;

385 
JNE
: 
NE
: 
q_…
 = 
r_åue
; 
q_eq
 = 
r_Ál£
; 
q_gt
 =Ñ_true; ;

386 
JLT
: 
LT
: 
q_…
 = 
r_åue
; 
q_eq
 = 
r_Ál£
; 
q_gt
 =Ñ_false; ;

387 
JGE
: 
GE
: 
q_…
 = 
r_Ál£
; 
q_eq
 = 
r_åue
; 
q_gt
 =Ñ_true; ;

388 
JGT
: 
GT
: 
q_…
 = 
r_Ál£
; 
q_eq
 =Ñ_Ál£; 
q_gt
 = 
r_åue
; ;

389 
JLE
: 
LE
: 
q_…
 = 
r_åue
; 
q_eq
 =Ñ_åue; 
q_gt
 = 
r_Ál£
; ;

390 : 
	`îr‹
("invalid comparison operation");

393 
q_√xâm_bô
 = 
q
;

394 
q0
 = 
	`tm_√w_°©e
(), 
q1
 =Åm_new_state();

395 
îa£_gt
 = 
	`tm_√w_°©e
(), 
îa£_…
 =Åm_new_state();

396 
	`tm_wrôe_if2
(
q
, 
TM_ZERO
, 
TM_BLANK
, +1, 
q0
, 
TM_ONE
, TM_BLANK, +1, 
q1
, TM_BLANK, 0, 
q_eq
);

397 
	`tm_move_if2
(
q0
, 
TM_ZERO
, +1, 
q_√xâm_bô
, 
TM_ONE
, +1, 
îa£_gt
, 0, 
tm_q_ªje˘
);

398 
	`tm_move_if2
(
q1
, 
TM_ZERO
, +1, 
îa£_…
, 
TM_ONE
, +1, 
q_√xâm_bô
, 0, 
tm_q_ªje˘
);

399 
	`tm_îa£_tm_bôs
(
îa£_…
, 
q_…
);

400 
	`tm_îa£_tm_bôs
(
îa£_gt
, 
q_gt
);

401  
r_åue
;

402 
	}
}

407 
	$tm_equÆ
(
q
, 
r_eq
, 
r_√
) {

408 
q_√xâm_bô
 = 
q
;

409 
q0
 = 
	`tm_√w_°©e
(), 
q1
 =Åm_new_state();

410 
	`tm_move_if2
(
q
, 
TM_ZERO
, +1, 
q0
, 
TM_ONE
, +1, 
q1
, 0, 
r_eq
);

411 
	`tm_move_if2
(
q0
, 
TM_ZERO
, +1, 
q_√xâm_bô
, 
TM_ONE
, +1, 
r_√
, 0, 
tm_q_ªje˘
);

412 
	`tm_move_if2
(
q1
, 
TM_ZERO
, +1, 
r_√
, 
TM_ONE
, +1, 
q_√xâm_bô
, 0, 
tm_q_ªje˘
);

413  
r_eq
;

414 
	}
}

420 
	$tm_föd_mem‹y_ödúe˘
(
q
, 
ªg
, 
r
) {

422 
q_≠≥nd
 = 
	`tm_√w_°©e
();

423 
q
 = 
	`tm_föd
(q, +1, 
TM_ADDRESS
, 
	`tm_√w_°©e
(), 
q_≠≥nd
);

424 
q
 = 
	`tm_move
(q, +1, 
	`tm_√w_°©e
());

425 
q
 = 
	`tm_wrôe
(q, 
TM_DST
, -1, 
	`tm_√w_°©e
());

426 
q
 = 
	`tm_föd_ªgi°î
(q, 
ªg
, 
	`tm_√w_°©e
());

428 
q
 = 
	`tm_c›y
(q, +1, 
TM_SKIP_BEFORE_SRC
|
TM_SKIP_AFTER_DST
, 
	`tm_√w_°©e
());

431 
q_√xèddr
 = 
	`tm_√w_°©e
();

432 
q_com∑ª
 = 
q
;

433 
q
 = 
	`tm_föd
(q, -1, 
TM_ADDRESS
, 
	`tm_√w_°©e
(), 
tm_q_ªje˘
);

434 
q
 = 
	`tm_move
(q, +1, 
	`tm_√w_°©e
());

435 
q
 = 
	`tm_equÆ
(q, 
	`tm_√w_°©e
(), 
q_√xèddr
);

438 
q
 = 
	`tm_move
(q, +1, 
	`tm_√w_°©e
());

439 
	`tm_move
(
q
, +1, 
r
);

443 
q
 = 
q_√xèddr
;

444 
q
 = 
	`tm_föd
(q, +1, 
TM_ADDRESS
, 
	`tm_√w_°©e
(), 
q_≠≥nd
);

445 
q
 = 
	`tm_move
(q, +1, 
	`tm_√w_°©e
());

446 
q
 = 
	`tm_wrôe
(q, 
TM_DST
, -1, 
	`tm_√w_°©e
());

449 
q
 = 
	`tm_move
(q, -1, 
	`tm_√w_°©e
());

450 
q
 = 
	`tm_move
(q, -1, 
	`tm_√w_°©e
());

451 
q
 = 
	`tm_föd
(q, -1, 
TM_ADDRESS
, 
	`tm_√w_°©e
(), 
tm_q_ªje˘
);

452 
q
 = 
	`tm_move
(q, +1, 
	`tm_√w_°©e
());

455 
	`tm_c›y
(
q
, +1, 
TM_SKIP_AFTER_SRC
|
TM_SKIP_AFTER_DST
, 
q_com∑ª
);

458 
q
 = 
q_≠≥nd
;

459 
q
 = 
	`tm_wrôe
(q, 
TM_ADDRESS
, +1, 
	`tm_√w_°©e
());

460 
q
 = 
	`tm_wrôe
(q, 
TM_DST
, -1, 
	`tm_√w_°©e
());

461 
q
 = 
	`tm_move
(q, -1, 
	`tm_√w_°©e
());

462 
q
 = 
	`tm_föd
(q, -1, 
TM_ADDRESS
, 
	`tm_√w_°©e
(), 
tm_q_ªje˘
);

463 
q
 = 
	`tm_move
(q, +1, 
	`tm_√w_°©e
());

464 
q
 = 
	`tm_c›y
(q, +1, 
TM_SKIP_AFTER_SRC
|
TM_SKIP_BEFORE_DST
, 
	`tm_√w_°©e
());

465 
q
 = 
	`tm_move
(q, +1, 
	`tm_√w_°©e
());

466 
q
 = 
	`tm_wrôe
(q, 
TM_VALUE
, +1, 
	`tm_√w_°©e
());

467 
q
 = 
	`tm_wrôe_tm_bôs
(q, 0, 
tm_w‹d_size
, 
TM_SKIP_BEFORE_DST
, 
	`tm_√w_°©e
());

468 
q
 = 
	`tm_move
(q, +1, 
	`tm_√w_°©e
());

469 
q
 = 
	`tm_wrôe
(q, 
TM_END
, -1, 
	`tm_√w_°©e
());

470 
q
 = 
	`tm_föd
(q, -1, 
TM_VALUE
, 
	`tm_√w_°©e
(), 
tm_q_ªje˘
);

471 
	`tm_move
(
q
, +1, 
r
);

472  
r
;

473 
	}
}

479 
	$tm_make_jm¥eg
(
pc_max
, 
h
, 
i
) {

480 i‡(
h
 == 0) {

481  
i
;

483 
q_√w
 = 
	`tm_√w_°©e
();

484 
q
 = 
	`tm_å™sôi⁄
(
q_√w
, 
TM_BLANK
, TM_BLANK, +1, 
	`tm_√w_°©e
());

485 
q0
 = 
	`tm_make_jm¥eg
(
pc_max
, 
h
-1, 
i
);

486 
	`tm_å™sôi⁄
(
q
, 
TM_ZERO
, TM_ZERO, +1, 
q0
);

487 i‡(
i
+(1<<(
h
-1)Ë<
pc_max
) {

488 
q1
 = 
	`tm_make_jm¥eg
(
pc_max
, 
h
-1, 
i
 + (1<<(h-1)));

489 
	`tm_å™sôi⁄
(
q
, 
TM_ONE
, TM_ONE, +1, 
q1
);

491  
q_√w
;

493 
	}
}

495 
	$èrgë_tm
(
ModuÀ
* 
moduÀ
) {

499 
pc_max
 = 0;

500 
In°
* 
ö°
 = 
moduÀ
->
ãxt
; in°; in° = in°->
√xt
)

501 i‡(
ö°
->
pc
 >
pc_max
)

502 
pc_max
 = 
ö°
->
pc
;

503 
tm_√xt_°©e
 = 
pc_max
+1;

504 
tm_q_ªje˘
 = 
	`tm_√w_°©e
();

506 
	`tm_commít
("trie for jmpÑeg");

507 
q_jm¥eg
 = 
	`tm_make_jm¥eg
(
pc_max
, 
tm_w‹d_size
, 0);

509 
q
 = 0;

511 
	`tm_commít
("beginning-of-tapeánd input string");

514 
q
 = 
	`tm_ö£π
(q, 
TM_START
, +1, 
	`tm_√w_°©e
());

515 
q
 = 
	`tm_ªwöd
(q, 
	`tm_√w_°©e
());

516 
q
 = 
	`tm_move
(q, +1, 
	`tm_√w_°©e
());

517 
q
 = 
	`tm_ö£π
(q, 
TM_BLANK
, +1, 
	`tm_√w_°©e
());

518 
q
 = 
	`tm_wrôe
(q, 
TM_END
, 0, 
	`tm_√w_°©e
());

521 
Reg
 
ªg
=0;Ñeg<6;Ñeg++) {

522 
	`tm_commít
("ªgi°î %†vÆuê0", 
ªg_«mes
[
ªg
]);

523 
q
 = 
	`tm_√w_loˇti⁄
(q, 
TM_REGISTER
, 
ªg
, 3, 0, 
	`tm_√w_°©e
());

527 
D©a
 *
d©a
 = 
moduÀ
->data;

528 
mp
 = 0;

529 
d©a
) {

530 i‡(0 <
d©a
->
v
 && d©a->v < 128 && 
	`i•röt
(data->v))

531 
	`tm_commít
("addªs†%d vÆuê%d '%c'", 
mp
, 
d©a
->
v
, data->v);

533 
	`tm_commít
("addªs†%d vÆuê%d", 
mp
, 
d©a
->
v
);

534 
q
 = 
	`tm_√w_loˇti⁄
(q, 
TM_ADDRESS
, 
mp
, 
tm_w‹d_size
, 
d©a
->
v
, 
	`tm_√w_°©e
());

535 
d©a
 = d©a->
√xt
;

536 
mp
++;

538 
q
 = 
	`tm_wrôe
(q, 
TM_BLANK
, +1, 
	`tm_√w_°©e
());

539 
q
 = 
	`tm_wrôe
(q, 
TM_END
, -1, 
	`tm_√w_°©e
());

540 
q
 = 
	`tm_ªwöd
(q, 
	`tm_√w_°©e
());

542 
¥ev_pc
 = 0;

543 
In°
* 
ö°
 = 
moduÀ
->
ãxt
; in°; in° = in°->
√xt
) {

544 
	`¥ötf
("// "); 
	`dump_ö°_Â
(
ö°
, 
°dout
);

547 i‡(
ö°
->
pc
 !
¥ev_pc
 && 
q
 != inst->pc)

548 
q
 = 
	`tm_no›
(q, 
ö°
->
pc
);

549 
¥ev_pc
 = 
ö°
->
pc
;

551 
q
 = 
	`tm_ªwöd
(q, 
	`tm_√w_°©e
());

553 
ö°
->
›
) {

555 
MOV
:

556 
q
 = 
	`tm_c›y_vÆue
(q, 
ö°
, 
TM_SKIP_BEFORE_DST
, 
	`tm_√w_°©e
());

559 
ADD
:

560 
SUB
:

561 
q
 = 
	`tm_c›y_vÆue
(q, 
ö°
, 
TM_SKIP_AFTER_DST
, 
	`tm_√w_°©e
());

563 i‡(
ö°
->
›
 =
ADD
)

564 
q
 = 
	`tm_addsub
(q, +1, 
	`tm_√w_°©e
());

565 i‡(
ö°
->
›
 =
SUB
)

566 
q
 = 
	`tm_addsub
(q, -1, 
	`tm_√w_°©e
());

569 
LOAD
:

570 
	`as£π
 (
ö°
->
d°
.
ty≥
 =
REG
);

571 i‡(
ö°
->
§c
.
ty≥
 =
REG
) {

572 
q
 = 
	`tm_föd_mem‹y_ödúe˘
(q, 
ö°
->
§c
.
ªg
, 
	`tm_√w_°©e
());

573 } i‡(
ö°
->
§c
.
ty≥
 =
IMM
) {

574 
q
 = 
	`tm_föd_mem‹y
(q, 
ö°
->
§c
.
imm
, 
	`tm_√w_°©e
());

576 
	`îr‹
("invalid srcÅype");

577 
q
 = 
	`tm_wrôe
(q, 
TM_SRC
, -1, 
	`tm_√w_°©e
());

578 
q
 = 
	`tm_föd_ªgi°î
(q, 
ö°
->
d°
.
ªg
, 
	`tm_√w_°©e
());

579 
q
 = 
	`tm_wrôe
(q, 
TM_DST
, +1, 
	`tm_√w_°©e
());

580 
q
 = 
	`tm_move
(q, +1, 
	`tm_√w_°©e
());

581 
q
 = 
	`tm_föd
(q, +1, 
TM_SRC
, 
	`tm_√w_°©e
(), 
tm_q_ªje˘
);

582 
q
 = 
	`tm_c›y
(q, -1, 
TM_SKIP_BEFORE_SRC
|
TM_SKIP_BEFORE_DST
, 
	`tm_√w_°©e
());

585 
STORE
:

586 
	`as£π
 (
ö°
->
d°
.
ty≥
 =
REG
);

587 i‡(
ö°
->
§c
.
ty≥
 =
REG
) {

588 
q
 = 
	`tm_föd_mem‹y_ödúe˘
(q, 
ö°
->
§c
.
ªg
, 
	`tm_√w_°©e
());

589 } i‡(
ö°
->
§c
.
ty≥
 =
IMM
) {

590 
q
 = 
	`tm_föd_mem‹y
(q, 
ö°
->
§c
.
imm
, 
	`tm_√w_°©e
());

592 
	`îr‹
("invalid dstÅype");

593 
q
 = 
	`tm_wrôe
(q, 
TM_DST
, -1, 
	`tm_√w_°©e
());

594 
q
 = 
	`tm_move
(q, +1, 
	`tm_√w_°©e
());

595 
q
 = 
	`tm_föd_ªgi°î
(q, 
ö°
->
d°
.
ªg
, 
	`tm_√w_°©e
());

596 
q
 = 
	`tm_c›y
(q, +1, 
TM_SKIP_BEFORE_SRC
|
TM_SKIP_BEFORE_DST
, 
	`tm_√w_°©e
());

599 
GETC
:

601 
	`as£π
 (
ö°
->
d°
.
ty≥
 =
REG
);

602 
q
 = 
	`tm_föd_ªgi°î
(q, 
ö°
->
d°
.
ªg
, 
	`tm_√w_°©e
());

603 
q
 = 
	`tm_wrôe_tm_bôs
(q, 0, 
tm_w‹d_size
-8, 
TM_SKIP_BEFORE_DST
, 
	`tm_√w_°©e
());

604 
q
 = 
	`tm_wrôe
(q, 
TM_DST
, -1, 
	`tm_√w_°©e
());

607 
q_eof
 = 
	`tm_√w_°©e
(), 
q_d⁄e
 =Åm_new_state();

608 
q
 = 
	`tm_ªwöd
(q, 
	`tm_√w_°©e
());

609 
q
 = 
	`tm_move
(q, +1, 
	`tm_√w_°©e
());

610 
q
 = 
	`tm_move_if
(q, 
TM_BLANK
, +1, q, 0, 
	`tm_√w_°©e
());

611 
q
 = 
	`tm_move_if
(q, 
TM_REGISTER
, 0, 
q_eof
, +1, 
	`tm_√w_°©e
());

612 
i
=0; i<6; i++)

613 
q
 = 
	`tm_move
(q, +1, 
	`tm_√w_°©e
());

614 
q
 = 
	`tm_ö£π
(q, 
TM_BLANK
, -1, 
	`tm_√w_°©e
());

615 
q
 = 
	`tm_move
(q, +1, 
	`tm_√w_°©e
());

616 
q
 = 
	`tm_c›y
(q, +1, 
TM_SKIP_BEFORE_DST
, 
q_d⁄e
);

619 
q
 = 
q_eof
;

620 
q
 = 
	`tm_föd
(q, +1, 
TM_DST
, 
	`tm_√w_°©e
(), 
tm_q_ªje˘
);

621 
q
 = 
	`tm_wrôe
(q, 
TM_BLANK
, 0, 
	`tm_√w_°©e
());

622 
q
 = 
	`tm_wrôe_tm_bôs
(q, 0, 8, 
TM_SKIP_BEFORE_DST
, 
q_d⁄e
);

624 
q
 = 
q_d⁄e
;

628 
PUTC
:

629 
q
 = 
	`tm_ffwd
(q, 
	`tm_√w_°©e
());

630 
q
 = 
	`tm_wrôe
(q, 
TM_OUTPUT
, +1, 
	`tm_√w_°©e
());

631 i‡(
ö°
->
§c
.
ty≥
 =
REG
) {

632 
q
 = 
	`tm_wrôe
(q, 
TM_DST
, -1, 
	`tm_√w_°©e
());

633 
q
 = 
	`tm_föd_ªgi°î
(q, 
ö°
->
§c
.
ªg
, 
	`tm_√w_°©e
());

634 
i
=0; i<(
tm_w‹d_size
-8)*2; i++)

635 
q
 = 
	`tm_move
(q, +1, 
	`tm_√w_°©e
());

636 
q
 = 
	`tm_c›y
(q, +1, 
TM_SKIP_BEFORE_SRC
, 
	`tm_√w_°©e
());

637 } i‡(
ö°
->
§c
.
ty≥
 =
IMM
) {

638 
q
 = 
	`tm_wrôe_tm_bôs
(q, 
ö°
->
§c
.
imm
, 8, 0, 
	`tm_√w_°©e
());

640 
	`îr‹
("invalid srcÅype");

641 
q
 = 
	`tm_wrôe
(q, 
TM_BLANK
, +1, 
	`tm_√w_°©e
());

642 
q
 = 
	`tm_wrôe
(q, 
TM_END
, 0, 
	`tm_√w_°©e
());

645 
EXIT
:

647 
q
 = 
	`tm_wrôe
(q, 
TM_DST
, +1, 
	`tm_√w_°©e
());

648 
q_˛ór
 = 
	`tm_√w_°©e
();

649 
q_födo
 = 
q
;

650 
q
 = 
	`tm_föd
(q, +1, 
TM_OUTPUT
, 
	`tm_√w_°©e
(), 
q_˛ór
);

651 
q
 = 
	`tm_wrôe
(q, 
TM_BLANK
, +1, 
	`tm_√w_°©e
());

652 
q
 = 
	`tm_c›y
(q, -1, 0, 
	`tm_√w_°©e
());

653 
	`tm_wrôe
(
q
, 
TM_DST
, +1, 
q_födo
);

656 
q_˛ór
 = 
	`tm_ffwd
(q_˛ór, 
	`tm_√w_°©e
());

657 
	`tm_wrôe_if
(
q_˛ór
, 
TM_DST
, 
TM_BLANK
, 0, -1, TM_BLANK, -1, q_clear);

658 
q
 = 
	`tm_√w_°©e
();

661 
JEQ
:

662 
JNE
:

663 
JLT
:

664 
JGE
:

665 
JGT
:

666 
JLE
:

667 
q
 = 
	`tm_c›y_vÆue
(q, 
ö°
, 
TM_SKIP_AFTER_DST
, 
	`tm_√w_°©e
());

668 
q
 = 
	`tm_föd
(q, -1, 
TM_VALUE
, 
	`tm_√w_°©e
(), 
tm_q_ªje˘
);

669 
q
 = 
	`tm_move
(q, +1, 
	`tm_√w_°©e
());

670 i‡(
ö°
->
jmp
.
ty≥
 =
REG
)

671 
	`îr‹
("jmpÑegÇot implemented");

672 i‡(
ö°
->
jmp
.
ty≥
 =
IMM
) {

673 
q_Ál£
 = 
	`tm_√w_°©e
();

674 
	`tm_com∑ª
(
q
, 
ö°
->
›
, in°->
jmp
.
imm
, 
q_Ál£
);

675 
q
 = 
q_Ál£
;

677 
	`îr‹
("invalid jmpÅype");

680 
JMP
:

681 i‡(
ö°
->
jmp
.
ty≥
 =
REG
)

682 
	`tm_föd_ªgi°î
(
q
, 
ö°
->
jmp
.
ªg
, 
q_jm¥eg
);

683 i‡(
ö°
->
jmp
.
ty≥
 =
IMM
)

684 
	`tm_no›
(
q
, 
ö°
->
jmp
.
imm
);

686 
	`îr‹
("invalid jmpÅype");

687 
q
 = 
	`tm_√w_°©e
();

690 
EQ
:

691 
NE
:

692 
LT
:

693 
GE
:

694 
GT
:

695 
LE
:

696 
q
 = 
	`tm_c›y_vÆue
(q, 
ö°
, 
TM_SKIP_AFTER_DST
, 
	`tm_√w_°©e
());

697 
q
 = 
	`tm_föd
(q, -1, 
TM_VALUE
, 
	`tm_√w_°©e
(), 
tm_q_ªje˘
);

698 
q
 = 
	`tm_move
(q, +1, 
	`tm_√w_°©e
());

699 
qt
 = 
	`tm_√w_°©e
(), 
qf
 =Åm_new_state();

700 
q
 = 
	`tm_com∑ª
(q, 
ö°
->
›
, 
qt
, 
qf
);

701 
q
 = 
	`tm_√w_°©e
();

702 
qf
 = 
	`tm_föd
(qf, -1, 
TM_VALUE
, 
	`tm_√w_°©e
(), 
tm_q_ªje˘
);

703 
qf
 = 
	`tm_move
(qf, +1, 
	`tm_√w_°©e
());

704 
qf
 = 
	`tm_wrôe_tm_bôs
(qf, 0, 
tm_w‹d_size
, 
TM_SKIP_BEFORE_DST
, 
q
);

705 
qt
 = 
	`tm_föd
(qt, -1, 
TM_VALUE
, 
	`tm_√w_°©e
(), 
tm_q_ªje˘
);

706 
qt
 = 
	`tm_move
(qt, +1, 
	`tm_√w_°©e
());

707 
qt
 = 
	`tm_wrôe_tm_bôs
(qt, 1, 
tm_w‹d_size
, 
TM_SKIP_BEFORE_DST
, 
q
);

710 
DUMP
:

714 
	`îr‹
("invalid operation");

717 
	}
}

	@target/unl.c

1 
	~<°dio.h
>

2 
	~<ú/ú.h
>

3 
	~<èrgë/utû.h
>

4 
	~<èrgë/u∆c‹e.h
>

6 c⁄° 
	gS2
[] = "``s";

7 c⁄° 
	gK1
[] = "`k";

8 c⁄° 
	gCONS
[] = "``s``s`ks``s`kk``s`ks``s`k`sik`kk";

9 c⁄° 
	gCAR
[] = "``si`kk";

10 c⁄° 
	gCDR
[] = "``si`k`ki";

11 c⁄° 
	gDOTCAR
[] = "k";

14 c⁄° 
	gCONS_KI
[] = "``s`k`s``si`k`kik";

17 c⁄° 
	gCONS_K
[] = "``s`k`s``si`kkk";

20 c⁄° 
	gAPPLY_CDR
[] = "``s`k`si``s`kk``s`k`s``s`ks``s`kk``s`ks``s`k`sik``s`kk`s`kk";

23 c⁄° 
	gREPLACE_CAR
[] = "``s`k`si``s`kk``s`kk``s`k`s``s`k`s``s`ks``s`k`sik``s`kkkk";

26 c⁄° 
	gREPLACE_CAR1
[] = "``si`k`k``s``s`k`s``s`ks``s`k`sik``s`kkk`k";

29 c⁄° 
	gCOMPOSE
[] = "``s`ksk";

32 c⁄° 
	gPOST_INC
[] = "```sii``s``s`ks``s`k`si``s`kk``s`k`s`k``s`k`s``si`k`kik``s`k`si``s``s`kskk`k`k``s`k`s``si`kkk";

35 c⁄° 
	gPOST_DEC
[] = "```sii``s`k`s``si`k``s`k`s``si`k`kik``s`kk``s`k`s`k``s`k`s``si`kkk``s`k`si``s``s`kskk";

38 c⁄° * 
	gCHURCHNUM
[] = {

67 
	mUNL_PC
 = 0, 
	mUNL_A
, 
	mUNL_B
, 
	mUNL_C
, 
	mUNL_D
, 
	mUNL_BP
, 
	mUNL_SP


68 } 
	tU∆Reg
;

70 
U∆Reg
 
	$u∆_ªgpos
(
Reg
 
r
) {

71 
r
) {

72 
A
:  
UNL_A
;

73 
B
:  
UNL_B
;

74 
C
:  
UNL_C
;

75 
D
:  
UNL_D
;

76 
BP
:  
UNL_BP
;

77 
SP
:  
UNL_SP
;

79 
	`îr‹
("unknow¿ªg: %d", 
r
);

81 
	}
}

83 
	$u∆_emô
(c⁄° * 
s
) {

84 
	`Âuts
(
s
, 
°dout
);

85 
	}
}

87 
	$u∆_emô_tick
(
n
) {

88 
i
 = 0; i < 
n
; i++) {

89 
	`putch¨
('`');

91 
	}
}

93 
	$u∆_li°_begö
(
is_fú°
) {

94 i‡(!
is_fú°
)

95 
	`u∆_emô
(
K1
);

96 
	`u∆_emô
("``s``si`k");

97 
	}
}

99 
	$u∆_li°_íd
() {

100 
	`putch¨
('v');

101 
	}
}

103 
	$u∆_emô_churchnum
(
n
) {

104 i‡(
n
 > 24)

105 
	`îr‹
("churchnumÅabÀ ouào‡ønge: %d", 
n
);

106 
	`u∆_emô
(
CHURCHNUM
[
n
]);

107 
	}
}

109 
	$u∆_emô_numbî
(
n
) {

110 
i
 = 0; i < 24; i++) {

111 
	`u∆_li°_begö
(
i
 == 0);

112 
	`u∆_emô
(
n
 % 2 ? "k" : "`ki");

113 
n
 /= 2;

115 
	`u∆_li°_íd
();

116 
	}
}

119 
	$u∆_emô_numbî2
(
n
) {

120 
Æl_⁄e
 = 
UINT_MAX
;

121 
i
 = 0; i < 24; i++) {

122 i‡(
i
 < 23 && 
n
 == 0) {

123 i‡(
i
 > 0) {

124 
	`u∆_emô
(
K1
);

126 
	`u∆_emô_tick
(2);

127 
	`u∆_emô_churchnum
(24 - 
i
);

128 
	`u∆_emô
(
CONS_KI
);

130 } i‡(
i
 < 23 && 
n
 =
Æl_⁄e
) {

131 i‡(
i
 > 0) {

132 
	`u∆_emô
(
K1
);

134 
	`u∆_emô_tick
(2);

135 
	`u∆_emô_churchnum
(24 - 
i
);

136 
	`u∆_emô
(
CONS_K
);

139 
	`u∆_li°_begö
(
i
 == 0);

140 
	`u∆_emô
(
n
 % 2 ? "k" : "`ki");

141 
n
 /= 2;

142 
Æl_⁄e
 /= 2;

145 
	`u∆_li°_íd
();

146 
	}
}

148 
	$u∆_¡h_begö
(
n
) {

149 
	`u∆_emô
(
S2
);

150 
	`u∆_emô
(
S2
);

151 
	`u∆_emô
(
K1
);

152 
	`u∆_emô
("`");

153 
	`u∆_emô_churchnum
(
n
);

154 
	`u∆_emô
(
CDR
);

155 
	}
}

157 
	$u∆_¡h_íd
() {

158 
	`u∆_emô
(
K1
);

159 
	`u∆_emô
(
DOTCAR
);

160 
	}
}

163 
	mLIB_ADD
 = 2,

164 
	mLIB_SUB
,

165 
	mLIB_EQ
,

166 
	mLIB_LT
,

167 
	mLIB_LOAD
,

168 
	mLIB_STORE
,

169 
	mLIB_PUTC
,

170 
	mLIB_GETC


171 } 
	tLibNo
;

173 
	$u∆_emô_lib
(
LibNo
 
n
) {

174 
	`u∆_emô
(
S2
);

175 
	`u∆_emô
("`");

176 
	`u∆_emô_churchnum
(
n
);

177 
	`u∆_emô
(
CDR
);

178 
	`u∆_emô
(
K1
);

179 
	`u∆_emô
(
DOTCAR
);

180 
	}
}

182 
	$u∆_lib_add
() {

183 
	`u∆_emô
(
S2
);

184 
	`u∆_emô
(
S2
);

185 
	`u∆_emô_lib
(
LIB_ADD
);

186 
	}
}

188 
	$u∆_lib_sub
() {

189 
	`u∆_emô
(
S2
);

190 
	`u∆_emô
(
S2
);

191 
	`u∆_emô_lib
(
LIB_SUB
);

192 
	}
}

194 
	$u∆_lib_eq
() {

195 
	`u∆_emô
(
S2
);

196 
	`u∆_emô
(
S2
);

197 
	`u∆_emô_lib
(
LIB_EQ
);

198 
	}
}

200 
	$u∆_lib_…
() {

201 
	`u∆_emô
(
S2
);

202 
	`u∆_emô
(
S2
);

203 
	`u∆_emô_lib
(
LIB_LT
);

204 
	}
}

206 
	$u∆_lib_lﬂd
() {

207 
	`u∆_emô
(
S2
);

209 
	`u∆_emô
(
S2
);

210 
	`u∆_emô_lib
(
LIB_LOAD
);

211 
	`putch¨
('i');

212 
	}
}

214 
	$u∆_lib_°‹e
() {

215 
	`u∆_emô
(
S2
);

216 
	`u∆_emô
(
S2
);

218 
	`u∆_emô
(
S2
);

219 
	`u∆_emô_lib
(
LIB_STORE
);

220 
	`putch¨
('i');

221 
	}
}

223 
	$u∆_lib_putc
() {

224 
	`u∆_emô
(
S2
);

225 
	`u∆_emô_lib
(
LIB_PUTC
);

226 
	}
}

228 
	$u∆_lib_gëc
() {

229 
	`u∆_emô
(
S2
);

230 
	`u∆_emô
("`kc");

231 
	`u∆_emô_lib
(
LIB_GETC
);

232 
	}
}

234 
	$u∆_gëªg
(
Reg
 
ªg
) {

235 
	`u∆_¡h_begö
(
	`u∆_ªgpos
(
ªg
));

236 
	`u∆_emô
(
CAR
);

237 
	`u∆_¡h_íd
();

238 
	}
}

240 
	$u∆_emô_vÆue
(
VÆue
* 
vÆ
) {

241 i‡(
vÆ
->
ty≥
 =
REG
) {

242 
	`u∆_gëªg
(
vÆ
->
ªg
);

244 
	`u∆_emô
(
K1
);

245 
	`u∆_emô_numbî
(
vÆ
->
imm
);

247 
	}
}

249 
	$u∆_£åeg_begö
(
U∆Reg
 
ªg
) {

250 
	`u∆_emô
(
S2
);

251 
	`u∆_emô
(
S2
);

252 
	`u∆_emô
(
K1
);

253 
	`u∆_emô
(
CONS
);

254 
	`u∆_emô
(
S2
);

256 
	`u∆_emô
(
S2
);

257 
	`u∆_emô
(
K1
);

258 
	`u∆_emô_tick
(1);

259 
	`u∆_emô_churchnum
(
ªg
);

260 
	`u∆_emô
(
APPLY_CDR
);

261 
	`u∆_emô
(
S2
);

262 
	`u∆_emô
(
K1
);

263 
	`u∆_emô
(
REPLACE_CAR
);

264 
	}
}

266 
	$u∆_£åeg_íd
() {

267 
	`u∆_emô
(
CAR
);

268 
	`u∆_emô
(
CDR
);

269 
	}
}

271 
	$u∆_£åeg_imm
(
U∆Reg
 
ªg
, 
n
) {

272 
	`u∆_emô
(
S2
);

273 
	`u∆_emô
(
S2
);

274 
	`u∆_emô
(
K1
);

275 
	`u∆_emô
(
CONS
);

276 
	`u∆_emô
(
S2
);

278 
	`u∆_emô
(
K1
);

279 
	`u∆_emô_tick
(2);

280 
	`u∆_emô_churchnum
(
ªg
);

281 
	`u∆_emô
(
APPLY_CDR
);

282 
	`u∆_emô
(
REPLACE_CAR1
);

283 
	`u∆_emô_numbî
(
n
);

285 
	`u∆_emô
(
CAR
);

286 
	`u∆_emô
(
CDR
);

287 
	}
}

289 
	$u∆_emô_jmp
(
VÆue
* 
jmp
) {

290 i‡(
jmp
->
ty≥
 =
REG
) {

291 
	`u∆_£åeg_begö
(
UNL_PC
);

292 
	`u∆_gëªg
(
jmp
->
ªg
);

293 
	`u∆_£åeg_íd
();

295 
	`u∆_£åeg_imm
(
UNL_PC
, 
jmp
->
imm
);

297 
	}
}

299 
	$u∆_boﬁ_to_numbî_begö
() {

300 
	`u∆_emô
(
S2
);

301 
	`u∆_emô
(
S2
);

302 
	`u∆_emô
(
K1
);

303 
	`u∆_emô
(
CONS
);

304 
	}
}

306 
	$u∆_boﬁ_to_numbî_íd
() {

307 
	`u∆_emô
(
K1
);

308 
	`u∆_emô_tick
(2);

309 
	`u∆_emô_churchnum
(23);

310 
	`u∆_emô
(
CONS_KI
);

311 
	`putch¨
('v');

312 
	}
}

314 
	$u∆_emô_›
(
In°
* 
ö°
) {

315 
ö°
->
›
) {

316 
MOV
:

317 i‡(
ö°
->
§c
.
ty≥
 =
REG
) {

318 
	`u∆_£åeg_begö
(
	`u∆_ªgpos
(
ö°
->
d°
.
ªg
));

319 
	`u∆_gëªg
(
ö°
->
§c
.
ªg
);

320 
	`u∆_£åeg_íd
();

322 
	`u∆_£åeg_imm
(
	`u∆_ªgpos
(
ö°
->
d°
.
ªg
), in°->
§c
.
imm
);

326 
ADD
:

327 
	`u∆_£åeg_begö
(
	`u∆_ªgpos
(
ö°
->
d°
.
ªg
));

328 i‡(
ö°
->
§c
.
ty≥
 =
IMM
 && in°->§c.
imm
 == 1) {

329 
	`u∆_emô
(
S2
);

330 
	`u∆_gëªg
(
ö°
->
d°
.
ªg
);

331 
	`u∆_emô
(
K1
);

332 
	`u∆_emô
(
POST_INC
);

333 } i‡(
ö°
->
§c
.
ty≥
 =
IMM
 && in°->§c.
imm
 =
UINT_MAX
) {

334 
	`u∆_emô
(
S2
);

335 
	`u∆_gëªg
(
ö°
->
d°
.
ªg
);

336 
	`u∆_emô
(
K1
);

337 
	`u∆_emô
(
POST_DEC
);

339 
	`u∆_lib_add
();

340 
	`u∆_gëªg
(
ö°
->
d°
.
ªg
);

341 
	`u∆_emô_vÆue
(&
ö°
->
§c
);

343 
	`u∆_£åeg_íd
();

346 
SUB
:

347 
	`u∆_£åeg_begö
(
	`u∆_ªgpos
(
ö°
->
d°
.
ªg
));

348 i‡(
ö°
->
§c
.
ty≥
 =
IMM
 && in°->§c.
imm
 == 1) {

349 
	`u∆_emô
(
S2
);

350 
	`u∆_gëªg
(
ö°
->
d°
.
ªg
);

351 
	`u∆_emô
(
K1
);

352 
	`u∆_emô
(
POST_DEC
);

354 
	`u∆_lib_sub
();

355 
	`u∆_gëªg
(
ö°
->
d°
.
ªg
);

356 
	`u∆_emô_vÆue
(&
ö°
->
§c
);

358 
	`u∆_£åeg_íd
();

361 
JMP
:

362 
	`u∆_emô_jmp
(&
ö°
->
jmp
);

365 
JEQ
:

366 
JNE
:

367 
JLT
:

368 
JGT
:

369 
JLE
:

370 
JGE
:

371 
	`u∆_emô
(
S2
);

372 
	`u∆_emô
(
S2
);

373 i‡(
ö°
->
›
 =
JEQ
 || in°->› =
JNE
) {

374 
	`u∆_lib_eq
();

376 
	`u∆_lib_…
();

378 i‡(
ö°
->
›
 =
JGT
 || in°->› =
JLE
) {

379 
	`u∆_emô_vÆue
(&
ö°
->
§c
);

380 
	`u∆_emô_vÆue
(&
ö°
->
d°
);

382 
	`u∆_emô_vÆue
(&
ö°
->
d°
);

383 
	`u∆_emô_vÆue
(&
ö°
->
§c
);

385 i‡(
ö°
->
›
 =
JNE
 || in°->› =
JLE
 || in°->› =
JGE
) {

386 
	`putch¨
('i');

387 
	`u∆_emô_jmp
(&
ö°
->
jmp
);

389 
	`u∆_emô_jmp
(&
ö°
->
jmp
);

390 
	`putch¨
('i');

394 
EQ
:

395 
NE
:

396 
LT
:

397 
GT
:

398 
LE
:

399 
GE
:

400 
	`u∆_£åeg_begö
(
	`u∆_ªgpos
(
ö°
->
d°
.
ªg
));

401 
	`u∆_boﬁ_to_numbî_begö
();

402 i‡(
ö°
->
›
 =
NE
 || in°->› =
LE
 || in°->› =
GE
) {

403 
	`u∆_emô
(
S2
);

404 
	`u∆_emô
(
S2
);

406 i‡(
ö°
->
›
 =
EQ
 || in°->› =
NE
) {

407 
	`u∆_lib_eq
();

409 
	`u∆_lib_…
();

411 i‡(
ö°
->
›
 =
GT
 || in°->› =
LE
) {

412 
	`u∆_emô_vÆue
(&
ö°
->
§c
);

413 
	`u∆_emô_vÆue
(&
ö°
->
d°
);

415 
	`u∆_emô_vÆue
(&
ö°
->
d°
);

416 
	`u∆_emô_vÆue
(&
ö°
->
§c
);

418 i‡(
ö°
->
›
 =
NE
 || in°->› =
LE
 || in°->› =
GE
) {

419 
	`u∆_emô
("`k`ki");

420 
	`u∆_emô
("`kk");

422 
	`u∆_boﬁ_to_numbî_íd
();

423 
	`u∆_£åeg_íd
();

426 
LOAD
:

427 
	`u∆_£åeg_begö
(
	`u∆_ªgpos
(
ö°
->
d°
.
ªg
));

428 
	`u∆_lib_lﬂd
();

429 
	`u∆_emô_vÆue
(&
ö°
->
§c
);

430 
	`u∆_£åeg_íd
();

433 
STORE
:

434 
	`u∆_lib_°‹e
();

435 
	`u∆_emô_vÆue
(&
ö°
->
§c
);

436 
	`u∆_emô_vÆue
(&
ö°
->
d°
);

439 
PUTC
:

440 
	`u∆_emô
(
S2
);

441 
	`u∆_emô
("k");

442 
	`u∆_lib_putc
();

443 
	`u∆_emô_vÆue
(&
ö°
->
§c
);

446 
GETC
:

447 
	`u∆_£åeg_begö
(
	`u∆_ªgpos
(
ö°
->
d°
.
ªg
));

448 
	`u∆_lib_gëc
();

449 
	`u∆_£åeg_íd
();

452 
EXIT
:

453 
	`u∆_emô
("``s`ke`ki");

456 
DUMP
:

457 
	`putch¨
('i');

461 
	`îr‹
("nŸ im∂emíãd %d", 
ö°
->
›
);

463 
	}
}

465 
In°
* 
	$u∆_emô_chunk
(
In°
* 
ö°
) {

466 
pc
 = 
ö°
->pc;

467 
	`¥ötf
("\n#Öc=%d\n", 
pc
);

469 
In°
* 
ªvî£d
 = 
NULL
;

470 
ö°
 && in°->
pc
 ==Öc) {

471 
In°
* 
√xt
 = 
ö°
->next;

472 
ö°
->
√xt
 = 
ªvî£d
;

473 
ªvî£d
 = 
ö°
;

474 
ö°
 = 
√xt
;

477 ; 
ªvî£d
;Ñevî£d =Ñevî£d->
√xt
) {

478 
	`¥ötf
("# ");

479 
	`dump_ö°_Â
(
ªvî£d
, 
°dout
);

481 i‡(
ªvî£d
->
√xt
) {

482 
	`u∆_emô_tick
(2);

483 
	`u∆_emô
(
COMPOSE
);

485 
	`u∆_emô_›
(
ªvî£d
);

486 
	`putch¨
('\n');

489  
ö°
;

490 
	}
}

492 
	$u∆_emô_ãxt
(
In°
* 
ö°
) {

493 
fú°
 = 1;

494 
ö°
) {

495 
	`u∆_li°_begö
(
fú°
);

496 
fú°
 = 0;

497 
ö°
 = 
	`u∆_emô_chunk
(inst);

499 
	`u∆_li°_íd
();

500 
	}
}

502 
	$u∆_emô_d©a
(
D©a
* 
d©a
) {

503 
D©a
* 
d
 = 
d©a
; d; d = d->
√xt
) {

504 
	`u∆_li°_begö
(
d
 =
d©a
);

505 
	`u∆_emô_numbî2
(
d
->
v
);

507 
	`u∆_li°_íd
();

508 
	}
}

510 
	$u∆_emô_¥öt
(
n
) {

511 i‡(
n
 == 10) {

512 
	`putch¨
('r');

514 
	`putch¨
('.');

515 
	`putch¨
(
n
);

517 
	}
}

519 
	$u∆_emô_putc_ªc
(
n
, 
b
) {

520 i‡(
b
 == 128) {

521 
	`u∆_emô
("``s``s`ks``s``s`ksk`k`k");

522 
	`u∆_emô_¥öt
(
n
 + 
b
);

523 
	`u∆_emô
("`k`k");

524 
	`u∆_emô_¥öt
(
n
);

526 
	`u∆_emô
("``s`k`si``s``s`ks``s``s`ksk");

527 
	`u∆_emô
("`k`k");

528 
	`u∆_emô_putc_ªc
(
n
 + 
b
, b + b);

529 
	`u∆_emô
("`k`k");

530 
	`u∆_emô_putc_ªc
(
n
, 
b
 + b);

532 
	}
}

534 
	$u∆_emô_libputc
() {

535 
	`u∆_emô
(
S2
);

536 
	`u∆_emô
(
S2
);

537 
	`putch¨
('i');

538 
	`u∆_emô
(
K1
);

539 
	`u∆_emô_putc_ªc
(0, 1);

540 
	`u∆_emô
("`ki");

541 
	}
}

543 
	$u∆_emô_libgëc
() {

544 
	`u∆_emô
("``s`d`@k");

545 
c
 = 1; c < 256; c++) {

546 
	`u∆_emô
(
S2
);

547 
	`u∆_emô
(
S2
);

548 
	`u∆_emô
("`d");

549 
	`u∆_emô
("`?");

550 
	`putch¨
(
c
);

551 
	`putch¨
('i');

552 
	`u∆_emô
(
K1
);

553 
	`u∆_emô_numbî2
(
c
);

555 
	`u∆_emô
(
S2
);

556 
	`putch¨
('i');

557 
	`u∆_emô
(
K1
);

558 
	`u∆_emô_numbî2
(0);

559 
	}
}

561 
	$u∆_emô_libs
() {

562 
	`u∆_li°_begö
(1);

563 
	`u∆_emô_libputc
();

564 
	`u∆_li°_begö
(0);

565 
	`u∆_emô_libgëc
();

566 
	`u∆_li°_íd
();

567 
	}
}

569 
	$u∆_emô_c‹e
() {

570 
	`u∆_emô
(
u∆_c‹e
);

571 
	`u∆_emô_libs
();

572 
	`putch¨
('\n');

573 
	}
}

575 
	$èrgë_u∆
(
ModuÀ
* 
moduÀ
) {

576 
	`u∆_emô_tick
(2);

577 
	`¥ötf
("# VM core\n");

578 
	`u∆_emô_c‹e
();

579 
	`¥ötf
("# instructions\n");

580 
	`u∆_emô_ãxt
(
moduÀ
->
ãxt
);

581 
	`¥ötf
("# data\n");

582 
	`u∆_emô_d©a
(
moduÀ
->
d©a
);

583 
	`putch¨
('\n');

584 
	}
}

	@target/unlcore.h

3 
	gu∆_c‹e
[] =

	@target/util.c

1 
	~<èrgë/utû.h
>

3 
	~<°d¨g.h
>

4 
	~<°dboﬁ.h
>

5 
	~<°dio.h
>

6 
	~<°dlib.h
>

7 
	~<°rög.h
>

9 * 
	$vf‹m©
(c⁄° * 
fmt
, 
va_li°
 
≠
) {

10 
buf
[256];

11 
	`v¢¥ötf
(
buf
, 255, 
fmt
, 
≠
);

12 
buf
[255] = 0;

13  
	`°rdup
(
buf
);

14 
	}
}

16 * 
	$f‹m©
(c⁄° * 
fmt
, ...) {

17 
va_li°
 
≠
;

18 
	`va_°¨t
(
≠
, 
fmt
);

19 * 
r
 = 
	`vf‹m©
(
fmt
, 
≠
);

20 
	`va_íd
(
≠
);

21  
r
;

22 
	}
}

24 
	$îr‹
(c⁄° * 
fmt
, ...) {

25 
va_li°
 
≠
;

26 
	`va_°¨t
(
≠
, 
fmt
);

27 * 
r
 = 
	`vf‹m©
(
fmt
, 
≠
);

28 
	`va_íd
(
≠
);

29 
	`Ârötf
(
°dîr
, "%s\n", 
r
);

30 
	`exô
(1);

31 
	}
}

33 
	gg_ödít
;

35 
	$öc_ödít
() {

36 
g_ödít
++;

37 
	}
}

39 
	$dec_ödít
() {

40 
g_ödít
--;

41 
	}
}

43 
	$emô_löe
(c⁄° * 
fmt
, ...) {

44 i‡(
fmt
[0]) {

45 
i
 = 0; i < 
g_ödít
; i++)

46 
	`putch¨
(' ');

47 
va_li°
 
≠
;

48 
	`va_°¨t
(
≠
, 
fmt
);

49 
	`v¥ötf
(
fmt
, 
≠
);

50 
	`va_íd
(
≠
);

52 
	`putch¨
('\n');

53 
	}
}

55 c⁄° * 
	gDEFAULT_REG_NAMES
[7] = {

59 c⁄° ** 
	gªg_«mes
 = 
DEFAULT_REG_NAMES
;

61 c⁄° * 
	$vÆue_°r
(
VÆue
* 
v
) {

62 i‡(
v
->
ty≥
 =
REG
) {

63  
ªg_«mes
[
v
->
ªg
];

64 } i‡(
v
->
ty≥
 =
IMM
) {

65  
	`f‹m©
("%d", 
v
->
imm
);

67 
	`îr‹
("invalid value");

69 
	}
}

71 c⁄° * 
	$§c_°r
(
In°
* 
ö°
) {

72  
	`vÆue_°r
(&
ö°
->
§c
);

73 
	}
}

75 
Op
 
	$n‹mÆize_c⁄d
(
Op
 
›
, 
boﬁ
 
Êù
) {

76 i‡(
›
 >= 16)

77 
›
 -= 8;

78 i‡(
Êù
) {

79 c⁄° 
Op
 
TBL
[] = {

80 
JNE
, 
JEQ
, 
JGE
, 
JLE
, 
JGT
, 
JLT
, 
JMP


82 
›
 = 
TBL
[›-
JEQ
];

84  (
Op
)
›
;

85 
	}
}

87 c⁄° * 
	$cmp_°r
(
In°
* 
ö°
, c⁄° * 
åue_°r
) {

88 
›
 = 
	`n‹mÆize_c⁄d
(
ö°
->op, 0);

89 c⁄° * 
›_°r
;

90 
›
) {

91 
JEQ
:

92 
›_°r
 = "=="; ;

93 
JNE
:

94 
›_°r
 = "!="; ;

95 
JLT
:

96 
›_°r
 = "<"; ;

97 
JGT
:

98 
›_°r
 = ">"; ;

99 
JLE
:

100 
›_°r
 = "<="; ;

101 
JGE
:

102 
›_°r
 = ">="; ;

103 
JMP
:

104  
åue_°r
;

106 
	`îr‹
("oops");

108  
	`f‹m©
("%†%†%s", 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
›_°r
, 
	`§c_°r
(inst));

109 
	}
}

111 
	gg_emô_˙t
;

112 
boﬁ
 
	gg_emô_°¨ãd
;

114 
	$emô_˙t
() {

115  
g_emô_˙t
;

116 
	}
}

118 
	$emô_ª£t
() {

119 
g_emô_˙t
 = 0;

120 
g_emô_°¨ãd
 = 
Ál£
;

121 
	}
}

123 
	$emô_°¨t
() {

124 
g_emô_°¨ãd
 = 
åue
;

125 
	}
}

127 
	$emô_1
(
a
) {

128 
g_emô_˙t
++;

129 i‡(
g_emô_°¨ãd
)

130 
	`putch¨
(
a
);

131 
	}
}

133 
	$emô_2
(
a
, 
b
) {

134 
	`emô_1
(
a
);

135 
	`emô_1
(
b
);

136 
	}
}

138 
	$emô_3
(
a
, 
b
, 
c
) {

139 
	`emô_1
(
a
);

140 
	`emô_1
(
b
);

141 
	`emô_1
(
c
);

142 
	}
}

144 
	$emô_4
(
a
, 
b
, 
c
, 
d
) {

145 
	`emô_1
(
a
);

146 
	`emô_1
(
b
);

147 
	`emô_1
(
c
);

148 
	`emô_1
(
d
);

149 
	}
}

151 
	$emô_5
(
a
, 
b
, 
c
, 
d
, 
e
) {

152 
	`emô_1
(
a
);

153 
	`emô_1
(
b
);

154 
	`emô_1
(
c
);

155 
	`emô_1
(
d
);

156 
	`emô_1
(
e
);

157 
	}
}

159 
	$emô_6
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
) {

160 
	`emô_1
(
a
);

161 
	`emô_1
(
b
);

162 
	`emô_1
(
c
);

163 
	`emô_1
(
d
);

164 
	`emô_1
(
e
);

165 
	`emô_1
(
f
);

166 
	}
}

168 
	$emô_À
(
uöt32_t
 
a
) {

169 
	`emô_1
(
a
 % 256);

170 
a
 /= 256;

171 
	`emô_1
(
a
 % 256);

172 
a
 /= 256;

173 
	`emô_1
(
a
 % 256);

174 
a
 /= 256;

175 
	`emô_1
(
a
);

176 
	}
}

178 
	$emô_diff
(
uöt32_t
 
a
, uöt32_à
b
) {

179 
uöt32_t
 
v
 = 
a
 - 
b
;

180 
	`emô_1
(
v
 % 256);

181 
v
 /= 256;

182 
	`emô_1
(
v
 % 256);

183 
v
 /= 256;

184 
	`emô_1
(
v
 % 256);

185 
	`emô_1
(
a
 >
b
 ? 0 : 0xff);

186 
	}
}

188 
	gCHUNKED_FUNC_SIZE
 = 512;

190 
	$emô_chunked_maö_lo›
(
In°
* 
ö°
,

191 (*
emô_func_¥ﬁogue
)(
func_id
),

192 (*
emô_func_ïûogue
)(),

193 (*
emô_pc_ch™ge
)(
pc
),

194 (*
emô_ö°
)(
In°
* 
ö°
)) {

195 
¥ev_pc
 = -1;

196 
¥ev_func_id
 = -1;

197 ; 
ö°
; in° = in°->
√xt
) {

198 
func_id
 = 
ö°
->
pc
 / 
CHUNKED_FUNC_SIZE
;

199 i‡(
¥ev_pc
 !
ö°
->
pc
) {

200 i‡(
¥ev_func_id
 !
func_id
) {

201 i‡(
¥ev_func_id
 != -1) {

202 
	`emô_func_ïûogue
();

204 
	`emô_func_¥ﬁogue
(
func_id
);

207 
	`emô_pc_ch™ge
(
ö°
->
pc
);

209 
¥ev_pc
 = 
ö°
->
pc
;

210 
¥ev_func_id
 = 
func_id
;

212 
	`emô_ö°
(
ö°
);

214 
	`emô_func_ïûogue
();

215  
¥ev_func_id
 + 1;

216 
	}
}

218 
	#PACK2
(
x
Ë((xË% 256), ((xË/ 256)

	)

219 
	#PACK4
(
x
Ë((xË% 256), ((xË/ 256 % 256), ((xË/ 65536), 0

	)

221 
	$emô_ñf_hódî
(
uöt16_t
 
machöe
, 
uöt32_t
 
fûesz
) {

222 c⁄° 
ehdr
[52] = {

226 
	`PACK2
(2),

227 
	`PACK2
(
machöe
),

228 
	`PACK4
(1),

229 
	`PACK4
(
ELF_TEXT_START
 + 
ELF_HEADER_SIZE
),

230 
	`PACK4
(52),

231 
	`PACK4
(0),

232 
	`PACK4
(0),

233 
	`PACK2
(52),

234 
	`PACK2
(32),

235 
	`PACK2
(1),

236 
	`PACK2
(40),

237 
	`PACK2
(0),

238 
	`PACK2
(0),

240 c⁄° 
phdr
[32] = {

241 
	`PACK4
(1),

242 
	`PACK4
(0),

243 
	`PACK4
(
ELF_TEXT_START
),

244 
	`PACK4
(
ELF_TEXT_START
),

245 
	`PACK4
(
fûesz
 + 
ELF_HEADER_SIZE
),

246 
	`PACK4
(
fûesz
 + 
ELF_HEADER_SIZE
),

247 
	`PACK4
(5),

248 
	`PACK4
(0x1000),

250 
	`fwrôe
(
ehdr
, 52, 1, 
°dout
);

251 
	`fwrôe
(
phdr
, 32, 1, 
°dout
);

252 
	}
}

	@target/util.h

1 #i‚de‡
ELVM_UTIL_H_


2 
	#ELVM_UTIL_H_


	)

4 
	~<°d¨g.h
>

5 
	~<°dboﬁ.h
>

6 
	~<°döt.h
>

8 
	~<ú/ú.h
>

10 
uöt32_t
 
	tuöt
;

11 
uöt8_t
 
	tbyã
;

13 c⁄° 
	gELF_TEXT_START
 = 0x100000;

14 c⁄° 
	gELF_HEADER_SIZE
 = 84;

16 * 
vf‹m©
(c⁄° * 
fmt
, 
va_li°
 
≠
);

17 * 
f‹m©
(c⁄° * 
fmt
, ...);

19 #ifde‡
__GNUC__


20 
__©åibuã__
((
n‹ëu∫
))

22 
îr‹
(c⁄° * 
fmt
, ...);

24 
öc_ödít
();

25 
dec_ödít
();

26 
emô_löe
(c⁄° * 
fmt
, ...);

28 
Op
 
n‹mÆize_c⁄d
(O∞
›
, 
boﬁ
 
Êù
);

29 c⁄° ** 
ªg_«mes
;

30 c⁄° * 
vÆue_°r
(
VÆue
* 
v
);

31 c⁄° * 
§c_°r
(
In°
* 
ö°
);

32 c⁄° * 
cmp_°r
(
In°
* 
ö°
, c⁄° * 
åue_°r
);

34 
emô_˙t
();

35 
emô_ª£t
();

36 
emô_°¨t
();

37 
emô_1
(
a
);

38 
emô_2
(
a
, 
b
);

39 
emô_3
(
a
, 
b
, 
c
);

40 
emô_4
(
a
, 
b
, 
c
, 
d
);

41 
emô_5
(
a
, 
b
, 
c
, 
d
, 
e
);

42 
emô_6
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
);

43 
emô_À
(
uöt32_t
 
a
);

44 
emô_diff
(
uöt32_t
 
a
, uöt32_à
b
);

46 
CHUNKED_FUNC_SIZE
;

48 
emô_chunked_maö_lo›
(
In°
* 
ö°
,

49 (*
emô_func_¥ﬁogue
)(
func_id
),

50 (*
emô_func_ïûogue
)(),

51 (*
emô_pc_ch™ge
)(
pc
),

52 (*
emô_ö°
)(
In°
* 
ö°
));

54 
	`emô_ñf_hódî
(
uöt16_t
 
machöe
, 
uöt32_t
 
fûesz
);

	@target/vim.c

1 
	~<ú/ú.h
>

2 
	~<èrgë/utû.h
>

4 c⁄° * 
	gREG_NAMES_VIM
[] = {

8 
	$öô_°©e_vim
(
D©a
* 
d©a
) {

9 
ªg_«mes
 = 
REG_NAMES_VIM
;

10 
i
 = 0; i < 7; i++) {

11 
	`emô_löe
("Àà%†0", 
ªg_«mes
[
i
]);

13 
	`emô_löe
("let s:mem =Ñepeat([0], 16777216)");

14 
mp
 = 0; 
d©a
; d©®d©a->
√xt
, mp++) {

15 i‡(
d©a
->
v
) {

16 
	`emô_löe
("Ààs:mem[%d] = %d", 
mp
, 
d©a
->
v
);

22 
	`emô_löe
("let s:input = map(split(join(getline(1, '$'), \"\\n\"), '\\zs'), 'char2nr(v:val)')");

23 
	`emô_löe
("let s:ic = 0");

24 
	`emô_löe
("let s:output = []");

27 
	`emô_löe
("normal! dG");

28 
	}
}

30 
	$vim_emô_func_¥ﬁogue
(
func_id
) {

31 
	`emô_löe
("");

32 
	`emô_löe
("fun˘i⁄! Func%d()", 
func_id
);

33 
	`öc_ödít
();

34 
	`emô_löe
("while %d <= s:pc && s:pc < %d",

35 
func_id
 * 
CHUNKED_FUNC_SIZE
, (func_id + 1) * CHUNKED_FUNC_SIZE);

36 
	`öc_ödít
();

37 
	`emô_löe
("if 0");

38 
	`öc_ödít
();

39 
	}
}

41 
	$vim_emô_func_ïûogue
() {

42 
	`dec_ödít
();

43 
	`emô_löe
("endif");

44 
	`emô_löe
("let s:pc += 1");

45 
	`dec_ödít
();

46 
	`emô_löe
("endwhile");

47 
	`dec_ödít
();

48 
	`emô_löe
("endfunction");

49 
	}
}

51 
	$vim_emô_pc_ch™ge
(
pc
) {

52 
	`emô_löe
("");

53 
	`dec_ödít
();

54 
	`emô_löe
("ñ£i‡s:p¯=%d", 
pc
);

55 
	`öc_ödít
();

56 
	}
}

58 
	$vim_emô_ö°
(
In°
* 
ö°
) {

59 
ö°
->
›
) {

60 
MOV
:

61 
	`emô_löe
("Àà%†%s", 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
	`§c_°r
(inst));

64 
ADD
:

65 
	`emô_löe
("Àà%†™d((%†+ %s), " 
UINT_MAX_STR
 ")",

66 
ªg_«mes
[
ö°
->
d°
.
ªg
],

67 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
	`§c_°r
(inst));

70 
SUB
:

71 
	`emô_löe
("Àà%†™d((%†- %s), " 
UINT_MAX_STR
 ")",

72 
ªg_«mes
[
ö°
->
d°
.
ªg
],

73 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
	`§c_°r
(inst));

76 
LOAD
:

77 
	`emô_löe
("Àà%†s:mem[%s]", 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
	`§c_°r
(inst));

80 
STORE
:

81 
	`emô_löe
("Ààs:mem[%s] = %s", 
	`§c_°r
(
ö°
), 
ªg_«mes
[ö°->
d°
.
ªg
]);

84 
PUTC
:

87 
	`emô_löe
("Ààs:ouçuà+[%s]", 
	`§c_°r
(
ö°
));

90 
GETC
:

94 
	`emô_löe
("Àà%†Àn(s:öputË<s:i¯? 0 : s:öput[s:ic]", 
ªg_«mes
[
ö°
->
d°
.
ªg
]);

95 
	`emô_löe
("let s:ic += 1");

98 
EXIT
:

103 
	`emô_löe
("ifÜen(s:output) == 0 |Ñeturn 1 |Éndif");

106 
	`emô_löe
("let s:lines = ['']");

107 
	`emô_löe
("for s:ch in s:output");

108 
	`öc_ödít
();

109 
	`emô_löe
("if s:ch == 10");

110 
	`öc_ödít
();

111 
	`emô_löe
("let s:lines += ['']");

112 
	`dec_ödít
();

113 
	`emô_löe
("else");

114 
	`öc_ödít
();

117 
	`emô_löe
("let s:lines[len(s:lines)-1] .=Çr2char(s:ch == 0 ? 10 : s:ch)");

118 
	`dec_ödít
();

119 
	`emô_löe
("endif");

120 
	`emô_löe
("unlet s:ch");

121 
	`dec_ödít
();

122 
	`emô_löe
("endfor");

128 
	`emô_löe
("call setline(1, s:lines)");

129 
	`emô_löe
("return 1");

132 
DUMP
:

135 
EQ
:

136 
NE
:

137 
LT
:

138 
GT
:

139 
LE
:

140 
GE
:

141 
	`emô_löe
("let %s = %s ? 1 : 0",

142 
ªg_«mes
[
ö°
->
d°
.
ªg
], 
	`cmp_°r
(inst, "1"));

145 
JEQ
:

146 
JNE
:

147 
JLT
:

148 
JGT
:

149 
JLE
:

150 
JGE
:

151 
JMP
:

152 
	`emô_löe
("i‡%s", 
	`cmp_°r
(
ö°
, "1"));

153 
	`öc_ödít
();

154 
	`emô_löe
("Ààs:p¯%†- 1", 
	`vÆue_°r
(&
ö°
->
jmp
));

155 
	`dec_ödít
();

156 
	`emô_löe
("endif");

160 
	`îr‹
("oops");

162 
	}
}

164 
	$èrgë_vim
(
ModuÀ
* 
moduÀ
) {

165 
	`öô_°©e_vim
(
moduÀ
->
d©a
);

166 
	`emô_löe
("");

168 
num_funcs
 = 
	`emô_chunked_maö_lo›
(
moduÀ
->
ãxt
,

169 
vim_emô_func_¥ﬁogue
,

170 
vim_emô_func_ïûogue
,

171 
vim_emô_pc_ch™ge
,

172 
vim_emô_ö°
);

174 
	`emô_löe
("");

175 
	`emô_löe
("while 1");

176 
	`öc_ödít
();

177 
	`emô_löe
("if 0");

178 
i
 = 0; i < 
num_funcs
; i++) {

179 
	`emô_löe
("ñ£i‡s:p¯< %d", (
i
 + 1Ë* 
CHUNKED_FUNC_SIZE
);

180 
	`öc_ödít
();

182 
	`emô_löe
("i‡Func%d(Ë| bªak |Éndif", 
i
);

183 
	`dec_ödít
();

185 
	`emô_löe
("endif");

186 
	`dec_ödít
();

187 
	`emô_löe
("endwhile");

188 
	}
}

	@target/ws.c

3 
	~<°dboﬁ.h
>

5 
	~<ú/ú.h
>

6 
	~<èrgë/utû.h
>

8 c⁄° 
	gMEM
 = 8;

10 
	$mem
(
a
Ë{  
MEM
 +á; 
	}
}

13 
	mWS_PUSH
,

14 
	mWS_DUP
,

15 
	mWS_COPY
,

16 
	mWS_SWAP
,

17 
	mWS_DISCARD
,

18 
	mWS_SLIDE
,

20 
	mWS_ADD
,

21 
	mWS_SUB
,

22 
	mWS_MUL
,

23 
	mWS_DIV
,

24 
	mWS_MOD
,

26 
	mWS_STORE
,

27 
	mWS_RETRIEVE
,

29 
	mWS_MARK
,

30 
	mWS_CALL
,

31 
	mWS_JMP
,

32 
	mWS_JZ
,

33 
	mWS_JN
,

34 
	mWS_RET
,

35 
	mWS_EXIT
,

37 
	mWS_PUTC
,

38 
	mWS_PUTINT
,

39 
	mWS_GETC
,

40 
	mWS_GETINT
,

41 } 
	tWsOp
;

43 c⁄° * 
	gWS_OPS
[] = {

74 
	$ws_emô_°r
(c⁄° * 
s
) {

75 
	`Âuts
(
s
, 
°dout
);

76 
	}
}

78 
	$ws_emô_num
(
v
) {

79 
buf
[40];

80 
i
 = 39;

81 
buf
[
i
--] = 0;

82 
buf
[
i
--] = '\n';

84 
buf
[
i
--] = " \t"[
v
 % 2];

85 
v
 /= 2;

86 } 
v
);

87 
buf
[
i
] = ' ';

88 
	`ws_emô_°r
(&
buf
[
i
]);

89 
	}
}

91 
	$ws_emô_uöt_mod_ws
() {

92 
	`putch¨
(' ');

93 
	`putch¨
('\t');

94 
i
 = 0; i < 24; i++)

95 
	`putch¨
(' ');

96 
	`putch¨
('\n');

97 
	}
}

99 
	$ws_emô
(
WsOp
 
›
) {

100 
	`ws_emô_°r
(
WS_OPS
[
›
]);

101 
	}
}

103 
	$ws_emô_›
(
WsOp
 
›
, 
a
) {

104 
	`ws_emô
(
›
);

105 
	`ws_emô_num
(
a
);

106 
	}
}

108 
	$ws_emô_loˇl_jmp
(
WsOp
 
›
, 
l
) {

109 
	`ws_emô
(
›
);

110 
	`ws_emô_num
(
l
);

111 
	}
}

113 
	$ws_emô_°‹e
(
addr
, 
vÆ
) {

114 
	`ws_emô_›
(
WS_PUSH
, 
addr
);

115 
	`ws_emô_›
(
WS_PUSH
, 
vÆ
);

116 
	`ws_emô
(
WS_STORE
);

117 
	}
}

119 
	$ws_emô_ªåõve
(
addr
) {

120 
	`ws_emô_›
(
WS_PUSH
, 
addr
);

121 
	`ws_emô
(
WS_RETRIEVE
);

122 
	}
}

124 
	$ws_emô_vÆue
(
VÆue
* 
v
, 
off
) {

125 i‡(
v
->
ty≥
 =
REG
) {

126 
	`ws_emô_ªåõve
(
v
->
ªg
);

127 i‡(
off
) {

128 
	`ws_emô_›
(
WS_PUSH
, 
off
);

129 
	`ws_emô
(
WS_ADD
);

132 
	`ws_emô_›
(
WS_PUSH
, 
v
->
imm
 + 
off
);

134 
	}
}

136 
	$ws_emô_§c
(
In°
* 
ö°
, 
off
) {

137 
	`ws_emô_vÆue
(&
ö°
->
§c
, 
off
);

138 
	}
}

140 
	$ws_emô_addsub
(
In°
* 
ö°
, 
WsOp
 
›
) {

141 
	`ws_emô_›
(
WS_PUSH
, 
ö°
->
d°
.
ªg
);

142 
	`ws_emô_ªåõve
(
ö°
->
d°
.
ªg
);

143 
	`ws_emô_§c
(
ö°
, 0);

144 
	`ws_emô
(
›
);

145 
	`ws_emô
(
WS_PUSH
); 
	`ws_emô_uöt_mod_ws
();

146 
	`ws_emô
(
WS_ADD
);

147 
	`ws_emô
(
WS_PUSH
); 
	`ws_emô_uöt_mod_ws
();

148 
	`ws_emô
(
WS_MOD
);

149 
	`ws_emô
(
WS_STORE
);

150 
	}
}

152 
	$ws_emô_cmp_ws
(
In°
* 
ö°
, 
Êù
, * 
œbñ
) {

153 
lf
 = ++*
œbñ
;

154 
…
 = ++*
œbñ
;

155 
ld
 = ++*
œbñ
;

156 
›
 = 
	`n‹mÆize_c⁄d
(
ö°
->›, 
Êù
);

158 i‡(
›
 =
JGT
 || o∞=
JLE
) {

159 
›
 = o∞=
JGT
 ? 
JLT
 : 
JGE
;

160 
	`ws_emô_§c
(
ö°
, 0);

161 
	`ws_emô_ªåõve
(
ö°
->
d°
.
ªg
);

163 
	`ws_emô_ªåõve
(
ö°
->
d°
.
ªg
);

164 
	`ws_emô_§c
(
ö°
, 0);

166 
	`ws_emô
(
WS_SUB
);

168 
›
) {

169 
JEQ
:

170 
	`ws_emô_loˇl_jmp
(
WS_JZ
, 
…
);

171 
	`ws_emô_loˇl_jmp
(
WS_JMP
, 
lf
);

174 
JNE
:

175 
	`ws_emô_loˇl_jmp
(
WS_JZ
, 
lf
);

176 
	`ws_emô_loˇl_jmp
(
WS_JMP
, 
…
);

179 
JLT
:

180 
	`ws_emô_loˇl_jmp
(
WS_JN
, 
…
);

181 
	`ws_emô_loˇl_jmp
(
WS_JMP
, 
lf
);

184 
JGE
:

185 
	`ws_emô_loˇl_jmp
(
WS_JN
, 
lf
);

186 
	`ws_emô_loˇl_jmp
(
WS_JMP
, 
…
);

190 
	`îr‹
("o›†%d", 
›
);

193 
	`ws_emô_›
(
WS_MARK
, 
…
);

194 
	`ws_emô_›
(
WS_PUSH
, 1);

195 
	`ws_emô_›
(
WS_JMP
, 
ld
);

196 
	`ws_emô_›
(
WS_MARK
, 
lf
);

197 
	`ws_emô_›
(
WS_PUSH
, 0);

198 
	`ws_emô_›
(
WS_MARK
, 
ld
);

199 
	}
}

201 
	$ws_emô_jmp
(
In°
* 
ö°
, 
WsOp
 
›
, 
ªg_jmp
) {

202 i‡(
ö°
->
jmp
.
ty≥
 =
REG
) {

203 
	`ws_emô_ªåõve
(
ö°
->
jmp
.
ªg
);

204 i‡(
›
 !
WS_JMP
) {

205 
	`ws_emô
(
WS_SWAP
);

207 
	`ws_emô_›
(
›
, 
ªg_jmp
);

209 
	`ws_emô_›
(
›
, 
ö°
->
jmp
.
imm
);

211 
	}
}

213 
	$ws_emô_ªg_jmp_èbÀ
(
mö_pc
, 
max_pc
, 
œ°_œbñ
) {

214 i‡(
mö_pc
 + 1 =
max_pc
) {

215 
	`ws_emô
(
WS_DISCARD
);

216 
	`ws_emô_›
(
WS_JMP
, 
mö_pc
);

220 
mid_pc
 = (
mö_pc
 + 
max_pc
) / 2;

221 
	`ws_emô
(
WS_DUP
);

222 
	`ws_emô_›
(
WS_PUSH
, 
mid_pc
);

223 
	`ws_emô
(
WS_SUB
);

224 
	`ws_emô_›
(
WS_JN
, 
œ°_œbñ
 + 
mid_pc
);

225 
	`ws_emô_ªg_jmp_èbÀ
(
mid_pc
, 
max_pc
, 
œ°_œbñ
);

226 
	`ws_emô_›
(
WS_MARK
, 
œ°_œbñ
 + 
mid_pc
);

227 
	`ws_emô_ªg_jmp_èbÀ
(
mö_pc
, 
mid_pc
, 
œ°_œbñ
);

228 
	}
}

230 
	$öô_°©e_ws
(
D©a
* 
d©a
) {

231 
i
 = 0; i < 7; i++) {

232 
	`ws_emô_°‹e
(
i
, 0);

234 
mp
 = 0; 
d©a
; d©®d©a->
√xt
, mp++) {

235 
	`ws_emô_°‹e
(
	`mem
(
mp
), 
d©a
->
v
);

237 
	}
}

239 
	$èrgë_ws
(
ModuÀ
* 
moduÀ
) {

240 
	`öô_°©e_ws
(
moduÀ
->
d©a
);

242 
œbñ
 = 0;

243 
In°
* 
ö°
 = 
moduÀ
->
ãxt
; in°; in° = in°->
√xt
) {

244 
œbñ
 = 
ö°
->
pc
;

246 
ªg_jmp
 = ++
œbñ
;

248 
¥ev_pc
 = -1;

249 
In°
* 
ö°
 = 
moduÀ
->
ãxt
; in°; in° = in°->
√xt
) {

250 i‡(
¥ev_pc
 !
ö°
->
pc
) {

251 
	`ws_emô_›
(
WS_MARK
, 
ö°
->
pc
);

253 
¥ev_pc
 = 
ö°
->
pc
;

255 
ö°
->
›
) {

256 
MOV
:

257 
	`ws_emô_›
(
WS_PUSH
, 
ö°
->
d°
.
ªg
);

258 
	`ws_emô_§c
(
ö°
, 0);

259 
	`ws_emô
(
WS_STORE
);

262 
ADD
:

263 
	`ws_emô_addsub
(
ö°
, 
WS_ADD
);

266 
SUB
:

267 
	`ws_emô_addsub
(
ö°
, 
WS_SUB
);

270 
LOAD
:

271 
	`ws_emô_›
(
WS_PUSH
, 
ö°
->
d°
.
ªg
);

272 
	`ws_emô_§c
(
ö°
, 8);

273 
	`ws_emô
(
WS_RETRIEVE
);

274 
	`ws_emô
(
WS_STORE
);

277 
STORE
:

278 
	`ws_emô_§c
(
ö°
, 8);

279 
	`ws_emô_ªåõve
(
ö°
->
d°
.
ªg
);

280 
	`ws_emô
(
WS_STORE
);

283 
PUTC
:

284 
	`ws_emô_§c
(
ö°
, 0);

285 
	`ws_emô
(
WS_PUTC
);

288 
GETC
:

289 
	`ws_emô_›
(
WS_PUSH
, 
ö°
->
d°
.
ªg
);

290 
	`ws_emô
(
WS_GETC
);

293 
EXIT
:

294 
	`ws_emô
(
WS_EXIT
);

297 
DUMP
:

300 
EQ
:

301 
NE
:

302 
LT
:

303 
GT
:

304 
LE
:

305 
GE
:

306 
	`ws_emô_›
(
WS_PUSH
, 
ö°
->
d°
.
ªg
);

307 
	`ws_emô_cmp_ws
(
ö°
, 0, &
œbñ
);

308 
	`ws_emô
(
WS_STORE
);

311 
JEQ
:

312 
JNE
:

313 
JLT
:

314 
JGT
:

315 
JLE
:

316 
JGE
:

317 
	`ws_emô_cmp_ws
(
ö°
, 1, &
œbñ
);

318 
	`ws_emô_jmp
(
ö°
, 
WS_JZ
, 
ªg_jmp
);

321 
JMP
:

322 
	`ws_emô_jmp
(
ö°
, 
WS_JMP
, 
ªg_jmp
);

326 
	`îr‹
("oops");

330 
	`ws_emô_›
(
WS_MARK
, 
ªg_jmp
);

331 
	`ws_emô_ªg_jmp_èbÀ
(0, 
ªg_jmp
, 
œbñ
);

332 
	}
}

	@target/x86.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

4 
	~<ú/ú.h
>

5 
	~<èrgë/utû.h
>

7 
	gREGNO
[] = {

18 
	#EDI
 
SP


	)

19 
	#ESI
 ((
Reg
)6)

	)

20 
	#ESP
 ((
Reg
)7)

	)

22 
	$emô_öt80
() {

23 
	`emô_2
(0xcd, 0x80);

24 
	}
}

26 
	$modr
(
Reg
 
d°
, Reg 
§c
) {

27  0xc0 + 
REGNO
[
d°
] + (REGNO[
§c
] * 8);

28 
	}
}

30 
	$emô_ªg2
(
Reg
 
d°
, Reg 
§c
) {

31 
	`emô_1
(
	`modr
(
d°
, 
§c
));

32 
	}
}

34 
	$emô_zîo_ªg
(
Reg
 
r
) {

35 
	`emô_2
(0x31, 
	`modr
(
r
,Ñ));

36 
	}
}

38 
	$emô_mov_ªg
(
Reg
 
d°
, Reg 
§c
) {

39 
	`emô_1
(0x89);

40 
	`emô_ªg2
(
d°
, 
§c
);

41 
	}
}

43 
	$emô_mov_imm
(
Reg
 
d°
, 
§c
) {

44 
	`emô_1
(0xb8 + 
REGNO
[
d°
]);

45 
	`emô_À
(
§c
);

46 
	}
}

48 
	$emô_mov
(
Reg
 
d°
, 
VÆue
* 
§c
) {

49 i‡(
§c
->
ty≥
 =
REG
) {

50 
	`emô_mov_ªg
(
d°
, 
§c
->
ªg
);

52 
	`emô_mov_imm
(
d°
, 
§c
->
imm
);

54 
	}
}

56 
	$emô_cmp_x86
(
In°
* 
ö°
) {

57 i‡(
ö°
->
§c
.
ty≥
 =
REG
) {

58 
	`emô_2
(0x39, 
	`modr
(
ö°
->
d°
.
ªg
, in°->
§c
.reg));

60 
	`emô_2
(0x81, 0xf8 + 
REGNO
[
ö°
->
d°
.
ªg
]);

61 
	`emô_À
(
ö°
->
§c
.
imm
);

63 
	}
}

65 
	$emô_£tcc
(
In°
* 
ö°
, 
›
) {

66 
	`emô_cmp_x86
(
ö°
);

67 
	`emô_mov_imm
(
ö°
->
d°
.
ªg
, 0);

68 
	`emô_3
(0x0f, 
›
, 0xc0 + 
REGNO
[
ö°
->
d°
.
ªg
]);

69 
	}
}

71 
	$emô_jcc
(
In°
* 
ö°
, 
›
, * 
pc2addr
, 
rod©a_addr
) {

72 i‡(
›
) {

73 
	`emô_cmp_x86
(
ö°
);

74 
	`emô_2
(
›
, 
ö°
->
jmp
.
ty≥
 =
REG
 ? 7 : 5);

77 i‡(
ö°
->
jmp
.
ty≥
 =
REG
) {

78 
	`emô_3
(0xff, 0x24, 0x85 + (
REGNO
[
ö°
->
jmp
.
ªg
] * 8));

79 
	`emô_À
(
rod©a_addr
);

81 
	`emô_1
(0xe9);

82 
	`emô_diff
(
pc2addr
[
ö°
->
jmp
.
imm
], 
	`emô_˙t
() + 4);

84 
	}
}

86 
	$öô_°©e_x86
(
D©a
* 
d©a
) {

87 
	`emô_mov_imm
(
B
, 0);

89 
	`emô_5
(0xb8 + 
REGNO
[
C
], 0, 0, 0, 4);

90 
	`emô_mov_imm
(
D
, 3);

91 
	`emô_mov_imm
(
ESI
, 0x22);

93 
	`emô_5
(0xb8 + 
REGNO
[
EDI
], 0xff, 0xff, 0xff, 0xff);

94 
	`emô_mov_imm
(
BP
, 0);

95 
	`emô_mov_imm
(
A
, 192);

96 
	`emô_öt80
();

98 
	`emô_mov_ªg
(
ESI
, 
A
);

100 
mp
 = 0; 
d©a
; d©®d©a->
√xt
, mp++) {

101 i‡(
d©a
->
v
) {

103 
	`emô_2
(0xc7, 0x80);

104 
	`emô_À
(
mp
 * 4);

105 
	`emô_À
(
d©a
->
v
);

110 
	`emô_5
(0xb8 + 
REGNO
[
SP
], 0, 0, 0, 1);

111 
	`emô_zîo_ªg
(
A
);

112 
	`emô_zîo_ªg
(
B
);

113 
	`emô_zîo_ªg
(
C
);

114 
	`emô_zîo_ªg
(
D
);

115 
	`emô_zîo_ªg
(
BP
);

116 
	}
}

118 
	$x86_emô_ö°
(
In°
* 
ö°
, * 
pc2addr
, 
rod©a_addr
) {

119 
ö°
->
›
) {

120 
MOV
:

121 
	`emô_mov
(
ö°
->
d°
.
ªg
, &ö°->
§c
);

124 
ADD
:

125 i‡(
ö°
->
§c
.
ty≥
 =
REG
) {

126 
	`emô_1
(0x01);

127 
	`emô_ªg2
(
ö°
->
d°
.
ªg
, in°->
§c
.reg);

129 
	`emô_2
(0x81, 0xc0 + 
REGNO
[
ö°
->
d°
.
ªg
]);

130 
	`emô_À
(
ö°
->
§c
.
imm
);

132 
	`emô_2
(0x81, 0xe0 + 
REGNO
[
ö°
->
d°
.
ªg
]);

133 
	`emô_À
(0xffffff);

136 
SUB
:

137 i‡(
ö°
->
§c
.
ty≥
 =
REG
) {

138 
	`emô_1
(0x29);

139 
	`emô_ªg2
(
ö°
->
d°
.
ªg
, in°->
§c
.reg);

141 
	`emô_2
(0x81, 0xe8 + 
REGNO
[
ö°
->
d°
.
ªg
]);

142 
	`emô_À
(
ö°
->
§c
.
imm
);

144 
	`emô_2
(0x81, 0xe0 + 
REGNO
[
ö°
->
d°
.
ªg
]);

145 
	`emô_À
(0xffffff);

148 
LOAD
:

149 
	`emô_1
(0x8b);

150 
°‹e_lﬂd_comm⁄
;

152 
STORE
:

153 
	`emô_1
(0x89);

154 
°‹e_lﬂd_comm⁄
:

155 i‡(
ö°
->
§c
.
ty≥
 =
REG
) {

156 
	`emô_2
(4 + (
REGNO
[
ö°
->
d°
.
ªg
] * 8),

157 0x86 + (
REGNO
[
ö°
->
§c
.
ªg
] * 8));

159 
	`emô_1
(0x86 + (
REGNO
[
ö°
->
d°
.
ªg
] * 8));

160 
	`emô_À
(
ö°
->
§c
.
imm
 * 4);

164 
PUTC
:

166 
	`emô_1
(0x57);

167 
	`emô_mov
(
EDI
, &
ö°
->
§c
);

169 
	`emô_5
(0x50, 0x51, 0x52, 0x53, 0x57);

170 
	`emô_mov_imm
(
B
, 1);

171 
	`emô_mov_ªg
(
C
, 
ESP
);

172 
	`emô_mov_imm
(
D
, 1);

173 
	`emô_mov_imm
(
A
, 4);

174 
	`emô_öt80
();

176 
	`emô_5
(0x5f, 0x5b, 0x5a, 0x59, 0x58);

178 
	`emô_1
(0x5f);

181 
GETC
:

183 
	`emô_1
(0x57);

185 
	`emô_4
(0x50, 0x51, 0x52, 0x53);

187 
	`emô_2
(0x6a, 0x00);

188 
	`emô_mov_imm
(
B
, 0);

189 
	`emô_mov_ªg
(
C
, 
ESP
);

190 
	`emô_mov_imm
(
D
, 1);

191 
	`emô_mov_imm
(
A
, 3);

192 
	`emô_öt80
();

195 
	`emô_1
(0x5f);

196 
	`emô_mov_imm
(
B
, 0);

198 
	`emô_3
(0x83, 0xf8, 0x01);

200 
	`emô_3
(0x0f, 0x45, 0xfb);

203 
	`emô_4
(0x5b, 0x5a, 0x59, 0x58);

204 
	`emô_mov_ªg
(
ö°
->
d°
.
ªg
, 
EDI
);

206 
	`emô_1
(0x5f);

209 
EXIT
:

210 
	`emô_mov_imm
(
B
, 0);

211 
	`emô_mov_imm
(
A
, 1);

212 
	`emô_öt80
();

215 
DUMP
:

218 
EQ
:

219 
	`emô_£tcc
(
ö°
, 0x94);

222 
NE
:

223 
	`emô_£tcc
(
ö°
, 0x95);

226 
LT
:

227 
	`emô_£tcc
(
ö°
, 0x9c);

230 
GT
:

231 
	`emô_£tcc
(
ö°
, 0x9f);

234 
LE
:

235 
	`emô_£tcc
(
ö°
, 0x9e);

238 
GE
:

239 
	`emô_£tcc
(
ö°
, 0x9d);

242 
JEQ
:

243 
	`emô_jcc
(
ö°
, 0x75, 
pc2addr
, 
rod©a_addr
);

246 
JNE
:

247 
	`emô_jcc
(
ö°
, 0x74, 
pc2addr
, 
rod©a_addr
);

250 
JLT
:

251 
	`emô_jcc
(
ö°
, 0x7d, 
pc2addr
, 
rod©a_addr
);

254 
JGT
:

255 
	`emô_jcc
(
ö°
, 0x7e, 
pc2addr
, 
rod©a_addr
);

258 
JLE
:

259 
	`emô_jcc
(
ö°
, 0x7f, 
pc2addr
, 
rod©a_addr
);

262 
JGE
:

263 
	`emô_jcc
(
ö°
, 0x7c, 
pc2addr
, 
rod©a_addr
);

266 
JMP
:

267 
	`emô_jcc
(
ö°
, 0, 
pc2addr
, 
rod©a_addr
);

271 
	`îr‹
("oops");

273 
	}
}

275 
	$èrgë_x86
(
ModuÀ
* 
moduÀ
) {

276 
	`emô_ª£t
();

277 
	`öô_°©e_x86
(
moduÀ
->
d©a
);

279 
pc_˙t
 = 0;

280 
In°
* 
ö°
 = 
moduÀ
->
ãxt
; in°; in° = in°->
√xt
) {

281 
pc_˙t
++;

284 * 
pc2addr
 = 
	`ˇŒoc
(
pc_˙t
, ());

285 
¥ev_pc
 = -1;

286 
In°
* 
ö°
 = 
moduÀ
->
ãxt
; in°; in° = in°->
√xt
) {

287 i‡(
¥ev_pc
 !
ö°
->
pc
) {

288 
pc2addr
[
ö°
->
pc
] = 
	`emô_˙t
();

290 
¥ev_pc
 = 
ö°
->
pc
;

291 
	`x86_emô_ö°
(
ö°
, 
pc2addr
, 0);

294 
rod©a_addr
 = 
ELF_TEXT_START
 + 
	`emô_˙t
(Ë+ 
ELF_HEADER_SIZE
;

296 
	`emô_ñf_hódî
(3, 
	`emô_˙t
(Ë+ 
pc_˙t
 * 4);

298 
	`emô_ª£t
();

299 
	`emô_°¨t
();

300 
	`öô_°©e_x86
(
moduÀ
->
d©a
);

302 
In°
* 
ö°
 = 
moduÀ
->
ãxt
; in°; in° = in°->
√xt
) {

303 
	`x86_emô_ö°
(
ö°
, 
pc2addr
, 
rod©a_addr
);

306 
i
 = 0; i < 
pc_˙t
; i++) {

307 
	`emô_À
(
ELF_TEXT_START
 + 
pc2addr
[
i
] + 
ELF_HEADER_SIZE
);

309 
	}
}

	@
1
.
0
156
2460
8cc/8cc.h
8cc/buffer.c
8cc/cpp.c
8cc/debug.c
8cc/dict.c
8cc/encoding.c
8cc/error.c
8cc/file.c
8cc/gen.c
8cc/include/float.h
8cc/include/iso646.h
8cc/include/stdalign.h
8cc/include/stdarg.h
8cc/include/stdbool.h
8cc/include/stddef.h
8cc/include/stdnoreturn.h
8cc/lex.c
8cc/main.c
8cc/map.c
8cc/parse.c
8cc/path.c
8cc/set.c
8cc/test/align.c
8cc/test/arith.c
8cc/test/array.c
8cc/test/assign.c
8cc/test/bitop.c
8cc/test/builtin.c
8cc/test/cast.c
8cc/test/comp.c
8cc/test/constexpr.c
8cc/test/control.c
8cc/test/conversion.c
8cc/test/decl.c
8cc/test/enum.c
8cc/test/extern.c
8cc/test/float.c
8cc/test/funcargs.c
8cc/test/function.c
8cc/test/generic.c
8cc/test/global.c
8cc/test/import.c
8cc/test/import.h
8cc/test/includeguard.c
8cc/test/includeguard1.h
8cc/test/includeguard2.h
8cc/test/includeguard3.h
8cc/test/includeguard4.h
8cc/test/includeguard5.h
8cc/test/includeguard6.h
8cc/test/includeguard7.h
8cc/test/initializer.c
8cc/test/int.c
8cc/test/iso646.c
8cc/test/lex.c
8cc/test/line.c
8cc/test/literal.c
8cc/test/macro.c
8cc/test/macro1.h
8cc/test/macro2.h
8cc/test/noreturn.c
8cc/test/number.c
8cc/test/oldstyle.c
8cc/test/once.h
8cc/test/pointer.c
8cc/test/scope.c
8cc/test/sizeof.c
8cc/test/staticassert.c
8cc/test/stmtexpr.c
8cc/test/struct.c
8cc/test/test.h
8cc/test/testmain.c
8cc/test/type.c
8cc/test/typeof.c
8cc/test/union.c
8cc/test/usualconv.c
8cc/test/varargs.c
8cc/utiltest.c
8cc/vector.c
ir/dump_ir.c
ir/eli.c
ir/ir.c
ir/ir.h
ir/table.c
ir/table.h
libc/_builtin.h
libc/_raw_print.h
libc/assert.h
libc/ctype.h
libc/errno.h
libc/inttypes.h
libc/libgen.h
libc/limits.h
libc/locale.h
libc/math.h
libc/setjmp.h
libc/stdarg.h
libc/stdbool.h
libc/stddef.h
libc/stdint.h
libc/stdio.h
libc/stdlib.h
libc/string.h
libc/strings.h
libc/sys/stat.h
libc/sys/types.h
libc/sys/wait.h
libc/time.h
libc/unistd.h
target/arm.c
target/asmjs.c
target/bef.c
target/bf.c
target/c.c
target/cl.c
target/cpp.c
target/cpp_template.c
target/cpp_template_lib.h
target/cr.c
target/cs.c
target/el.c
target/elc.c
target/forth.c
target/fs.c
target/go.c
target/hs.c
target/i.c
target/java.c
target/js.c
target/ll.c
target/lua.c
target/php.c
target/piet.c
target/pietasm.c
target/pl.c
target/post_tag.c
target/ps.c
target/py.c
target/rb.c
target/scala.c
target/scm_sr.c
target/scm_sr_lib.h
target/sed.c
target/sh.c
target/sqlite3.c
target/swift.c
target/tex.c
target/tf.c
target/tm.c
target/unl.c
target/unlcore.h
target/util.c
target/util.h
target/vim.c
target/ws.c
target/x86.c
